{
  "systemName" : "hazelcast",
  "classes" : [ {
    "name" : "DefaultMessageTaskFactoryProvider",
    "packageName" : "com.hazelcast.client.impl.protocol",
    "extendedClasses" : [ ],
    "implementedInterfaces" : [ "MessageTaskFactoryProvider" ],
    "methods" : [ {
      "name" : "getFactories",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "initFactories",
      "visibility" : "public",
      "methodCalls" : [ "put" ]
    } ],
    "imports" : [ "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapRemoveMessageTask", "com.hazelcast.client.impl.protocol.task.management.ApplyClientFilteringConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.MapUnlockCodec", "com.hazelcast.client.impl.protocol.codec.ClientAddClusterViewListenerCodec", "com.hazelcast.internal.longregister.client.task.LongRegisterGetAndAddMessageTask", "com.hazelcast.client.impl.protocol.codec.CardinalityEstimatorEstimateCodec", "com.hazelcast.client.impl.protocol.codec.MCTriggerForceStartCodec", "com.hazelcast.client.impl.protocol.codec.MCResetQueueAgeStatisticsCodec", "com.hazelcast.client.impl.protocol.codec.MapPutTransientCodec", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddWanReplicationConfigTask", "com.hazelcast.client.impl.protocol.codec.QueuePeekCodec", "com.hazelcast.client.impl.protocol.task.set.SetSizeMessageTask", "com.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferTailSequenceMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapValuesMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapPutIfAbsentMessageTask", "com.hazelcast.client.impl.protocol.codec.QueueOfferCodec", "com.hazelcast.client.impl.protocol.task.set.SetClearMessageTask", "com.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferReadManyMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheRemoveEntryListenerCodec", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddReplicatedMapConfigMessageTask", "com.hazelcast.internal.longregister.client.task.LongRegisterDecrementAndGetMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheSizeCodec", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapIsEmptyMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapLoadAllMessageTask", "com.hazelcast.client.impl.protocol.codec.MapExecuteWithPredicateCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheRemoveInvalidationListenerMessageTask", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddQueueConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.QueueRemainingCapacityCodec", "com.hazelcast.client.impl.protocol.codec.CacheIterateEntriesCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheIterateMessageTask", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddListConfigCodec", "com.hazelcast.client.impl.protocol.codec.CacheRemoveInvalidationListenerCodec", "com.hazelcast.client.impl.protocol.codec.SetClearCodec", "com.hazelcast.client.impl.protocol.task.transactionalmultimap.TransactionalMultiMapValueCountMessageTask", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddQueueConfigCodec", "com.hazelcast.client.impl.protocol.task.RemovePartitionLostListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.QueueClearCodec", "com.hazelcast.client.impl.protocol.task.management.QueueResetAgeStatisticsMessageTask", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapContainsValueCodec", "com.hazelcast.client.impl.protocol.codec.MultiMapRemoveEntryListenerCodec", "com.hazelcast.client.impl.protocol.codec.ClientFetchSchemaCodec", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapValuesCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheAddNearCacheInvalidationListenerTask", "com.hazelcast.client.impl.protocol.codec.MCReadMetricsCodec", "com.hazelcast.client.impl.protocol.task.management.GetSystemPropertiesMessageTask", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorGetStatsFromMemberCodec", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskIsDoneFromTargetMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueueCompareAndRetainAllMessageTask", "com.hazelcast.client.impl.protocol.task.transactionallist.TransactionalListAddMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionCommitCodec", "com.hazelcast.client.impl.protocol.codec.PNCounterGetCodec", "com.hazelcast.client.impl.protocol.codec.MapLoadGivenKeysCodec", "com.hazelcast.client.impl.protocol.task.set.SetCompareAndRetainAllMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapSizeMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalListAddCodec", "com.hazelcast.client.impl.protocol.task.list.ListAddWithIndexMessageTask", "com.hazelcast.client.impl.protocol.codec.ClientLocalBackupListenerCodec", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapGetMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapContainsKeyMessageTask", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddDurableExecutorConfigCodec", "com.hazelcast.client.impl.protocol.task.map.MapPutAllWithMetadataMessageTask", "com.hazelcast.client.impl.protocol.task.AddMigrationListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalSetSizeCodec", "com.hazelcast.client.impl.protocol.task.management.ChangeClusterStateMessageTask", "com.hazelcast.client.impl.protocol.codec.QueueCompareAndRemoveAllCodec", "com.hazelcast.client.impl.protocol.task.transactionallist.TransactionalListRemoveMessageTask", "com.hazelcast.client.impl.protocol.task.AddBackupListenerMessageTask", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapGetMessageTask", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapRemoveEntryListenerMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueueRemoveMessageTask", "com.hazelcast.client.impl.protocol.codec.MapEventJournalReadCodec", "com.hazelcast.client.impl.protocol.codec.MapPutIfAbsentWithMaxIdleCodec", "com.hazelcast.client.impl.protocol.codec.MapAggregateWithPredicateCodec", "com.hazelcast.client.impl.protocol.codec.ContinuousQueryPublisherCreateWithValueCodec", "com.hazelcast.client.impl.protocol.task.executorservice.durable.DurableExecutorDisposeResultMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapReplaceAllMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapEventJournalReadTask", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorSubmitToPartitionCodec", "com.hazelcast.client.impl.protocol.task.transactionalmultimap.TransactionalMultiMapGetMessageTask", "com.hazelcast.internal.longregister.client.task.LongRegisterGetMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapTryLockMessageTask", "com.hazelcast.client.impl.protocol.codec.QueueCompareAndRetainAllCodec", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapContainsValueMessageTask", "com.hazelcast.client.impl.protocol.codec.MapFetchKeysCodec", "com.hazelcast.client.impl.protocol.task.set.SetAddMessageTask", "com.hazelcast.client.impl.protocol.codec.ListCompareAndRetainAllCodec", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorIsCancelledFromPartitionCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMapPutCodec", "com.hazelcast.client.impl.protocol.codec.SetRemoveListenerCodec", "com.hazelcast.client.impl.protocol.task.map.MapPutIfAbsentWithMaxIdleMessageTask", "com.hazelcast.client.impl.protocol.codec.ClientCreateProxiesCodec", "com.hazelcast.client.impl.protocol.codec.CacheRemoveAllKeysCodec", "com.hazelcast.client.impl.protocol.codec.MultiMapUnlockCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMultiMapSizeCodec", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapRemoveMessageTask", "com.hazelcast.client.impl.protocol.task.management.PromoteLiteMemberMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueueDrainMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueueClearMessageTask", "com.hazelcast.client.impl.protocol.codec.ContinuousQueryDestroyCacheCodec", "com.hazelcast.client.impl.protocol.task.AddPartitionLostListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorShutdownCodec", "com.hazelcast.client.impl.protocol.task.transactionalqueue.TransactionalQueueSizeMessageTask", "com.hazelcast.client.impl.protocol.task.set.SetAddAllMessageTask", "com.hazelcast.client.impl.protocol.codec.MultiMapContainsValueCodec", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddDataConnectionConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.MapProjectWithPredicateCodec", "com.hazelcast.client.impl.protocol.task.executorservice.ExecutorServiceShutdownMessageTask", "com.hazelcast.client.impl.protocol.task.management.MatchClientFilteringConfigMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapFetchNearCacheInvalidationMetadataTask", "com.hazelcast.client.impl.protocol.task.map.MapDestroyCacheMessageTask", "com.hazelcast.client.impl.protocol.task.management.DemoteDataMemberMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapValuesMessageTask", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapAddNearCacheEntryListenerCodec", "com.hazelcast.client.impl.protocol.task.map.MapPutMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapReplaceIfSameMessageTask", "com.hazelcast.client.impl.protocol.codec.SetRemoveCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheSizeMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalMapPutIfAbsentCodec", "com.hazelcast.client.impl.protocol.codec.MapSetTtlCodec", "com.hazelcast.client.impl.protocol.codec.XATransactionCommitCodec", "com.hazelcast.client.impl.protocol.codec.CacheClearCodec", "com.hazelcast.client.impl.protocol.task.map.MapAddEntryListenerWithPredicateMessageTask", "com.hazelcast.client.impl.protocol.task.management.SetDiagnosticsConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.DurableExecutorRetrieveAndDisposeResultCodec", "com.hazelcast.client.impl.protocol.task.map.MapRemoveInterceptorMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheCreateConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.ListAddListenerCodec", "com.hazelcast.sql.impl.client.SqlCloseMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapFetchWithQueryMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalMapValuesCodec", "com.hazelcast.client.impl.protocol.task.management.CheckWanConsistencyMessageTask", "com.hazelcast.client.impl.protocol.codec.MapTryRemoveCodec", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapAddEntryListenerWithPredicateCodec", "com.hazelcast.client.impl.protocol.codec.PNCounterAddCodec", "com.hazelcast.client.impl.protocol.task.map.MapValuesWithPagingPredicateMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheListenerRegistrationCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalQueuePeekCodec", "com.hazelcast.client.impl.protocol.task.list.ListSubMessageTask", "com.hazelcast.client.impl.protocol.codec.RingbufferAddAllCodec", "com.hazelcast.client.impl.protocol.codec.ContinuousQueryMadePublishableCodec", "com.hazelcast.client.impl.protocol.codec.ListIsEmptyCodec", "com.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferCapacityMessageTask", "com.hazelcast.client.impl.protocol.codec.MultiMapEntrySetCodec", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorCancelFromPartitionCodec", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapRemoveIfSameMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapSizeMessageTask", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapContainsKeyCodec", "com.hazelcast.client.impl.protocol.codec.MCChangeClusterVersionCodec", "com.hazelcast.client.impl.protocol.task.transactionalset.TransactionalSetAddMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapValuesMessageTask", "com.hazelcast.client.impl.protocol.codec.MapAggregateCodec", "com.hazelcast.client.impl.protocol.codec.ListContainsCodec", "com.hazelcast.client.impl.protocol.task.management.ShutdownMemberMessageTask", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapFetchEntryViewsMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapPutAllMessageTask", "com.hazelcast.client.impl.protocol.task.management.ChangeClusterVersionMessageTask", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapEntrySetCodec", "com.hazelcast.flakeidgen.impl.client.NewIdBatchMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalListSizeCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMapReplaceIfSameCodec", "com.hazelcast.client.impl.protocol.task.transactionalqueue.TransactionalQueuePollMessageTask", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddPNCounterConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorIsCancelledFromMemberCodec", "com.hazelcast.client.impl.protocol.task.queue.QueueTakeMessageTask", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddWanReplicationConfigCodec", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorCancelFromMemberCodec", "com.hazelcast.client.impl.protocol.task.map.MapPutTransientMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapReplaceMessageTask", "com.hazelcast.client.impl.protocol.codec.MapEntrySetCodec", "com.hazelcast.client.impl.protocol.codec.MCApplyMCConfigCodec", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddSetConfigCodec", "com.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferAddMessageTask", "com.hazelcast.client.impl.protocol.task.list.ListListIteratorMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionCreateCodec", "com.hazelcast.client.impl.protocol.codec.SetIsEmptyCodec", "com.hazelcast.client.impl.protocol.codec.MapTryLockCodec", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapPutMessageTask", "com.hazelcast.client.impl.protocol.codec.MapExecuteOnAllKeysCodec", "com.hazelcast.client.impl.protocol.task.executorservice.durable.DurableExecutorIsShutdownMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheEventJournalReadCodec", "com.hazelcast.client.impl.protocol.codec.CacheAddPartitionLostListenerCodec", "com.hazelcast.client.impl.protocol.codec.MapPutWithMaxIdleCodec", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapContainsValueMessageTask", "com.hazelcast.client.impl.protocol.codec.SetCompareAndRemoveAllCodec", "com.hazelcast.client.impl.protocol.codec.ExecutorServiceShutdownCodec", "com.hazelcast.client.impl.protocol.codec.SetGetAllCodec", "com.hazelcast.client.impl.protocol.codec.ContinuousQueryPublisherCreateCodec", "com.hazelcast.client.impl.protocol.task.queue.QueueIteratorMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueueOfferMessageTask", "com.hazelcast.client.impl.protocol.task.executorservice.ExecutorServiceCancelOnPartitionMessageTask", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddMapConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalMapSetCodec", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorGetDelayFromPartitionCodec", "com.hazelcast.client.impl.protocol.codec.ListSizeCodec", "com.hazelcast.client.impl.protocol.codec.ClientAuthenticationCustomCodec", "com.hazelcast.client.impl.protocol.task.transactionalmultimap.TransactionalMultiMapSizeMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapKeySetMessageTask", "com.hazelcast.client.impl.protocol.task.set.SetRemoveMessageTask", "com.hazelcast.client.impl.protocol.codec.QueueRemoveCodec", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapEntrySetMessageTask", "com.hazelcast.client.impl.protocol.codec.SqlCloseCodec", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddListConfigMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapAddIndexMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheFetchNearCacheInvalidationMetadataCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheGetConfigMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheAddPartitionLostListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheSetExpiryPolicyCodec", "com.hazelcast.internal.longregister.client.codec.LongRegisterIncrementAndGetCodec", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddCardinalityEstimatorConfigMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapClearMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheSetExpiryPolicyMessageTask", "com.hazelcast.client.impl.protocol.task.transaction.XACollectTransactionsMessageTask", "com.hazelcast.client.impl.protocol.codec.ListSubCodec", "com.hazelcast.client.impl.protocol.task.map.MapAddEntryListenerToKeyMessageTask", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapAddNearCacheListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.ListCompareAndRemoveAllCodec", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapLockMessageTask", "com.hazelcast.client.impl.protocol.task.management.RunGcMessageTask", "com.hazelcast.client.impl.protocol.task.ClientTpcAuthenticationMessageTask", "com.hazelcast.client.impl.protocol.task.list.ListCompareAndRetainAllMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapRemoveMessageTask", "com.hazelcast.client.impl.protocol.task.list.ListIndexOfMessageTask", "com.hazelcast.client.impl.protocol.codec.MultiMapTryLockCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMultiMapPutCodec", "com.hazelcast.client.impl.protocol.codec.SqlExecuteCodec", "com.hazelcast.client.impl.protocol.codec.SetAddListenerCodec", "com.hazelcast.client.impl.protocol.codec.ListRemoveListenerCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMapContainsKeyCodec", "com.hazelcast.client.impl.protocol.task.map.MapAddEntryListenerToKeyWithPredicateMessageTask", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapContainsKeyMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheAddEntryListenerMessageTask", "com.hazelcast.client.impl.protocol.task.RemoveDistributedObjectListenerMessageTask", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddExecutorConfigMessageTask", "com.hazelcast.sql.impl.client.SqlFetchMessageTask", "com.hazelcast.sql.impl.client.SqlMappingDdlTask", "com.hazelcast.client.impl.protocol.codec.MapRemovePartitionLostListenerCodec", "com.hazelcast.client.impl.protocol.codec.RingbufferRemainingCapacityCodec", "com.hazelcast.client.impl.protocol.codec.ExecutorServiceCancelOnPartitionCodec", "com.hazelcast.client.impl.protocol.codec.CachePutAllCodec", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapAddEntryListenerToKeyWithPredicateCodec", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapGetForUpdateMessageTask", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapAddEntryListenerMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueueAddListenerMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapAggregateMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheDestroyCodec", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskCancelFromPartitionMessageTask", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddReliableTopicConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.SetAddCodec", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddRingbufferConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.QueueDrainToCodec", "com.hazelcast.client.impl.protocol.codec.MultiMapAddEntryListenerCodec", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapClearMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheEventJournalSubscribeTask", "com.hazelcast.client.impl.protocol.codec.ExecutorServiceIsShutdownCodec", "com.hazelcast.client.impl.protocol.task.transactionallist.TransactionalListSizeMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueueRemoveListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalSetAddCodec", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapPutMessageTask", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorGetResultFromPartitionCodec", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorGetStatsFromPartitionCodec", "com.hazelcast.client.impl.protocol.task.PingMessageTask", "com.hazelcast.client.impl.protocol.codec.ListRemoveCodec", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorIsDoneFromMemberCodec", "com.hazelcast.client.impl.protocol.task.transactionalqueue.TransactionalQueuePeekMessageTask", "com.hazelcast.client.impl.protocol.codec.DurableExecutorDisposeResultCodec", "com.hazelcast.client.impl.protocol.task.list.ListAddMessageTask", "com.hazelcast.client.impl.protocol.codec.MapAddInterceptorCodec", "com.hazelcast.client.impl.protocol.task.map.MapRemoveIfSameMessageTask", "com.hazelcast.client.impl.protocol.task.management.HotRestartTriggerBackupMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapPutTransientWithMaxIdleMessageTask", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddFlakeIdGeneratorConfigCodec", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorDisposeFromMemberCodec", "com.hazelcast.client.impl.protocol.task.transaction.XATransactionCommitMessageTask", "com.hazelcast.client.impl.protocol.task.management.RunScriptMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalset.TransactionalSetSizeMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheGetMessageTask", "com.hazelcast.client.impl.protocol.task.AuthenticationMessageTask", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapAddEntryListenerCodec", "com.hazelcast.client.impl.protocol.codec.SetContainsCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMapRemoveIfSameCodec", "com.hazelcast.client.impl.protocol.task.map.MapEntriesWithPredicateMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapValuesWithPredicateMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapIsLockedMessageTask", "com.hazelcast.client.impl.protocol.task.DestroyProxyMessageTask", "com.hazelcast.client.impl.protocol.codec.MapReplaceAllCodec", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskIsCancelledFromTargetMessageTask", "com.hazelcast.client.impl.protocol.task.AddClusterViewListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheGetCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMapDeleteCodec", "com.hazelcast.client.impl.protocol.codec.MapAddNearCacheInvalidationListenerCodec", "com.hazelcast.client.impl.protocol.codec.MCGetTimedMemberStateCodec", "com.hazelcast.client.impl.protocol.task.map.MapFlushMessageTask", "com.hazelcast.client.impl.protocol.codec.MCRunConsoleCommandCodec", "com.hazelcast.client.impl.protocol.codec.MCUpdateConfigCodec", "com.hazelcast.client.impl.protocol.codec.MapGetCodec", "com.hazelcast.client.impl.protocol.codec.MapExecuteOnKeyCodec", "com.hazelcast.client.impl.protocol.codec.ClientAuthenticationCodec", "com.hazelcast.client.impl.protocol.codec.MapReplaceCodec", "com.hazelcast.client.impl.protocol.task.map.MapSetMessageTask", "com.hazelcast.client.impl.protocol.codec.CachePutIfAbsentCodec", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddExecutorConfigCodec", "com.hazelcast.client.impl.protocol.codec.MultiMapContainsEntryCodec", "com.hazelcast.client.impl.protocol.task.map.MapAddEntryListenerMessageTask", "com.hazelcast.client.impl.protocol.task.list.ListCompareAndRemoveAllMessageTask", "com.hazelcast.client.impl.protocol.codec.MCShutdownClusterCodec", "com.hazelcast.client.impl.protocol.task.map.MapFetchKeysMessageTask", "com.hazelcast.client.impl.protocol.codec.MapReplaceIfSameCodec", "com.hazelcast.client.impl.protocol.codec.MultiMapKeySetCodec", "com.hazelcast.client.impl.protocol.codec.MCReloadConfigCodec", "com.hazelcast.client.impl.protocol.codec.ClientTriggerPartitionAssignmentCodec", "com.hazelcast.client.impl.protocol.task.schema.FetchSchemaMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapKeySetWithPredicateMessageTask", "com.hazelcast.client.impl.protocol.codec.MapSetCodec", "com.hazelcast.internal.util.collection.Int2ObjectHashMap", "com.hazelcast.client.impl.protocol.codec.QueueTakeCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalQueueOfferCodec", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapIsEmptyCodec", "com.hazelcast.client.impl.protocol.task.management.AddWanBatchPublisherConfigMessageTask", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddUserCodeNamespaceConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.MapRemoveInterceptorCodec", "com.hazelcast.client.impl.protocol.codec.CacheContainsKeyCodec", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskDisposeFromTargetMessageTask", "com.hazelcast.client.impl.protocol.codec.MapKeySetWithPredicateCodec", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapAddEntryListenerToKeyCodec", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddTopicConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.QueuePutCodec", "com.hazelcast.client.impl.protocol.codec.ListAddAllWithIndexCodec", "com.hazelcast.client.impl.protocol.task.cache.CachePutIfAbsentMessageTask", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddMultiMapConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.ListIteratorCodec", "com.hazelcast.client.impl.protocol.codec.MapAddEntryListenerToKeyWithPredicateCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheContainsKeyMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapGetMessageTask", "com.hazelcast.client.impl.protocol.task.topic.TopicPublishAllMessageTask", "com.hazelcast.client.impl.protocol.codec.MultiMapLockCodec", "com.hazelcast.client.impl.protocol.codec.MapPutAllCodec", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskIsCancelledFromPartitionMessageTask", "com.hazelcast.client.impl.protocol.task.ClientStatisticsMessageTask", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddCacheConfigMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapSetMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueueRemainingCapacityMessageTask", "com.hazelcast.client.impl.protocol.codec.MCTriggerPartialStartCodec", "com.hazelcast.client.impl.protocol.task.management.ChangeWanReplicationStateMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalMultiMapRemoveEntryCodec", "com.hazelcast.client.impl.protocol.codec.ListGetAllCodec", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapEntrySetMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueueSizeMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalQueuePollCodec", "com.hazelcast.client.impl.protocol.task.schema.SendAllSchemasMessageTask", "com.hazelcast.client.impl.protocol.codec.RingbufferHeadSequenceCodec", "com.hazelcast.client.impl.protocol.codec.MapFetchWithQueryCodec", "com.hazelcast.client.impl.protocol.codec.SetCompareAndRetainAllCodec", "com.hazelcast.client.impl.protocol.codec.MapRemoveCodec", "com.hazelcast.client.impl.protocol.codec.MapKeySetCodec", "com.hazelcast.client.impl.protocol.codec.CardinalityEstimatorAddCodec", "com.hazelcast.client.impl.protocol.codec.ClientAddPartitionLostListenerCodec", "com.hazelcast.client.impl.protocol.codec.MultiMapGetCodec", "com.hazelcast.client.impl.protocol.codec.QueueAddAllCodec", "com.hazelcast.client.impl.protocol.codec.DurableExecutorRetrieveResultCodec", "com.hazelcast.client.impl.protocol.task.map.MapExecuteOnKeysMessageTask", "com.hazelcast.client.impl.protocol.task.list.ListRemoveWithIndexMessageTask", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddDurableExecutorConfigMessageTask", "com.hazelcast.client.impl.protocol.task.cardinality.CardinalityEstimatorAddMessageTask", "com.hazelcast.client.impl.protocol.codec.XATransactionCollectTransactionsCodec", "com.hazelcast.client.impl.protocol.codec.QueueIteratorCodec", "com.hazelcast.client.impl.protocol.codec.TopicPublishCodec", "com.hazelcast.client.impl.protocol.codec.MultiMapRemoveEntryCodec", "com.hazelcast.client.impl.protocol.codec.MapAddIndexCodec", "com.hazelcast.client.impl.protocol.task.map.MapAddListenerMessageTask", "com.hazelcast.client.impl.protocol.task.list.ListAddAllMessageTask", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddMapConfigCodec", "com.hazelcast.client.impl.protocol.codec.ListSetCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMultiMapGetCodec", "com.hazelcast.client.impl.protocol.codec.MCRunScriptCodec", "com.hazelcast.client.impl.protocol.task.map.MapExecuteOnKeyMessageTask", "com.hazelcast.client.impl.protocol.codec.MapContainsValueCodec", "com.hazelcast.client.impl.protocol.task.set.SetContainsAllMessageTask", "com.hazelcast.client.impl.protocol.codec.MCRunGcCodec", "com.hazelcast.client.impl.protocol.codec.DurableExecutorIsShutdownCodec", "com.hazelcast.client.impl.protocol.codec.ListIndexOfCodec", "com.hazelcast.client.impl.protocol.codec.MapPutIfAbsentCodec", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapClearCodec", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapKeySetMessageTask", "com.hazelcast.client.impl.protocol.codec.ClientDeployClassesCodec", "edu.umd.cs.findbugs.annotations.SuppressFBWarnings", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapSizeCodec", "com.hazelcast.client.impl.protocol.task.map.MapAddPartitionLostListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheEventJournalSubscribeCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMapKeySetWithPredicateCodec", "com.hazelcast.client.impl.protocol.codec.CacheGetAndReplaceCodec", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorShutdownMessageTask", "com.hazelcast.client.impl.protocol.codec.MapRemoveAllCodec", "com.hazelcast.client.impl.protocol.task.map.MapPublisherCreateMessageTask", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddScheduledExecutorConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.RingbufferCapacityCodec", "com.hazelcast.internal.longregister.client.codec.LongRegisterGetAndIncrementCodec", "com.hazelcast.client.impl.protocol.codec.XATransactionRollbackCodec", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapEndEntryViewIterationMessageTask", "com.hazelcast.client.impl.protocol.codec.RingbufferReadOneCodec", "com.hazelcast.client.impl.protocol.codec.MCMatchMCConfigCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMapIsEmptyCodec", "com.hazelcast.client.impl.protocol.task.crdt.pncounter.PNCounterGetMessageTask", "com.hazelcast.client.impl.protocol.codec.XATransactionFinalizeCodec", "com.hazelcast.internal.longregister.client.codec.LongRegisterDecrementAndGetCodec", "com.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferHeadSequenceMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapAddEntryListenerMessageTask", "com.hazelcast.client.impl.protocol.task.executorservice.ExecutorServiceIsShutdownMessageTask", "com.hazelcast.client.impl.protocol.task.list.ListRemoveMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapDeleteMessageTask", "com.hazelcast.client.impl.protocol.codec.RingbufferReadManyCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheGetAndReplaceMessageTask", "com.hazelcast.client.impl.protocol.task.list.ListGetAllMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalmultimap.TransactionalMultiMapRemoveEntryMessageTask", "com.hazelcast.client.impl.protocol.codec.QueueIsEmptyCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalQueueSizeCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheManagementConfigMessageTask", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskGetStatisticsFromPartitionMessageTask", "com.hazelcast.client.impl.protocol.codec.MapSetWithMaxIdleCodec", "com.hazelcast.client.impl.protocol.task.cache.CachePutAllMessageTask", "com.hazelcast.client.impl.protocol.task.management.ClearWanQueuesMessageTask", "com.hazelcast.client.impl.protocol.codec.ListListIteratorCodec", "com.hazelcast.client.impl.protocol.task.transaction.XATransactionPrepareMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapAddNearCacheInvalidationListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.ClientRemoveDistributedObjectListenerCodec", "com.hazelcast.client.impl.protocol.codec.CacheRemovePartitionLostListenerCodec", "com.hazelcast.client.impl.protocol.task.map.MapGetEntryViewMessageTask", "com.hazelcast.client.impl.protocol.codec.MapFlushCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMapValuesWithPredicateCodec", "com.hazelcast.client.impl.protocol.task.crdt.pncounter.PNCounterAddMessageTask", "com.hazelcast.client.impl.protocol.codec.MapValuesWithPagingPredicateCodec", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapReplaceIfSameMessageTask", "com.hazelcast.client.impl.protocol.codec.DurableExecutorSubmitToPartitionCodec", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapTryLockMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapRemoveEntryListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheGetConfigCodec", "com.hazelcast.client.impl.protocol.task.set.SetAddListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.MCPromoteLiteMemberCodec", "com.hazelcast.client.impl.protocol.task.map.MapUnlockMessageTask", "com.hazelcast.client.impl.protocol.codec.XATransactionPrepareCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheGetAllMessageTask", "com.hazelcast.client.impl.protocol.codec.MCGetSystemPropertiesCodec", "com.hazelcast.client.impl.protocol.task.map.MapRemovePartitionLostListenerMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapProjectionMessageTask", "com.hazelcast.client.impl.protocol.task.management.GetMemberConfigMessageTask", "com.hazelcast.sql.impl.client.SqlExecuteMessageTask", "com.hazelcast.client.impl.protocol.task.topic.TopicRemoveMessageListenerMessageTask", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskGetResultFromTargetMessageTask", "com.hazelcast.client.impl.protocol.task.CreateProxyMessageTask", "com.hazelcast.client.impl.protocol.codec.MapEntriesWithPredicateCodec", "com.hazelcast.client.impl.protocol.codec.MCTriggerHotRestartBackupCodec", "com.hazelcast.client.impl.protocol.codec.ListAddWithIndexCodec", "com.hazelcast.client.impl.protocol.task.topic.TopicAddMessageListenerMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapRemoveEntryMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapValuesWithPredicateMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapFetchEntriesMessageTask", "com.hazelcast.client.impl.protocol.codec.MapRemoveIfSameCodec", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorDisposeFromPartitionCodec", "com.hazelcast.client.impl.protocol.codec.ExecutorServiceCancelOnMemberCodec", "com.hazelcast.client.impl.protocol.codec.ClientTpcAuthenticationCodec", "com.hazelcast.client.impl.protocol.task.management.GetClusterMetadataMessageTask", "com.hazelcast.client.impl.protocol.task.RemoveMigrationListenerMessageTask", "com.hazelcast.client.impl.protocol.task.transaction.TransactionCommitMessageTask", "com.hazelcast.internal.longregister.client.task.LongRegisterGetAndSetMessageTask", "com.hazelcast.client.impl.protocol.task.transaction.XAFinalizeTransactionMessageTask", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskGetDelayFromPartitionMessageTask", "com.hazelcast.client.impl.protocol.task.list.ListGetMessageTask", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapPutMessageTask", "com.hazelcast.client.impl.protocol.codec.ClientCreateProxyCodec", "com.hazelcast.client.impl.protocol.task.map.MapKeySetMessageTask", "com.hazelcast.client.impl.protocol.task.set.SetCompareAndRemoveAllMessageTask", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskCancelFromTargetMessageTask", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddUserCodeNamespaceConfigCodec", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddCacheConfigCodec", "com.hazelcast.client.impl.protocol.codec.CacheLoadAllCodec", "com.hazelcast.client.impl.protocol.codec.MCGetThreadDumpCodec", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorGetResultFromMemberCodec", "com.hazelcast.client.impl.protocol.codec.MapGetEntryViewCodec", "com.hazelcast.client.impl.protocol.task.list.ListContainsMessageTask", "com.hazelcast.client.impl.protocol.task.management.HotRestartTriggerPartialStartMessageTask", "com.hazelcast.client.impl.protocol.task.transaction.XATransactionCreateMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalmultimap.TransactionalMultiMapPutMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapLockMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheEventJournalReadTask", "com.hazelcast.client.impl.protocol.task.map.MapRemoveAllMessageTask", "com.hazelcast.client.impl.protocol.codec.MapFetchEntriesCodec", "com.hazelcast.client.impl.protocol.codec.ListGetCodec", "com.hazelcast.client.impl.protocol.task.set.SetGetAllMessageTask", "com.hazelcast.client.impl.protocol.task.list.ListContainsAllMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalMapSizeCodec", "com.hazelcast.client.impl.protocol.task.cardinality.CardinalityEstimatorEstimateMessageTask", "com.hazelcast.client.impl.protocol.task.executorservice.ExecutorServiceCancelOnAddressMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapPutWithMaxIdleMessageTask", "com.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferSizeMessageTask", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddPNCounterConfigCodec", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapContainsKeyMessageTask", "com.hazelcast.client.impl.protocol.task.transaction.TransactionRollbackMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheIterateCodec", "com.hazelcast.client.impl.protocol.codec.MCGetMapConfigCodec", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapForceUnlockMessageTask", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddSetConfigMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheDestroyMessageTask", "com.hazelcast.client.impl.protocol.codec.MapAddEntryListenerToKeyCodec", "com.hazelcast.client.impl.protocol.task.list.ListSizeMessageTask", "com.hazelcast.client.impl.protocol.task.topic.TopicPublishMessageTask", "com.hazelcast.client.impl.protocol.codec.MapProjectCodec", "com.hazelcast.client.impl.protocol.codec.MapGetAllCodec", "com.hazelcast.client.impl.protocol.task.map.MapSetWithMaxIdleMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapSetTtlMessageTask", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapPutCodec", "com.hazelcast.client.impl.protocol.task.map.MapEventJournalSubscribeTask", "com.hazelcast.client.impl.protocol.task.map.MapGetAllMessageTask", "com.hazelcast.internal.longregister.client.codec.LongRegisterSetCodec", "com.hazelcast.client.impl.protocol.task.management.UpdateConfigMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapEvictAllMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheGetAndRemoveCodec", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapFetchEntryViewsCodec", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapGetCodec", "com.hazelcast.client.impl.protocol.codec.CachePutCodec", "com.hazelcast.client.impl.protocol.task.map.MapKeySetWithPagingPredicateMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapLoadGivenKeysMessageTask", "com.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferReadOneMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalMapGetCodec", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapPutAllWithMetadataMessageTask", "com.hazelcast.client.impl.protocol.codec.XATransactionCreateCodec", "com.hazelcast.client.impl.protocol.task.CreateProxiesMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapRemoveMessageTask", "com.hazelcast.client.impl.protocol.codec.RingbufferSizeCodec", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskDisposeFromPartitionMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheManagementConfigCodec", "com.hazelcast.client.impl.protocol.codec.ContinuousQuerySetReadCursorCodec", "com.hazelcast.internal.longregister.client.task.LongRegisterGetAndIncrementMessageTask", "com.hazelcast.client.impl.protocol.codec.ClientDestroyProxyCodec", "com.hazelcast.client.impl.protocol.task.queue.QueueCompareAndRemoveAllMessageTask", "com.hazelcast.spi.impl.NodeEngine", "com.hazelcast.client.impl.protocol.codec.SetContainsAllCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMultiMapRemoveCodec", "com.hazelcast.client.impl.protocol.task.map.MapEntrySetMessageTask", "com.hazelcast.client.impl.protocol.task.metrics.ReadMetricsMessageTask", "com.hazelcast.client.impl.protocol.codec.ClientGetDistributedObjectsCodec", "com.hazelcast.client.impl.protocol.codec.MultiMapPutAllCodec", "com.hazelcast.client.impl.protocol.task.map.MapEvictMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheRemoveEntryListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapRemoveCodec", "com.hazelcast.client.impl.protocol.task.transaction.XATransactionRollbackMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalMultiMapValueCountCodec", "com.hazelcast.client.impl.protocol.task.management.GetThreadDumpMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapReplaceMessageTask", "com.hazelcast.client.impl.protocol.codec.MapPutCodec", "com.hazelcast.client.impl.protocol.task.queue.QueueAddAllMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapDeleteMessageTask", "com.hazelcast.client.impl.protocol.codec.MCShutdownMemberCodec", "com.hazelcast.client.impl.protocol.codec.TopicPublishAllCodec", "com.hazelcast.client.impl.protocol.codec.MapSizeCodec", "com.hazelcast.client.impl.protocol.codec.MapEventJournalSubscribeCodec", "com.hazelcast.client.impl.protocol.codec.MCGetMemberConfigCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalListRemoveCodec", "com.hazelcast.client.impl.protocol.codec.MapExecuteOnKeysCodec", "com.hazelcast.client.impl.protocol.codec.MultiMapContainsKeyCodec", "com.hazelcast.client.impl.protocol.codec.CacheReplaceCodec", "com.hazelcast.client.impl.protocol.task.management.PollMCEventsMessageTask", "com.hazelcast.client.impl.protocol.codec.MapDeleteCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheReplaceMessageTask", "com.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferRemainingCapacityMessageTask", "com.hazelcast.client.impl.protocol.task.list.ListRemoveListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.MapValuesCodec", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddReliableTopicConfigCodec", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddMultiMapConfigCodec", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapPutAllMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapKeySetWithPredicateMessageTask", "com.hazelcast.client.impl.protocol.codec.TopicAddMessageListenerCodec", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddTopicConfigCodec", "com.hazelcast.client.impl.protocol.codec.ClientAddMigrationListenerCodec", "com.hazelcast.client.impl.protocol.task.map.MapAggregateWithPredicateMessageTask", "com.hazelcast.internal.longregister.client.codec.LongRegisterAddAndGetCodec", "com.hazelcast.client.impl.protocol.task.set.SetContainsMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapTryRemoveMessageTask", "com.hazelcast.client.impl.protocol.codec.MapAddEntryListenerCodec", "com.hazelcast.client.impl.protocol.codec.MapAddEntryListenerWithPredicateCodec", "com.hazelcast.client.impl.protocol.task.map.MapIsEmptyMessageTask", "com.hazelcast.internal.longregister.client.task.LongRegisterSetMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapDeleteMessageTask", "com.hazelcast.client.impl.protocol.codec.ClientSendAllSchemasCodec", "com.hazelcast.client.impl.protocol.codec.QueueAddListenerCodec", "com.hazelcast.client.impl.protocol.codec.MultiMapSizeCodec", "com.hazelcast.client.impl.protocol.task.executorservice.ExecutorServiceSubmitToPartitionMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueuePeekMessageTask", "com.hazelcast.client.impl.protocol.task.executorservice.durable.DurableExecutorRetrieveResultMessageTask", "com.hazelcast.client.impl.protocol.codec.MultiMapValueCountCodec", "com.hazelcast.client.impl.protocol.task.map.MapTryPutMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheRemoveAllCodec", "com.hazelcast.internal.longregister.client.task.LongRegisterIncrementAndGetMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapForceUnlockMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueueDrainMaxSizeMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalSetRemoveCodec", "com.hazelcast.client.impl.protocol.codec.ClientPingCodec", "com.hazelcast.client.impl.protocol.codec.CacheAddEntryListenerCodec", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddRingbufferConfigCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheRemovePartitionLostListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.ClientStatisticsCodec", "com.hazelcast.client.impl.protocol.codec.ClientSendSchemaCodec", "com.hazelcast.client.impl.protocol.task.AuthenticationCustomCredentialsMessageTask", "com.hazelcast.client.impl.protocol.codec.MapKeySetWithPagingPredicateCodec", "com.hazelcast.client.impl.protocol.task.transaction.XAClearRemoteTransactionMessageTask", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskGetDelayFromTargetMessageTask", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapKeySetCodec", "com.hazelcast.client.impl.protocol.codec.MultiMapValuesCodec", "com.hazelcast.client.impl.protocol.task.map.MapRemoveEntryListenerMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheLoadAllMessageTask", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapAddEntryListenerWithPredicateMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapClearMessageTask", "com.hazelcast.client.impl.protocol.codec.QueueContainsAllCodec", "com.hazelcast.client.impl.protocol.codec.TopicRemoveMessageListenerCodec", "com.hazelcast.client.impl.protocol.codec.MCDemoteDataMemberCodec", "com.hazelcast.client.impl.protocol.codec.MapForceUnlockCodec", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorIsDoneFromPartitionCodec", "com.hazelcast.client.impl.protocol.task.GetDistributedObjectsMessageTask", "com.hazelcast.client.impl.protocol.task.schema.SendSchemaMessageTask", "com.hazelcast.client.impl.protocol.task.management.HotRestartTriggerForceStartMessageTask", "com.hazelcast.client.impl.protocol.codec.SqlMappingDdlCodec", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorGetAllScheduledMessageTask", "com.hazelcast.internal.longregister.client.codec.LongRegisterGetAndAddCodec", "com.hazelcast.client.impl.protocol.codec.FlakeIdGeneratorNewIdBatchCodec", "com.hazelcast.client.impl.protocol.codec.MapIsEmptyCodec", "com.hazelcast.client.impl.protocol.codec.ExecutorServiceSubmitToMemberCodec", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorSubmitToTargetMessageTask", "com.hazelcast.client.impl.protocol.task.set.SetRemoveListenerMessageTask", "com.hazelcast.internal.longregister.client.codec.LongRegisterGetAndSetCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheGetAndRemoveMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapContainsValueMessageTask", "com.hazelcast.client.impl.protocol.codec.MultiMapPutCodec", "com.hazelcast.client.impl.protocol.task.map.MapExecuteOnAllKeysMessageTask", "com.hazelcast.client.impl.protocol.codec.ListAddCodec", "com.hazelcast.client.impl.protocol.codec.XATransactionClearRemoteCodec", "com.hazelcast.client.impl.protocol.codec.QueueSizeCodec", "com.hazelcast.client.impl.protocol.codec.MapPutAllWithMetadataCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalQueueTakeCodec", "com.hazelcast.client.impl.protocol.task.executorservice.durable.DurableExecutorSubmitToPartitionMessageTask", "com.hazelcast.client.impl.protocol.task.set.SetIsEmptyMessageTask", "com.hazelcast.client.impl.protocol.task.management.WanSyncMapMessageTask", "com.hazelcast.client.impl.protocol.task.list.ListLastIndexOfMessageTask", "com.hazelcast.client.impl.protocol.task.transaction.TransactionCreateMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheEntryProcessorMessageTask", "com.hazelcast.client.impl.protocol.codec.RingbufferAddCodec", "com.hazelcast.client.impl.protocol.codec.MapEvictCodec", "com.hazelcast.client.impl.protocol.codec.MCSetDiagnosticsConfigCodec", "com.hazelcast.client.impl.protocol.task.management.RunConsoleCommandMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheEntryProcessorCodec", "com.hazelcast.client.impl.protocol.codec.ContinuousQueryAddListenerCodec", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapSizeMessageTask", "com.hazelcast.client.impl.protocol.codec.MCInterruptHotRestartBackupCodec", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskGetStatisticsFromTargetMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapAddInterceptorMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapExecuteWithPredicateMessageTask", "com.hazelcast.client.impl.protocol.codec.ExecutorServiceSubmitToPartitionCodec", "com.hazelcast.client.impl.protocol.task.management.ReloadConfigMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalqueue.TransactionalQueueTakeMessageTask", "com.hazelcast.client.impl.protocol.codec.CacheRemoveCodec", "com.hazelcast.client.impl.protocol.task.cache.CachePutMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapSetReadCursorMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapKeySetMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheRemoveAllKeysMessageTask", "com.hazelcast.client.impl.protocol.codec.QueuePollCodec", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapAddEntryListenerToKeyWithPredicateMessageTask", "com.hazelcast.client.impl.protocol.codec.MultiMapIsLockedCodec", "com.hazelcast.client.impl.protocol.codec.MapValuesWithPredicateCodec", "com.hazelcast.client.impl.protocol.codec.CacheAddNearCacheInvalidationListenerCodec", "com.hazelcast.client.impl.protocol.codec.SqlFetchCodec", "com.hazelcast.client.impl.protocol.codec.ListClearCodec", "com.hazelcast.client.impl.protocol.task.cache.CacheIterateEntriesMessageTask", "com.hazelcast.client.impl.protocol.codec.RingbufferTailSequenceCodec", "com.hazelcast.client.impl.protocol.codec.CacheCreateConfigCodec", "com.hazelcast.client.impl.protocol.codec.MapClearCodec", "com.hazelcast.client.impl.protocol.codec.SetAddAllCodec", "com.hazelcast.client.impl.protocol.codec.ClientRemovePartitionLostListenerCodec", "com.hazelcast.client.impl.protocol.task.map.MapEntriesWithPagingPredicateMessageTask", "com.hazelcast.client.impl.protocol.task.AddDistributedObjectListenerMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalqueue.TransactionalQueueOfferMessageTask", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorSubmitToMemberCodec", "com.hazelcast.client.impl.protocol.task.list.ListIsEmptyMessageTask", "com.hazelcast.client.impl.protocol.task.management.ShutdownClusterMessageTask", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapPutAllMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheRemoveAllMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapProjectionWithPredicateMessageTask", "com.hazelcast.client.impl.protocol.codec.ListAddAllCodec", "com.hazelcast.client.impl.protocol.codec.MCUpdateMapConfigCodec", "com.hazelcast.client.impl.protocol.task.list.ListAddListenerMessageTask", "com.hazelcast.client.impl.protocol.codec.MapFetchNearCacheInvalidationMetadataCodec", "com.hazelcast.client.impl.protocol.task.management.HotRestartInterruptBackupMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheClearMessageTask", "com.hazelcast.client.impl.protocol.codec.ListContainsAllCodec", "com.hazelcast.client.impl.protocol.task.map.MapGetMessageTask", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapIsEmptyMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheRemoveMessageTask", "com.hazelcast.client.impl.protocol.codec.MultiMapDeleteCodec", "com.hazelcast.client.impl.protocol.task.executorservice.ExecutorServiceSubmitToAddressMessageTask", "com.hazelcast.client.impl.protocol.task.management.UpdateMapConfigMessageTask", "com.hazelcast.client.impl.protocol.codec.MapLockCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMapGetForUpdateCodec", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddScheduledExecutorConfigCodec", "com.hazelcast.internal.longregister.client.codec.LongRegisterGetCodec", "com.hazelcast.client.impl.protocol.codec.ClientRemoveMigrationListenerCodec", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapPutAllCodec", "com.hazelcast.client.impl.protocol.task.map.MapPublisherCreateWithValueMessageTask", "com.hazelcast.client.impl.protocol.codec.QueueRemoveListenerCodec", "com.hazelcast.instance.impl.Node", "com.hazelcast.client.impl.protocol.task.list.ListIteratorMessageTask", "com.hazelcast.client.impl.protocol.codec.MCChangeClusterStateCodec", "com.hazelcast.client.impl.protocol.task.list.ListAddAllWithIndexMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapUnlockMessageTask", "com.hazelcast.client.impl.protocol.codec.MultiMapForceUnlockCodec", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskIsDoneFromPartitionMessageTask", "com.hazelcast.client.impl.protocol.codec.MapRemoveEntryListenerCodec", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddDataConnectionConfigCodec", "com.hazelcast.client.impl.protocol.codec.MapContainsKeyCodec", "com.hazelcast.client.impl.protocol.codec.MCPollMCEventsCodec", "com.hazelcast.client.impl.protocol.codec.MapSubmitToKeyCodec", "com.hazelcast.client.impl.protocol.codec.CacheGetAllCodec", "com.hazelcast.client.impl.protocol.codec.MapEvictAllCodec", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorGetDelayFromMemberCodec", "com.hazelcast.client.impl.protocol.task.dynamicconfig.AddFlakeIdGeneratorConfigMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapMadePublishableMessageTask", "com.hazelcast.client.impl.protocol.codec.ScheduledExecutorGetAllScheduledFuturesCodec", "com.hazelcast.client.impl.protocol.codec.QueueContainsCodec", "com.hazelcast.internal.longregister.client.task.LongRegisterAddAndGetMessageTask", "com.hazelcast.client.impl.protocol.task.executorservice.durable.DurableExecutorRetrieveAndDisposeResultMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapAddEntryListenerToKeyMessageTask", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapRemoveEntryListenerCodec", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorTaskGetResultFromPartitionMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueueContainsAllMessageTask", "com.hazelcast.client.impl.protocol.task.scheduledexecutor.ScheduledExecutorSubmitToPartitionMessageTask", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddReplicatedMapConfigCodec", "com.hazelcast.client.impl.protocol.codec.ClientAddDistributedObjectListenerCodec", "com.hazelcast.client.impl.protocol.codec.TransactionRollbackCodec", "com.hazelcast.client.impl.protocol.codec.PNCounterGetConfiguredReplicaCountCodec", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapSizeMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalmap.TransactionalMapPutIfAbsentMessageTask", "com.hazelcast.client.impl.protocol.codec.MapEntriesWithPagingPredicateCodec", "com.hazelcast.client.impl.protocol.task.TriggerPartitionAssignmentMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapContainsEntryMessageTask", "com.hazelcast.client.impl.protocol.codec.MultiMapAddEntryListenerToKeyCodec", "com.hazelcast.client.impl.protocol.codec.TransactionalMapReplaceCodec", "com.hazelcast.client.impl.protocol.codec.MapLoadAllCodec", "com.hazelcast.client.impl.protocol.task.queue.QueuePutMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueuePollMessageTask", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapAddEntryListenerToKeyMessageTask", "com.hazelcast.client.impl.protocol.task.crdt.pncounter.PNCounterGetConfiguredReplicaCountMessageTask", "com.hazelcast.internal.util.MapUtil.createInt2ObjectHashMap", "com.hazelcast.client.impl.protocol.task.cache.CacheFetchNearCacheInvalidationMetadataTask", "com.hazelcast.client.impl.protocol.task.map.MapContainsKeyMessageTask", "com.hazelcast.client.impl.protocol.task.queue.QueueContainsMessageTask", "com.hazelcast.client.impl.protocol.codec.DynamicConfigAddCardinalityEstimatorConfigCodec", "com.hazelcast.client.impl.protocol.codec.MapIsLockedCodec", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapPutAllWithMetadataCodec", "com.hazelcast.client.impl.protocol.task.queue.QueueIsEmptyMessageTask", "com.hazelcast.client.impl.protocol.codec.DurableExecutorShutdownCodec", "com.hazelcast.client.impl.protocol.task.transactionalmultimap.TransactionalMultiMapRemoveMessageTask", "com.hazelcast.client.impl.protocol.codec.MapPutTransientWithMaxIdleCodec", "com.hazelcast.client.impl.protocol.task.executorservice.durable.DurableExecutorShutdownMessageTask", "com.hazelcast.client.impl.protocol.codec.MCGetClusterMetadataCodec", "com.hazelcast.client.impl.protocol.task.list.ListSetMessageTask", "com.hazelcast.client.impl.protocol.codec.ListLastIndexOfCodec", "com.hazelcast.client.impl.protocol.codec.MapTryPutCodec", "com.hazelcast.client.impl.protocol.task.map.MapSubmitToKeyMessageTask", "com.hazelcast.client.impl.protocol.task.map.MapIsLockedMessageTask", "com.hazelcast.client.impl.protocol.task.transactionalset.TransactionalSetRemoveMessageTask", "com.hazelcast.client.impl.protocol.codec.QueueDrainToMaxSizeCodec", "com.hazelcast.client.impl.protocol.task.management.GetMapConfigMessageTask", "com.hazelcast.client.impl.protocol.task.cache.CacheListenerRegistrationMessageTask", "com.hazelcast.client.impl.protocol.codec.MultiMapClearCodec", "com.hazelcast.client.impl.protocol.task.list.ListClearMessageTask", "com.hazelcast.client.impl.protocol.task.multimap.MultiMapValueCountMessageTask", "com.hazelcast.client.impl.protocol.codec.MultiMapRemoveCodec", "com.hazelcast.client.impl.protocol.task.ringbuffer.RingbufferAddAllMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalMapRemoveCodec", "com.hazelcast.client.impl.protocol.task.replicatedmap.ReplicatedMapValuesMessageTask", "com.hazelcast.client.impl.protocol.codec.ListRemoveWithIndexCodec", "com.hazelcast.client.impl.protocol.task.DeployClassesMessageTask", "com.hazelcast.client.impl.protocol.codec.TransactionalMapKeySetCodec", "com.hazelcast.client.impl.protocol.codec.MapAddPartitionLostListenerCodec", "com.hazelcast.client.impl.protocol.codec.ReplicatedMapEndEntryViewIterationCodec", "com.hazelcast.client.impl.protocol.codec.SetSizeCodec", "com.hazelcast.client.impl.protocol.task.management.GetTimedMemberStateMessageTask" ]
  }, {
    "name" : "Builder",
    "packageName" : "com.hazelcast.jet.kinesis",
    "extendedClasses" : [ "AbstractBuilder" ],
    "implementedInterfaces" : [ "EventBuilder" ],
    "methods" : [ {
      "name" : "extractors",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "withExecutorServiceSupplier",
      "visibility" : "public",
      "methodCalls" : [ "withExecutorServiceSupplier" ]
    }, {
      "name" : "withRetryStrategy",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "withProjectionFn",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "withCredentials",
      "visibility" : "public",
      "methodCalls" : [ "withCredentials" ]
    }, {
      "name" : "withInitialShardIteratorRule",
      "visibility" : "public",
      "methodCalls" : [ "add" ]
    }, {
      "name" : "withEndpoint",
      "visibility" : "public",
      "methodCalls" : [ "withEndpoint" ]
    }, {
      "name" : "withRegion",
      "visibility" : "public",
      "methodCalls" : [ "withRegion" ]
    }, {
      "name" : "setSslRootCertificateFile",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setSnapshotMode",
      "visibility" : "public",
      "methodCalls" : [ "getValue", "setProperty" ]
    }, {
      "name" : "setSslCertificateFile",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setCommitPeriod",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setSchemaBlacklist",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setSslKeyFilePassword",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setSslKeyFile",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setDatabaseName",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setSchemaWhitelist",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setCustomSnapshotter",
      "visibility" : "public",
      "methodCalls" : [ "getName", "checkState", "getValue", "isAssignableFrom", "setProperty" ]
    }, {
      "name" : "setReplicationSlotName",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setReplicationSlotDropOnStop",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setLogicalDecodingPlugIn",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setPublicationName",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setColumnBlacklist",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setSslMode",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setSslTruststorePassword",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setTableBlacklist",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setCustomProperty",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setDatabaseWhitelist",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setDatabaseBlacklist",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setTableWhitelist",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setSslKeystorePassword",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setClusterName",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setSslTruststoreFile",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setDatabaseAddress",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setDatabasePassword",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setReconnectBehavior",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setDatabaseUser",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setDatabaseClientId",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setSslKeystoreFile",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setShouldStateBeResetOnReconnect",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "setDatabasePort",
      "visibility" : "public",
      "methodCalls" : [ "toString", "setProperty" ]
    }, {
      "name" : "exactlyOnce",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "extractKeyFn",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "extractValueFn",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "toRecordFn",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "topic",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "setProperty",
      "visibility" : "public",
      "methodCalls" : [ "setProperty" ]
    }, {
      "name" : "withInputOutputFactory",
      "visibility" : "public",
      "methodCalls" : [ "self" ]
    }, {
      "name" : "isCompatibility",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "withInitialOutputBufferSize",
      "visibility" : "public",
      "methodCalls" : [ "self" ]
    }, {
      "name" : "withAllowOverrideDefaultSerializers",
      "visibility" : "public",
      "methodCalls" : [ "self" ]
    }, {
      "name" : "withCompatibility",
      "visibility" : "public",
      "methodCalls" : [ "self" ]
    }, {
      "name" : "withCompactSerializationConfig",
      "visibility" : "public",
      "methodCalls" : [ "self" ]
    }, {
      "name" : "withBufferPoolFactory",
      "visibility" : "public",
      "methodCalls" : [ "self" ]
    }, {
      "name" : "withManagedContext",
      "visibility" : "public",
      "methodCalls" : [ "self" ]
    }, {
      "name" : "withClassLoader",
      "visibility" : "public",
      "methodCalls" : [ "self" ]
    }, {
      "name" : "withSchemaService",
      "visibility" : "public",
      "methodCalls" : [ "self" ]
    }, {
      "name" : "withVersion",
      "visibility" : "public",
      "methodCalls" : [ "self" ]
    }, {
      "name" : "getClassLoader",
      "visibility" : "public",
      "methodCalls" : [ "getClassLoader", "get" ]
    }, {
      "name" : "withNotActiveExceptionSupplier",
      "visibility" : "public",
      "methodCalls" : [ "self" ]
    }, {
      "name" : "withGlobalPartitionStrategy",
      "visibility" : "public",
      "methodCalls" : [ "self" ]
    }, {
      "name" : "message",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "timestamp",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "level",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "parameters",
      "visibility" : "public",
      "methodCalls" : [ "emptyMap" ]
    }, {
      "name" : "addParameter",
      "visibility" : "public",
      "methodCalls" : [ "add" ]
    }, {
      "name" : "log",
      "visibility" : "public",
      "methodCalls" : [ "warning", "toString", "onEventLogged", "warn", "debug", "info", "error", "trace", "getName", "getLogRecord", "getLogger", "callAppenders", "setThrown", "setSourceClassName", "getLoggerName", "isLoggable", "getMessage", "intValue", "log", "getThrown", "handleLogEvent", "isEmpty", "getLevel", "setLoggerName", "logIfEnabled" ]
    }, {
      "name" : "cause",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "address",
      "visibility" : "public",
      "methodCalls" : [ "isNotNull" ]
    }, {
      "name" : "localMember",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "instance",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "version",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "liteMember",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "attributes",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "uuid",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "memberListJoinVersion",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "partitionId",
      "visibility" : "public",
      "methodCalls" : [ "applyAsInt" ]
    }, {
      "name" : "intervalFunction",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "maxAttempts",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "build",
      "visibility" : "public",
      "methodCalls" : [ "supplier", "check", "setProperty", "execute", "join", "eventloopThread", "currentThread", "complete", "completeExceptionally", "sneakyThrow", "setEventTimePolicy", "checkConnectivityOptionsValid", "getMapStreamFn", "getMapItemFn", "preferredLocalParallelism", "sinkBuilder", "logger", "flushFn", "destroyFn", "receiveFn", "writeKafkaP", "getCollectionName", "withCheckResourceExistence", "getDatabaseName", "checkValid", "getDataConnectionRef", "withProcessorSupplier", "setCheckExistenceOnEachConnect", "withForceTotalParallelismOne", "withDataConnectionRef", "withClientSupplier", "isCheckExistenceOnEachConnect", "getClientSupplier", "withCollectionName", "withDatabaseName", "withPreferredLocalParallelism", "toProperties", "forceTotalParallelismOne", "getProperty", "getField", "getGlobalSerializerConfig", "registerGlobal", "getImplementation", "createInputOutputFactory", "newInstance", "setHazelcastInstance", "isOverrideJavaSerialization", "getClassDefinitions", "createSerializationService", "addAll", "getClassName", "containsKey", "getFieldNames", "addFieldDef", "configure", "getSocketInterceptorConfig", "getSocketOptions", "getNetworkConfig", "getClusterName", "createChannelInitializer", "unmodifiableList", "add", "getSSLConfig", "newHashMap", "setDataKey", "setDataOldValue", "setMapName", "setSerializationService", "setDataNewValue", "setPartitionId", "setSequence", "setEventType", "connectGeneralStages", "adaptAggregateOperation", "readRemoteMapSupplier", "requireNonNull", "streamJmsTopicP", "streamJmsQueueP", "streamFromProcessorWithWatermarks", "createConsumer", "createQueue", "createTopic", "boxed", "andCombine", "withCreate", "finishFn", "setAll", "stream", "sorted", "andAccumulate", "varArity", "map", "createFn", "anyMatch", "entrySet", "keySet", "andDeduct", "checkTrue", "put", "andExport", "range", "forEach", "andFinish", "comparingByKey", "identity", "toArray", "checkSerializable", "size", "exportFn", "deductFn", "collect", "combineFn", "accept", "accumulateFn", "toList", "index", "build0", "writeBufferedP", "checkNotNull", "fromProcessor", "of", "buildStream", "readFileFn", "asXmlString", "setClientXml", "setMergeFn", "setToValueFn", "batchFromProcessor", "readFilesP", "setDataConnectionRef", "setToKeyFn", "setUpdateFn", "name", "writeJdbcP", "build", "updateMapSupplier", "setMaxParallelAsyncOps", "convenientTimestampedSourceP", "setToEntryProcessorFn", "writeFileP", "convenientSourceP", "get", "createConnection", "createTextMessage", "createXAConnection", "apply", "buildBatch", "buildMetaSupplier", "toString" ]
    }, {
      "name" : "setGetterCacheSupplier",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "setClassLoader",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "setAttributeConfigs",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "resultFilterFactory",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "global",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "partitionCount",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "indexProvider",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "statsEnabled",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "usesCachedQueryableEntries",
      "visibility" : "public",
      "methodCalls" : [ ]
    } ],
    "imports" : [ "java.util.function.Consumer", "com.hazelcast.jet.impl.pipeline.SinkImpl", "com.hazelcast.jet.kinesis.impl.sink.KinesisSinkPSupplier", "com.hazelcast.jet.impl.pipeline.SinkImpl.Type.DISTRIBUTED_PARTITIONED", "java.io.Serial", "com.hazelcast.jet.retry.IntervalFunction", "com.hazelcast.jet.retry.RetryStrategies", "com.hazelcast.jet.kinesis.impl.source.InitialShardIterators", "com.hazelcast.jet.kinesis.impl.AwsConfig", "com.hazelcast.jet.kinesis.impl.source.KinesisSourcePMetaSupplier", "java.util.concurrent.ExecutorService", "com.hazelcast.function.SupplierEx", "com.amazonaws.services.kinesis.model.Shard", "com.amazonaws.services.kinesis.model.Record", "com.hazelcast.jet.Util.entry", "com.hazelcast.jet.cdc.postgres.impl.PostgresSequenceExtractor", "io.debezium.connector.postgresql.spi.Snapshotter", "io.debezium.connector.postgresql.PostgresConnectorConfig", "com.hazelcast.internal.util.UuidUtil", "com.hazelcast.jet.cdc.impl.CdcSourceP.RECONNECT_BEHAVIOR_PROPERTY", "com.hazelcast.jet.cdc.ChangeRecord", "com.hazelcast.jet.cdc.mysql.impl.MySqlSequenceExtractor", "com.hazelcast.jet.retry.RetryStrategy", "com.hazelcast.jet.cdc.impl.PropertyRules", "com.hazelcast.jet.pipeline.DataConnectionRef", "com.hazelcast.jet.pipeline.Sinks", "com.hazelcast.jet.kafka.KafkaProcessors.writeKafkaP", "com.hazelcast.spi.annotation.Beta", "javax.annotation.Nullable", "com.hazelcast.jet.pipeline.Sink", "com.hazelcast.jet.config.ProcessingGuarantee", "com.hazelcast.function.FunctionEx", "org.apache.kafka.clients.producer.ProducerRecord", "com.hazelcast.jet.pipeline.GeneralStage", "com.hazelcast.jet.config.JobConfig", "com.hazelcast.jet.core.EventTimePolicy", "java.util.Map.Entry", "java.util.Properties", "com.hazelcast.jet.core.ProcessorSupplier", "com.hazelcast.internal.util.Preconditions.checkState", "com.hazelcast.jet.pipeline.StreamSource", "com.hazelcast.jet.cdc.impl.CdcSourceP", "org.apache.kafka.connect.source.SourceConnector", "com.hazelcast.jet.cdc.impl.ChangeRecordCdcSourceP", "com.hazelcast.jet.cdc.impl.ConstantSequenceExtractor", "com.hazelcast.jet.cdc.impl.JsonCdcSourceP", "com.hazelcast.jet.pipeline.Sources", "com.hazelcast.jet.cdc.impl.DebeziumConfig", "com.hazelcast.jet.core.ProcessorMetaSupplier", "com.hazelcast.jet.annotation.EvolvingApi", "com.hazelcast.function.BiFunctionEx", "com.hazelcast.internal.serialization.DataType", "java.util.PriorityQueue", "com.hazelcast.internal.serialization.impl.defaultserializers.LinkedTransferQueueStreamSerializer", "com.hazelcast.internal.serialization.impl.portable.PortableContext", "java.util.LinkedList", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.JavaSerializer", "com.hazelcast.nio.serialization.FieldType", "java.util.HashSet", "java.time.LocalDateTime", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.OffsetDateTimeSerializer", "javax.annotation.Nonnull", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers", "java.util.concurrent.SynchronousQueue", "com.hazelcast.internal.serialization.impl.defaultserializers.ArrayListStreamSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.BooleanArraySerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.BigIntegerSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.CharSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.BooleanSerializer", "java.util.concurrent.PriorityBlockingQueue", "com.hazelcast.internal.serialization.impl.defaultserializers.LinkedHashSetStreamSerializer", "com.hazelcast.internal.serialization.impl.portable.PortableContextImpl", "com.hazelcast.internal.serialization.impl.defaultserializers.ConcurrentSkipListSetStreamSerializer", "com.hazelcast.nio.serialization.DataSerializableFactory", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.HazelcastJsonValueSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.PriorityQueueStreamSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ArrayStreamSerializer", "java.util.Optional", "java.time.OffsetDateTime", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.CharArraySerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ArrayDequeStreamSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.ByteBufferSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.LongSerializer", "java.util.Date", "java.util.concurrent.LinkedBlockingQueue", "java.util.LinkedHashMap", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.FloatArraySerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.HashMapStreamSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.LinkedBlockingQueueStreamSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.ShortArraySerializer", "java.util.concurrent.LinkedTransferQueue", "com.hazelcast.nio.serialization.FieldDefinition", "java.util.concurrent.CopyOnWriteArraySet", "com.hazelcast.nio.serialization.PortableFactory", "com.hazelcast.internal.serialization.impl.defaultserializers.TreeSetStreamSerializer", "java.util.concurrent.CopyOnWriteArrayList", "com.hazelcast.internal.serialization.impl.defaultserializers.PriorityBlockingQueueStreamSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.StringSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConcurrentSkipListMapStreamSerializer", "java.time.LocalDate", "com.hazelcast.internal.serialization.impl.portable.PortableSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.DateSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.TreeMapStreamSerializer", "java.util.TreeSet", "com.hazelcast.internal.serialization.impl.defaultserializers.ConcurrentHashMapStreamSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.FloatSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.SynchronousQueueStreamSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.EnumSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.OptionalSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.StringArraySerializer", "com.hazelcast.internal.util.MapUtil.createHashMap", "java.time.LocalTime", "com.hazelcast.internal.serialization.impl.defaultserializers.DelayQueueStreamSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.LocalDateSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.DoubleSerializer", "java.util.concurrent.DelayQueue", "java.util.Objects.requireNonNull", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.LocalDateTimeSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.ShortSerializer", "java.util.TreeMap", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.ClassSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.DoubleArraySerializer", "java.math.BigDecimal", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.SimpleEntrySerializer", "java.util.concurrent.ConcurrentSkipListMap", "java.nio.ByteBuffer", "com.hazelcast.internal.serialization.impl.defaultserializers.ArrayBlockingQueueStreamSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.LocalTimeSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.LinkedListStreamSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.HashSetStreamSerializer", "com.hazelcast.nio.serialization.ClassDefinition", "java.util.ArrayList", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.ByteSerializer", "java.util.ArrayDeque", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.IntegerSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.TheByteArraySerializer", "com.hazelcast.nio.serialization.ClassNameFilter", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.IntegerArraySerializer", "java.math.BigInteger", "java.util.concurrent.ArrayBlockingQueue", "java.io.IOException", "com.hazelcast.internal.serialization.impl.defaultserializers.CopyOnWriteArraySetStreamSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.JavaDefaultSerializers.BigDecimalSerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.LongArraySerializer", "com.hazelcast.internal.serialization.impl.defaultserializers.CopyOnWriteArrayListStreamSerializer", "com.hazelcast.internal.serialization.impl.portable.PortableHookLoader", "java.util.AbstractMap", "java.util.concurrent.ConcurrentSkipListSet", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers.UuidSerializer", "com.hazelcast.internal.serialization.impl.compact.Schema", "com.hazelcast.internal.serialization.impl.defaultserializers.LinkedHashMapStreamSerializer", "com.hazelcast.internal.serialization.impl.bufferpool.BufferPoolFactoryImpl", "com.hazelcast.partition.PartitioningStrategy", "com.hazelcast.nio.serialization.DataSerializable", "java.util.concurrent.ConcurrentMap", "com.hazelcast.internal.serialization.impl.SerializationUtil.createSerializerAdapter", "com.hazelcast.internal.serialization.impl.compact.CompactStreamSerializer", "java.util.IdentityHashMap", "com.hazelcast.nio.serialization.Serializer", "com.hazelcast.config.CompactSerializationConfig", "com.hazelcast.internal.nio.BufferObjectDataOutput", "com.hazelcast.internal.serialization.impl.compact.CompactStreamSerializerAdapter", "com.hazelcast.internal.util.ConcurrentReferenceHashMap.ReferenceType", "com.hazelcast.internal.serialization.impl.SerializationUtil.isNullData", "com.hazelcast.internal.usercodedeployment.impl.ClassLocator", "com.hazelcast.internal.serialization.impl.defaultserializers.ConstantSerializers", "com.hazelcast.internal.serialization.InputOutputFactory", "com.hazelcast.nio.ObjectDataOutput", "com.hazelcast.nio.ObjectDataInput", "com.hazelcast.internal.serialization.impl.bufferpool.BufferPoolFactory", "java.nio.ByteOrder.BIG_ENDIAN", "com.hazelcast.internal.serialization.impl.SerializationUtil.handleSerializeException", "com.hazelcast.internal.serialization.impl.SerializationUtil.handleException", "com.hazelcast.internal.serialization.impl.bufferpool.BufferPoolThreadLocal", "java.nio.ByteOrder", "com.hazelcast.core.ManagedContext", "com.hazelcast.internal.compatibility.serialization.impl.CompatibilitySerializationConstants", "com.hazelcast.internal.util.ConcurrentReferenceHashMap", "com.hazelcast.internal.nio.BufferObjectDataInput", "java.util.LinkedHashSet", "com.hazelcast.logging.Logger", "com.hazelcast.internal.serialization.impl.SerializationUtil.indexForDefaultType", "java.io.Externalizable", "com.hazelcast.internal.serialization.impl.SerializationUtil.getInterfaces", "com.hazelcast.internal.serialization.impl.SerializationUtil.EMPTY_PARTITIONING_STRATEGY", "com.hazelcast.internal.serialization.impl.compact.CompactWithSchemaStreamSerializerAdapter", "com.hazelcast.internal.serialization.impl.bufferpool.BufferPool", "java.io.Serializable", "com.hazelcast.internal.serialization.impl.compact.SchemaService", "java.util.concurrent.atomic.AtomicReference", "com.hazelcast.auditlog.AuditableEvent", "com.hazelcast.auditlog.Level", "com.hazelcast.auditlog.EventBuilder", "com.hazelcast.auditlog.AuditlogService", "java.util.Objects", "com.hazelcast.cluster.Address", "com.hazelcast.logging.ILogger", "com.hazelcast.core.HazelcastInstance", "com.hazelcast.instance.impl.HazelcastInstanceImpl", "com.hazelcast.core.HazelcastInstanceAware", "com.hazelcast.internal.util.Preconditions.isNotNull", "com.hazelcast.instance.EndpointQualifier", "java.util.UUID", "com.hazelcast.internal.cluster.impl.ClusterDataSerializerHook", "com.hazelcast.instance.EndpointQualifier.MEMBER", "com.hazelcast.version.MemberVersion", "com.hazelcast.cluster.Member", "com.hazelcast.nio.serialization.IdentifiedDataSerializable", "java.util.HashMap", "com.hazelcast.query.impl.predicates.IndexAwarePredicate", "com.hazelcast.internal.monitor.impl.IndexesStats", "java.util.concurrent.ConcurrentHashMap", "com.hazelcast.config.IndexConfig", "com.hazelcast.internal.monitor.impl.HDGlobalIndexesStats", "java.util.Arrays", "com.hazelcast.internal.util.ExceptionUtil.rethrow", "com.hazelcast.config.IndexType", "com.hazelcast.jet.retry.impl.RetryStrategyImpl", "java.util.concurrent.TimeUnit.SECONDS", "com.hazelcast.query.QueryException", "com.hazelcast.internal.serialization.impl.portable.PortableGenericRecord", "com.hazelcast.query.impl.getters.ExtractorHelper.extractArgumentsFromAttributeName", "com.hazelcast.internal.serialization.impl.compact.CompactGenericRecord", "java.util.Map", "com.hazelcast.query.extractor.ValueExtractor", "com.hazelcast.core.HazelcastJsonValue", "com.hazelcast.query.impl.getters.GetterCache.EVICTABLE_GETTER_CACHE_SUPPLIER", "com.hazelcast.query.impl.DefaultArgumentParser", "com.hazelcast.query.impl.getters.ExtractorHelper.extractAttributeNameNameWithoutArguments", "com.hazelcast.internal.namespace.NamespaceUtil", "com.hazelcast.nio.serialization.HazelcastSerializationException", "com.hazelcast.query.impl.getters.ExtractorHelper.instantiateExtractors", "java.util.function.Supplier", "com.hazelcast.internal.util.Preconditions", "java.util.List", "java.util.Collections", "com.hazelcast.internal.serialization.InternalSerializationService", "com.hazelcast.config.AttributeConfig", "com.hazelcast.internal.serialization.Data", "com.hazelcast.nio.serialization.Portable", "com.hazelcast.internal.serialization.SerializationService", "com.hazelcast.internal.monitor.impl.GlobalIndexesStats", "com.hazelcast.query.Predicate", "edu.umd.cs.findbugs.annotations.SuppressFBWarnings", "com.hazelcast.query.impl.getters.Extractors", "com.hazelcast.instance.impl.Node", "java.util.Collection", "com.hazelcast.config.InMemoryFormat.NATIVE", "java.util.Set", "com.hazelcast.map.impl.operation.steps.engine.Step", "com.hazelcast.internal.util.Preconditions.checkNotNull", "com.hazelcast.core.TypeConverter", "com.hazelcast.config.InMemoryFormat", "com.hazelcast.internal.monitor.impl.PartitionIndexesStats", "com.hazelcast.internal.util.IterableUtil" ]
  }, {
    "name" : "ClientMapProxy",
    "packageName" : "com.hazelcast.client.impl.proxy",
    "extendedClasses" : [ "ClientProxy" ],
    "implementedInterfaces" : [ "EventJournalReader", "IMap" ],
    "methods" : [ {
      "name" : "computeIfPresent",
      "visibility" : "public",
      "methodCalls" : [ "executeOnKey", "checkNotNull", "isClassStaticAndSerializable" ]
    }, {
      "name" : "putTransient",
      "visibility" : "public",
      "methodCalls" : [ "putTransient", "putTransientInternal", "toData", "checkNotNull", "addTransient", "getNow" ]
    }, {
      "name" : "getLocalMapStats",
      "visibility" : "public",
      "methodCalls" : [ "getNearCacheStats", "setNearCacheStats", "getLocalMapStats", "createLocalMapStats", "getLocalMapStatsProvider" ]
    }, {
      "name" : "deleteAsync",
      "visibility" : "public",
      "methodCalls" : [ "removeAsync", "checkNotNull", "deleteAsyncInternal", "newDelegatingFuture" ]
    }, {
      "name" : "tryPut",
      "visibility" : "public",
      "methodCalls" : [ "checkNotNull", "toData", "tryPutInternal" ]
    }, {
      "name" : "iterator",
      "visibility" : "public",
      "methodCalls" : [ "iterator", "init", "create", "encodeRequest", "invokeOnPartition", "getPartitionService", "decodeResponse", "getContext", "ensureOpen", "unmodifiableCollection", "listInternal", "getNodeEngine", "getSerializationService", "checkDoesNotContainPagingPredicate", "checkNotNull", "getPartitionCount", "toData", "handleHazelcastInstanceAwareParams", "toObject", "mutationTolerantIterator", "getBuffer", "hasNext", "next", "addObserver", "getKey", "entrySet", "stream", "get", "getValue", "map", "unmodifiableSet", "values", "emptyList", "validate", "listIterator" ]
    }, {
      "name" : "removePartitionLostListener",
      "visibility" : "public",
      "methodCalls" : [ "getListenerService", "getContext", "getNodeEngine", "getEventService", "getService", "removePartitionLostListenerInternal", "checkNotNull", "deregisterListener", "removePartitionLostListener" ]
    }, {
      "name" : "tryLock",
      "visibility" : "public",
      "methodCalls" : [ "get", "rethrowAllowInterrupted", "timeInMsOrTimeIfNullUnit", "getThreadId", "getNextReferenceId", "toData", "currentThread", "decodeResponse", "encodeRequest", "invoke", "getTimeInMillis", "interrupt", "toDataWithStrategy", "getNodeEngine", "tryLock", "checkNotNull" ]
    }, {
      "name" : "values",
      "visibility" : "public",
      "methodCalls" : [ "toData", "unmodifiableList", "valuesInternal", "getObjectCollection", "getNodeEngine", "getCollection", "getStorage", "incrementOtherOperations", "unmarshall", "getStats", "getName", "getAllReplicatedRecordStores", "getLocalReplicatedMapStats", "addAll", "sort", "invokeOnPartition", "containsPagingPredicate", "toObject", "clone", "scanAndGetResult", "emptySet", "values", "alwaysTrue", "checkNotNull", "iterationType", "checkNotInstanceOf", "toObjectIfNeeded", "incrementOtherOperationsStat", "execute", "build", "init", "entrySet", "getValueData", "of", "getValue", "getExtractors", "getQueryEngine", "add", "predicate", "mapName", "apply", "checkTransactionState", "getKey", "transformToSet", "createPartitionTarget", "incrementValuesCallCount", "decodeResponse", "encodeRequest", "getSerializationService", "invoke", "getTransactionId", "getThreadId", "size" ]
    }, {
      "name" : "setAllAsync",
      "visibility" : "public",
      "methodCalls" : [ "putAllInternal", "checkNotNull" ]
    }, {
      "name" : "addLocalEntryListener",
      "visibility" : "public",
      "methodCalls" : [ "addLocalListener", "getService", "handleHazelcastInstanceAwareParams", "checkNotNull", "checkDoesNotContainPagingPredicate", "toDataWithStrategy", "addLocalEntryListenerInternal" ]
    }, {
      "name" : "setTtl",
      "visibility" : "public",
      "methodCalls" : [ "setTtl", "setTtlInternal", "checkNotNull", "getNow", "toSeconds" ]
    }, {
      "name" : "size",
      "visibility" : "public",
      "methodCalls" : [ "get", "deserialized", "checkAvailable", "count", "getQueue", "keySet", "getLocalMultiMapStatsImpl", "isStatisticsEnabled", "getService", "getRecordIds", "incrementOtherOperations", "getStorage", "getStats", "getName", "getAllReplicatedRecordStores", "joinInternal", "setPartitionId", "getTransactionId", "getThreadId", "decodeResponse", "encodeRequest", "createSizeOperationFactory", "getNodeEngine", "rethrowAllowedTypeFirst", "getOperationService", "ensureOpen", "getItemQueue", "getMaxSize", "min", "invokeOnPartition", "getServiceName", "checkTransactionActive", "invoke", "getCollection", "entrySet", "sizeInternal", "getKey", "checkTransactionState", "getValue", "toIntSize", "values", "invokeOnAllPartitions", "toObject", "rethrow", "incrementOtherOperationsStat", "createMapSizeOperationFactory", "size", "sum", "mapToInt", "stream", "hasNext", "next", "iterator" ]
    }, {
      "name" : "get",
      "visibility" : "public",
      "methodCalls" : [ "equals", "name", "getSharedShardCounter", "checkDatabaseExists", "getDatabase", "withCodecRegistry", "defaultCodecRegistry", "getOption", "checkCollectionExists", "getTaskAttemptID", "localParallelism", "memberIndex", "isSlicingEnabled", "noopP", "nCopies", "getId", "toString", "setInt", "getJobID", "getRecordWriter", "getLocalMember", "isCoLocatedReadingEnabled", "hazelcastInstance", "getCluster", "getOutputFormat", "replacePlaceholdersInPredicate", "setWriteModelFn", "shouldSplitOnMembers", "getSplits", "uncheckCall", "getLocalMultiMapStats", "deserialized", "setDocumentIdentityFn", "fields", "setIntermediateMappingFn", "asList", "setDataConnectionRef", "toBsonDocument", "setCommitRetryStrategy", "match", "setProjection", "setStartAtTimestamp", "setEventTimePolicy", "setNonDistributed", "replacePlaceholders", "contains", "setCheckExistenceOnEachConnect", "setTransactionOptionsSup", "setFilter", "setMapStreamFn", "bsonToDocument", "setAggregates", "excludeId", "setCollectionName", "setDocumentType", "noEventTime", "setMapItemFn", "setClientSupplier", "setWriteMode", "setDocumentIdentityFieldName", "setDatabaseName", "getLocalSetStats", "getLocalMapStats", "setProcessorOrder", "setActive", "getLocalListStats", "getLocalQueueStats", "getReplicatedMapStats", "getClusterService", "put", "isStaleRead", "incrementHits", "getRecord", "onExpire", "isRecordExpired", "checkAvailable", "isCachedAsNull", "incrementMisses", "getReservationId", "invalidate", "indexOf", "poll", "inc", "uuidOf", "getPlane", "join", "invokeExact", "doubleValue", "longValue", "getLong", "availablePermits", "getDouble", "reset", "getMap", "getObject", "checkTransactionActive", "getObjectCollection", "getNodeEngine", "getAllInternal", "marshall", "isNotNull", "getTtlMillis", "getStorage", "incrementGetsNanos", "getUpdateTime", "unmarshall", "getStats", "getPartitionId", "getReplicatedRecordStore", "setCallerUuid", "getUuid", "invokeOnPartition", "finest", "isFinestEnabled", "getTransactionId", "encodeRequest", "decodeResponse", "getThreadId", "callGetSync", "validateNotNull", "ensureOpen", "wait", "rethrowAllowedTypeFirst", "invoke", "checkIndexNotNegative", "getCollection", "onRecordAccess", "isStatisticsEnabled", "getExpiryPolicy", "increaseCacheHits", "nanosElapsed", "createRecordWithExpiry", "increaseCacheMisses", "readThroughCache", "processExpiredEntry", "addGetTimeNanos", "recordToValue", "onGet", "onGetError", "checkIfLoaded", "interceptGet", "getRecordOrNull", "getNow", "evictIfExpired", "loadRecordOrNull", "accessRecord", "toData", "toNearCacheKeyWithStrategy", "nanos", "getInternal", "toObjectIfNeeded", "checkTransactionState", "isDone", "joinInternal", "toQueryCacheKey", "getDelegate", "hasNotExpired", "currentTimeMillis", "checkPositive", "getSequence", "toNanos", "interrupted", "unregisterWaiter", "onInterruptDetected", "nanoTime", "newTimeoutException", "resolveAndThrowIfException", "getProperty", "exists", "resolve", "setTenant", "ignore", "set", "managedBlock", "rethrow", "currentThread", "interrupt", "getMemberListVersion", "setServiceName", "getEx", "toUnsignedInt", "unsignedBinarySearch", "toUnsignedLong", "toObject", "getAttribute", "setAttribute", "getInt", "sneakyThrow", "getCause", "checkNotNull", "getOrDefault", "roundRobinPart", "emptyList", "requireNonNull", "map", "groupingBy", "distributeObjects", "size", "boxed", "of", "readFilesProcessorFn", "createProcessor", "generate", "limit", "lock", "isInstance", "fromStoreValue", "unlock", "dataException", "getMessage", "getTargetForDirectAccess", "getActualClass", "getExpectedClass", "getName", "onPlanUsed", "entrySet", "getClass", "option", "buildMetaSupplier", "glob", "parseBoolean", "getKey", "sharedFileSystem", "format", "getValue", "files", "ignoreFileNotFound", "key", "value", "kafkaConsumerFn", "valueOf", "create", "createExtendedRowIfNecessary", "apply", "executeQuery", "prepareValueGettersFromMetadata", "getSerializationService", "getMetaData", "close", "prepareStatement", "wrapDataConnectionKey", "storage", "get", "add", "iMapFn", "mapToObj", "toList", "range", "collect", "nonSharedService", "tuple2", "paths", "isCooperative", "getKeyData", "binarySearch", "accept", "sum", "singletonList", "stream", "isInner", "getValueData", "values", "mapToInt", "project", "setCooperative", "toArray", "getAsync", "getArguments", "toCompletableFuture", "getConnection", "getFieldCount", "singleton", "setObject", "extendedRow", "typeResolver", "completedFuture", "getColumnCount" ]
    }, {
      "name" : "removeAsync",
      "visibility" : "public",
      "methodCalls" : [ "getAndRemoveAsync", "checkNotNull", "newDelegatingFuture", "removeAsyncInternal", "removeAsync" ]
    }, {
      "name" : "unlock",
      "visibility" : "public",
      "methodCalls" : [ "remove", "canAcquireLock", "isRemovable", "get", "joinInternal", "getMap", "invoke", "encodeRequest", "getNextReferenceId", "getThreadId", "toData", "toDataWithStrategy", "checkNotNull", "getNodeEngine", "checkIfLoaded", "unlock" ]
    }, {
      "name" : "lock",
      "visibility" : "public",
      "methodCalls" : [ "getLock", "joinInternal", "tryLock", "getMap", "toMillis", "invoke", "getThreadId", "toData", "encodeRequest", "getNextReferenceId", "getTimeInMillis", "toDataWithStrategy", "checkNotNull", "getNodeEngine", "timeInMsOrTimeIfNullUnit", "checkPositive", "checkIfLoaded", "lock", "forEach" ]
    }, {
      "name" : "toString",
      "visibility" : "public",
      "methodCalls" : [ "getSqlConnector", "getLocalAddress", "getLocations", "rethrow", "boxed", "getKafkaId", "toJson", "getPartitionHash", "dataSize", "totalSize", "hashCode", "getHeapCost", "getByteOrder", "getFactoryId", "getClassId", "isUrgent", "toBinaryString", "describeFlags", "getPacketType", "writeFieldsToStringBuilder", "getTypeName", "writeEscaped", "getSchema", "getMigrationQueueSize", "getPartitionStateStamp", "version", "replicas", "getPartitionVersionIncrement", "getOwner", "formatToString", "keySet", "lineSeparator", "writeTo", "stamp", "isFromInclusive", "isToInclusive", "isDescending", "getGCStats", "getTotalPhysical", "getCommittedHeap", "getMemberCount", "toPrettyString", "getFreeHeap", "getUsedHeap", "getFreePhysical", "getMaxHeap", "localSocketAddress", "remoteSocketAddress", "getEndpointQualifier", "nodeName", "contains", "array", "convertNanosToMillis", "getRatio", "getId", "getClusterName", "isActive", "getReadyReplicas", "getSpecifiedReplicaCount", "getCurrentReplicas", "getUuid", "operation", "term", "getFrameLength", "isFlagSet", "getCorrelationId", "isRetryable", "toHexString", "readIntL", "getMessageType", "readLongL", "getOperationName", "timeToStringFriendly", "lastWriteTimeMillis", "isAlive", "lastReadTimeMillis", "hasMinimumSize", "getClientAttributes", "getThisAddress", "getOldValue", "getMergingValue", "getItem", "getMember", "isNullOrEmpty", "getDurationAmount", "getOwnedEntryCount", "getTimeUnit", "toMillis", "getEventType", "getSource", "getHost", "isLiteMember", "localMember", "getPort", "getMaxIdle", "getLastStoredTime", "getCreationTime", "getTtl", "getLastUpdateTime", "getCost", "getVersion", "getHits", "getLastAccessTime", "getExpirationTime", "isDone", "getMapName", "mapToString", "getState", "invocationToString", "getTenantControlOrNoop", "timeToString", "values", "getServiceName", "getColumnCount", "getColumn", "getMaybeSerialized", "getType", "getMemberId", "getLocalId", "isEmpty", "size", "determineLocalParallelism", "getIndex", "start", "end", "result", "getModifier", "isEarly", "forEach", "groupingBy", "tag", "jobConfig", "globalProcessorIndex", "prefix", "vertexName", "jobId", "entrySet", "collect", "append", "map", "joining", "stream", "sorted", "comparingByKey", "getValue", "getKey", "ordinal", "format", "readLong", "getGlobalTransactionId", "readInt", "isExport", "index", "isTerminal", "description", "getIdString", "getConfig", "add", "toLocalDateTime", "valueOf", "toLocalTime", "idToString", "reverse", "getTypeFamily", "getSchemaName", "getSqlName", "typeName", "getSimpleName", "getClass", "toString", "name", "identityHashCode", "get", "getName", "equals" ]
    }, {
      "name" : "getQueryCacheContext",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "localKeySet",
      "visibility" : "public",
      "methodCalls" : [ "getPartitionContainer", "getMultiMapContainer", "getPartitionCount", "addAll", "keySet", "isLocal", "getPartitionService", "getPartition", "localKeySetInternal", "checkNotNull", "localKeySet", "incrementOtherOperationsStat", "alwaysTrue", "executeQueryInternal" ]
    }, {
      "name" : "remove",
      "visibility" : "public",
      "methodCalls" : [ "remove", "indexOf", "getAndRemove", "replace", "getObject", "removeAllInternal", "size", "getObjectCollection", "getStorage", "incrementVersion", "getPartitionId", "getResponse", "joinInternal", "getOperationService", "getSerializationService", "decodeResponse", "encodeRequest", "getThreadId", "getTransactionId", "removeSync", "isEmpty", "shutdown", "getName", "isSet", "deregisterServer", "rethrowAllowedTypeFirst", "removeAsyncInternal", "getSerializedObject", "getItemQueue", "isEnabled", "getTxnId", "getServiceName", "invokeOnPartition", "checkTransactionActive", "getItemId", "checkObjectNotNull", "putToRecord", "checkIndexNotNegative", "invoke", "getNodeEngine", "decreaseEntryCount", "withValue", "equals", "getCollection", "iterator", "ensureOpen", "nanos", "processExpiredEntry", "nanosElapsed", "onRecordAccess", "currentTimeMillis", "onRemove", "isStatisticsEnabled", "isEventsEnabled", "addRemoveTimeNanos", "publishEvent", "onRemoveError", "toEventData", "increaseCacheMisses", "increaseCacheRemovals", "createCacheCompleteEvent", "rethrow", "deleteCacheEntry", "toStorageValue", "deleteRecord", "compare", "checkIfLoaded", "interceptRemove", "isEqual", "getRecordOrNull", "loadValueOfKey", "updateStatsOnRemove", "getNow", "removeRecord0", "onStore", "checkNotNull", "checkTransactionState", "newRemoteCallHook", "isEquals", "removeInternal", "containsKey", "beforeRemoteCall", "toData", "put", "removeIfSameInternal", "toObjectIfNeeded", "toObject", "getStore", "delete", "newDeletedEntry", "add", "toHeapData", "getValue", "getCacheId", "poll", "get", "onEntryRemoved", "clear", "next", "hasNext", "releaseWriteLock", "removeKey", "takeWriteLock", "getKeyData", "toUnsignedInt", "arraycopy", "capacityDeltaInt", "toUnsignedLong", "unsignedBinarySearch", "capacityDeltaShort" ]
    }, {
      "name" : "removeAll",
      "visibility" : "public",
      "methodCalls" : [ "invokeOnPartition", "alwaysTrue", "encodeRequest", "decodeResponse", "removeAll", "deleteAll", "getStore", "isEmpty", "handleHazelcastInstanceAwareParams", "checkNotNull", "removeAllInternal", "checkDoesNotContainPagingPredicate", "currentTimeMillis", "hashCode", "publishEvent", "increaseCacheRemovals", "isStatisticsEnabled", "createCacheCompleteEvent", "deleteRecord", "deleteAllCacheEntry", "processExpiredEntry", "contains", "get", "add", "isEventsEnabled", "keySet", "publishBatchedEvents", "remove", "compareAndRemove", "validateNotNull", "ensureOpen", "clear", "objectToDataCollection", "removeAllKeysInternal", "getSerializationService", "size", "nowInNanosOrDefault" ]
    }, {
      "name" : "executeOnKeys",
      "visibility" : "public",
      "methodCalls" : [ "executeOnKeys", "rethrow", "submitToKeys", "get" ]
    }, {
      "name" : "getEntryView",
      "visibility" : "public",
      "methodCalls" : [ "withLastStoredTime", "withLastUpdateTime", "withVersion", "getExpirationTime", "withMaxIdle", "getLastStoredTime", "getThreadId", "withCreationTime", "withExpirationTime", "getLastUpdateTime", "withTtl", "decodeResponse", "getKey", "getLastAccessTime", "encodeRequest", "getCost", "withCost", "toData", "withKey", "getTtl", "withHits", "getCreationTime", "withValue", "withLastAccessTime", "getVersion", "getHits", "setKey", "checkNotNull", "toObject", "toDataWithStrategy", "setValue", "getEntryViewInternal", "getValue" ]
    }, {
      "name" : "project",
      "visibility" : "public",
      "methodCalls" : [ "setProjection", "bsonToDocument", "project", "decodeResponse", "checkDoesNotContainPagingPredicate", "toData", "checkNotNull", "getSerializationService", "encodeRequest", "createPartitionTarget", "alwaysTrue", "toList", "createRexToExpressionVisitor", "accept", "projection", "setTarget", "getFieldCount", "conclude", "convert", "error", "getToConverter", "get", "entry", "init", "set", "getSerialized" ]
    }, {
      "name" : "keySet",
      "visibility" : "public",
      "methodCalls" : [ "invokeOnPartition", "keySetInternal", "getStorage", "getStats", "incrementOtherOperations", "createHashSet", "addAll", "max", "getAllReplicatedRecordStores", "getName", "keySet", "scanAndGetResult", "alwaysTrue", "checkNotNull", "getExtractors", "mapName", "getValue", "build", "apply", "incrementOtherOperationsStat", "add", "checkNotInstanceOf", "isOriginatedFromClient", "entrySet", "of", "getQueryEngine", "transformToSet", "getKey", "remove", "checkTransactionState", "predicate", "toObjectIfNeeded", "execute", "init", "iterationType", "createPartitionTarget", "getSerializationService", "invoke", "encodeRequest", "decodeResponse", "getTransactionId", "size", "getThreadId", "toData", "toObject", "containsPagingPredicate" ]
    }, {
      "name" : "putAll",
      "visibility" : "public",
      "methodCalls" : [ "getPartitionId", "get", "keySet", "invoke", "entrySet", "size", "toData", "encodeRequest", "getValue", "getKey", "nowInNanosOrDefault", "isEmpty", "rethrow", "validateNotNull", "putToAllPartitionsAndWaitForCompletion", "ensureOpen", "getPartitionCount", "putAllInternal", "checkNotNull", "values", "add", "putAll" ]
    }, {
      "name" : "putIfAbsent",
      "visibility" : "public",
      "methodCalls" : [ "fromStoreValue", "putIfAbsent", "toStoreValue", "getOrPutIfAbsent", "putIfAbsentInternal", "putInternal", "get", "toData", "toObjectIfNeeded", "checkTransactionState", "beforeRemoteCall", "newRemoteCallHook", "checkNotNull", "put", "getNow", "toObject", "increaseEntryCount", "putIfAbsentAsyncInternal", "rethrowAllowedTypeFirst", "putIfAbsentSync", "getTransactionId", "invoke", "getThreadId", "encodeRequest", "decodeResponse", "getMap" ]
    }, {
      "name" : "evict",
      "visibility" : "public",
      "methodCalls" : [ "delete", "getEvictor", "evictEntries", "disposeDeferredBlocks", "isBackup", "getNow", "assertRunningOnPartitionThread", "rethrow", "get", "publishWanRemove", "toHeapData", "interceptRemove", "removeRecord", "getValue", "copyToHeapWhenNeeded", "removeKeyFromExpirySystem", "onEvictRecord", "checkNotNull", "evictInternal", "getValueInternal", "fireEntryListenerEvent", "isNotNull", "isStatisticsEnabled", "marshall", "nanosElapsed", "toData", "incrementRemovesNanos", "getStorage", "getEventPublishingService", "getStats", "nanos", "getThisAddress", "evict", "isEvictionRequired" ]
    }, {
      "name" : "clear",
      "visibility" : "public",
      "methodCalls" : [ "destroyIndexes", "completeExceptionally", "incrementInvalidationRequests", "setOwnedEntryMemoryCost", "setOwnedEntryCount", "checkAvailable", "incrementInvalidations", "cancelAll", "drainTo", "afterTaskCompletion", "incrementOtherOperations", "isStatisticsEnabled", "getNodeEngine", "getService", "getLocalMultiMapStatsImpl", "emptySet", "putAll", "incrementVersion", "values", "fireMapClearedEvent", "invokeOnAllPartitions", "getOperationService", "rethrow", "invokeOnPartition", "encodeRequest", "ensureOpen", "isEnabled", "createLinkedHashMap", "keySet", "isEmpty", "getSerializedObject", "deleteAll", "getItemQueue", "invoke", "decreaseEntryCount", "getCollection", "put", "getItemId", "getValue", "createHashMap", "destroyEventJournal", "clearInternal", "forEach", "contains", "toHeapData", "isTieredStorageEnabled", "updateStatsOnRemove", "getLockedKeys", "checkIfLoaded", "add", "currentTimeMillis", "removeBulk", "removeAll", "getOrCreateExpireTimeByKeyMap", "reset", "releaseAllReservations", "clearAll", "size", "clear", "poll", "get", "releaseWriteLock", "takeWriteLock", "onClear", "unlock", "set", "lock", "arraycopy", "capacityDeltaShort", "toUnsignedInt", "unsignedBinarySearch", "fill" ]
    }, {
      "name" : "evictAll",
      "visibility" : "public",
      "methodCalls" : [ "encodeRequest", "evictAll", "clear", "evictAllInternal", "forEach", "add", "contains", "isTieredStorageEnabled", "getLockedKeys", "toHeapData", "checkIfLoaded", "evictBulk" ]
    }, {
      "name" : "flush",
      "visibility" : "public",
      "methodCalls" : [ "compareAndSet", "offer", "currentThread", "write", "encodeRequest", "invokeOnAllPartitions", "add", "rethrow", "getNodeEngine", "getKey", "createMapFlushOperation", "getValue", "invokeOnPartition", "entrySet", "singletonList", "drainTo", "toHeapData", "remove", "contains", "newNullEntry", "get", "size", "flushAllAccumulators", "flush", "put", "position", "remaining", "array", "copyOf", "clear" ]
    }, {
      "name" : "putAllWithMetadataAsync",
      "visibility" : "public",
      "methodCalls" : [ "invoke", "put", "withLastAccessTime", "getContext", "isDone", "groupingBy", "getName", "completeExceptionally", "decrementAndGet", "withExpirationTime", "withTtl", "getPartitionId", "getExpirationTime", "size", "finalizePutAll", "getTtl", "withVersion", "getPartitionService", "stream", "getCreationTime", "getMaxIdle", "entrySet", "getKey", "withLastUpdateTime", "complete", "getValue", "getVersion", "getCost", "collect", "getHits", "withLastStoredTime", "get", "getLastAccessTime", "withCost", "encodeRequest", "withMaxIdle", "withHits", "map", "getClient", "whenCompleteAsync", "toData", "getDefaultAsyncExecutor", "withCreationTime", "checkNotNull", "getLastStoredTime", "getLastUpdateTime", "isEmpty", "keySet", "containsKey", "add" ]
    }, {
      "name" : "replace",
      "visibility" : "public",
      "methodCalls" : [ "replace", "getAndReplace", "handlerAdded", "replaceFirst", "setChannel", "getMap", "getTransactionId", "encodeRequest", "invoke", "decodeResponse", "getThreadId", "replaceSync", "checkNotNull", "put", "toData", "beforeRemoteCall", "replaceInternal", "toObjectIfNeeded", "newRemoteCallHook", "get", "equals", "putInternal", "replaceIfSameInternal", "checkTransactionState", "getNow", "toObject", "increaseCacheMisses", "increaseCachePuts", "addPutTimeNanos", "publishEvent", "nanosElapsed", "isExpiredAt", "isStatisticsEnabled", "rethrow", "isEventsEnabled", "toStorageValue", "onReplace", "updateRecordWithExpiry", "getExpiryPolicy", "createCacheCompleteEvent", "onReplaceError", "compare", "nanos", "currentTimeMillis", "increaseCacheHits", "onRecordAccess", "updateReplaceStat", "toEventData", "rethrowAllowedTypeFirst", "replaceAsyncInternal" ]
    }, {
      "name" : "containsKey",
      "visibility" : "public",
      "methodCalls" : [ "containsKey", "containsInternal", "getStats", "incrementOtherOperations", "isNotNull", "getReplicatedRecordStore", "getDeprecatedName", "getName", "getParent", "checkNotNull", "toQueryCacheKey", "get", "toData", "containsKeyInternal", "checkTransactionState", "loadRecordOrNull", "accessRecord", "getNow", "checkIfLoaded", "getRecordOrNull", "validateNotNull", "getOperationService", "getPartitionId", "invokeOnPartition", "getNodeEngine", "getServiceName", "ensureOpen", "createContainsKeyOperation", "joinInternal", "decodeResponse", "encodeRequest", "getThreadId", "invoke", "getTransactionId" ]
    }, {
      "name" : "aggregate",
      "visibility" : "public",
      "methodCalls" : [ "encodeRequest", "apply", "finishFn", "singletonList", "keyFn", "adaptAggregateOperation1", "ensureJetEvents", "attach", "adaptKeyFn", "checkNotNull", "toData", "toObject", "executeQueryInternal", "alwaysTrue", "aggregate", "getAggregator", "checkDoesNotContainPagingPredicate", "divide", "valueOf", "decodeResponse" ]
    }, {
      "name" : "delete",
      "visibility" : "public",
      "methodCalls" : [ "runWithOwnClassLoader", "close", "execute", "awaitSuccessfulInit", "getMap", "getNodeEngine", "delete", "publishEntryEvent", "checkNotNull", "remove", "toQueryCacheKey", "recordValue", "nanosElapsed", "nanos", "checkTransactionState", "toData", "put", "toObjectIfNeeded", "containsKey", "beforeRemoteCall", "newRemoteCallHook", "removeInternal", "persistenceEnabledFor", "getRecordOrNull", "updateStatsOnRemove", "getNow", "removeRecord", "checkIfLoaded", "deleteInternal", "get", "runWithNamespace", "getThreadId", "invoke", "encodeRequest", "getTransactionId" ]
    }, {
      "name" : "submitToKey",
      "visibility" : "public",
      "methodCalls" : [ "submitToKeyInternal", "executeOnKeyInternal", "checkNotNull", "newDelegatingFuture", "handleHazelcastInstanceAwareParams" ]
    }, {
      "name" : "addEntryListener",
      "visibility" : "public",
      "methodCalls" : [ "getService", "getNodeEngine", "addLocalEventListener", "registerListener", "createListenerAdapter", "handleHazelcastInstanceAwareParams", "addEntryListenerInternal", "toDataWithStrategy", "addListener", "checkNotNull", "getName", "toData", "checkDoesNotContainPagingPredicate", "getEventService" ]
    }, {
      "name" : "executeOnEntries",
      "visibility" : "public",
      "methodCalls" : [ "prepareResult", "toData", "encodeRequest", "decodeResponse", "isEmpty", "toObject", "createHashMap", "put", "checkNotNull", "alwaysTrue", "get", "handleHazelcastInstanceAwareParams", "emptyMap", "executeOnEntriesInternal", "executeOnEntries", "size", "checkDoesNotContainPagingPredicate" ]
    }, {
      "name" : "addIndex",
      "visibility" : "public",
      "methodCalls" : [ "validateAndNormalize", "encodeRequest", "createIndexConfig", "addIndex", "getClusterService", "getNodeEngine", "getClusterState", "toData", "getKey", "addOrGetIndex", "isGlobal", "putEntry", "getNormalizedIndexConfig", "getValue", "init", "checkNotNull", "entrySet", "getSerializationService" ]
    }, {
      "name" : "submitToKeyInternal",
      "visibility" : "public",
      "methodCalls" : [ "getSerializationService", "encodeRequest", "getThreadId", "toData", "rethrow", "submitToKeyInternal" ]
    }, {
      "name" : "subscribeToEventJournal",
      "visibility" : "public",
      "methodCalls" : [ "decodeResponse", "getSerializationService", "invoke", "encodeRequest", "getClient", "getName", "getOperationService", "getNodeEngine", "setPartitionId", "invokeOnPartition" ]
    }, {
      "name" : "submitToKeys",
      "visibility" : "public",
      "methodCalls" : [ "objectToDataCollection", "getSerializationService", "newCompletedFuture", "size", "emptyMap", "handleHazelcastInstanceAwareParams", "checkNotNull", "submitToKeysInternal", "isEmpty", "createHashSet" ]
    }, {
      "name" : "setAll",
      "visibility" : "public",
      "methodCalls" : [ "putAllInternal", "checkNotNull" ]
    }, {
      "name" : "executeOnKey",
      "visibility" : "public",
      "methodCalls" : [ "executeOnKey", "executeOnKeyInternal", "toObject", "checkNotNull", "joinInternal", "handleHazelcastInstanceAwareParams" ]
    }, {
      "name" : "isLocked",
      "visibility" : "public",
      "methodCalls" : [ "get", "joinInternal", "toData", "invoke", "decodeResponse", "encodeRequest", "getNodeEngine", "checkNotNull", "toDataWithStrategy", "isLocked" ]
    }, {
      "name" : "tryRemove",
      "visibility" : "public",
      "methodCalls" : [ "tryRemoveInternal", "checkNotNull" ]
    }, {
      "name" : "set",
      "visibility" : "public",
      "methodCalls" : [ "set", "setData", "capacity", "getData", "setPartitionKey", "flip", "clear", "wrap", "setOption", "name", "setIfSupported", "add", "indexOf", "value", "joinInternal", "join", "setAsync", "getCapacity", "setHeadSequence", "setExpirationAt", "size", "tailSequence", "headSequence", "setTailSequence", "toObject", "decodeResponse", "invokeOnPartition", "encodeRequest", "getTransactionId", "getThreadId", "notifyAll", "setOpaque", "get", "min", "capacityDeltaShort", "toUnsignedInt", "unsignedBinarySearch", "arraycopy", "put", "putInternal", "beforeRemoteCall", "toData", "checkTransactionState", "checkNotNull", "newRemoteCallHook", "getNow", "setInternal", "checkIndexNotNegative", "getNodeEngine", "getCollection", "invoke" ]
    }, {
      "name" : "merge",
      "visibility" : "public",
      "methodCalls" : [ "onStore", "set", "setTargetAddress", "runUnderLifecycleLock", "getJoiner", "getLifecycleService", "lock", "unlock", "getCounter", "getLocalPNCounterStats", "getMultiMapValueOrNull", "toData", "marshall", "setValueInternal", "getStorage", "getVersion", "getTtlMillis", "incrementVersion", "currentTimeMillis", "nanosElapsed", "valueToData", "processExpiredEntry", "createRecordWithExpiry", "addPutTimeNanos", "nanos", "isStatisticsEnabled", "isMergeApplied", "increaseCachePuts", "executeOnKey", "isClassStaticAndSerializable", "checkNotNull", "put", "entrySet", "containsKey", "get", "isEqual", "getNow", "attachMerge", "getManagedContext", "cancel", "merge", "createMergingEntry", "getSerializationService", "equals", "getRawValue", "initialize", "enqueueSuspended", "values", "getExpirationTime", "getHits", "getEncodingType", "max", "asDense", "getKey", "estimate", "setValue", "mergeRecordExpiration", "copyToHeapWhenNeeded", "putNewRecord", "getValue", "getExpiryMetadata", "updateRecord", "getRawKey", "getRecordOrNull", "removeRecord0", "remove", "checkIfLoaded", "persistenceEnabledFor" ]
    }, {
      "name" : "putAllAsync",
      "visibility" : "public",
      "methodCalls" : [ "newCompletedFuture", "replicateAll", "finest", "isFinestEnabled", "isEmpty", "getNodeEngine", "put", "getValue", "toData", "getSerializationService", "entrySet", "getKey", "objectToDataCollection", "putAllInternal", "checkNotNull" ]
    }, {
      "name" : "containsValue",
      "visibility" : "public",
      "methodCalls" : [ "containsValue", "checkNotNull", "getValue", "isEquals", "values", "getKey", "iterator", "hasNext", "isEmpty", "checkIfLoaded", "next", "getNow", "toData", "isEqual", "toObject", "evictIfExpired", "containsValueInternal", "invoke", "encodeRequest", "decodeResponse", "invokeOnPartition", "getAllReplicatedRecordStores", "getName", "unmarshall", "getStats", "isNotNull", "equals", "getStorage", "entrySet", "incrementOtherOperations", "keySet", "containsEntry", "getNodeEngine", "containsInternal" ]
    }, {
      "name" : "replaceAll",
      "visibility" : "public",
      "methodCalls" : [ "replaceAllInternal", "isClassStaticAndSerializable", "executeOnEntries", "replaceAll", "checkNotNull" ]
    }, {
      "name" : "entrySet",
      "visibility" : "public",
      "methodCalls" : [ "getObjectEntrySet", "toObject", "getNodeEngine", "values", "entrySetInternal", "incrementOtherOperations", "getStats", "getStorage", "getAllReplicatedRecordStores", "addAll", "getLocalReplicatedMapStats", "getName", "invokeOnPartition", "toData", "containsPagingPredicate", "decodeResponse", "invoke", "encodeRequest", "getSerializationService", "incrementEntrySetCallCount", "createPartitionTarget", "checkNotNull", "scanAndGetResult", "alwaysTrue", "entrySet" ]
    }, {
      "name" : "addInterceptor",
      "visibility" : "public",
      "methodCalls" : [ "toData", "decodeResponse", "encodeRequest", "addMapInterceptorInternal", "handleHazelcastInstanceAwareParams", "checkNotNull", "getMapContainer", "getInterceptorRegistry", "register" ]
    }, {
      "name" : "addPartitionLostListener",
      "visibility" : "public",
      "methodCalls" : [ "getManagedContext", "getSerializationService", "initialize", "createPartitionLostListenerCodec", "getContext", "getListenerService", "injectDependencies", "getService", "getNodeEngine", "getEventService", "addPartitionLostListenerInternal", "checkNotNull", "handleHazelcastInstanceAwareParams", "registerListener", "getId", "addPartitionLostListener" ]
    }, {
      "name" : "removeInterceptor",
      "visibility" : "public",
      "methodCalls" : [ "decodeResponse", "encodeRequest", "removeMapInterceptorInternal", "checkNotNull", "getInterceptorRegistry", "deregister", "getMapContainer" ]
    }, {
      "name" : "getAll",
      "visibility" : "public",
      "methodCalls" : [ "rethrowAllowedTypeFirst", "getMap", "nowInNanosOrDefault", "getPartitionsForKeys", "putAllToMap", "getServiceName", "createHashSet", "values", "ensureOpen", "getOperationService", "getAll", "unmodifiableMap", "getDelegate", "toQueryCacheKey", "createHashMap", "checkNotNull", "checkNoNullInside", "get", "toObject", "size", "isEmpty", "getValue", "emptyMap", "put", "loadMultipleKeys", "checkIfLoaded", "getInMemoryEntries", "addToMapEntrySet", "putAndGetLoadedEntries", "getNow", "getAllInternal", "add", "toHeapData", "getCollection", "invokeOnPartitions", "getNodeEngine", "validateNotNull", "toData", "createGetAllOperationFactory" ]
    }, {
      "name" : "isEmpty",
      "visibility" : "public",
      "methodCalls" : [ "isEmpty", "deserialized", "hasNext", "iterator", "getStorage", "getStats", "incrementOtherOperations", "getAllReplicatedRecordStores", "getName", "invokeOnPartition", "decodeResponse", "encodeRequest", "invoke", "size", "isNullOrEmpty", "values", "incrementOtherOperationsStat", "toObject", "invokeOnAllPartitions", "rethrow", "checkTransactionState", "checkIfLoaded" ]
    }, {
      "name" : "getQueryCache",
      "visibility" : "public",
      "methodCalls" : [ "checkNotNull", "handleHazelcastInstanceAwareParams", "checkDoesNotContainPagingPredicate" ]
    }, {
      "name" : "setAsync",
      "visibility" : "public",
      "methodCalls" : [ "putAsync", "invokeOnPartition", "setPartitionId", "encodeRequest", "checkNotNull", "setAsyncInternal", "newDelegatingFuture", "setAsync", "toData" ]
    }, {
      "name" : "forceUnlock",
      "visibility" : "public",
      "methodCalls" : [ "remove", "cancelEviction", "isRemovable", "get", "clear", "joinInternal", "getNextReferenceId", "invoke", "toData", "encodeRequest", "toDataWithStrategy", "getNodeEngine", "checkNotNull", "forceUnlock" ]
    }, {
      "name" : "readFromEventJournal",
      "visibility" : "public",
      "methodCalls" : [ "setSerializationService", "decodeResponse", "getSerializationService", "getName", "toData", "encodeRequest", "getClient", "invoke", "getOperationService", "getNodeEngine", "initialize", "setPartitionId", "invokeOnPartition", "getManagedContext" ]
    }, {
      "name" : "executeOnKeyInternal",
      "visibility" : "public",
      "methodCalls" : [ "toObject", "decodeResponse", "encodeRequest", "toData", "toDataWithStrategy", "createInvocationBuilder", "getThreadId", "getPartitionId", "createEntryOperation", "invoke", "setResultDeserialized", "setThreadId", "setFailOnIndeterminateOperationState", "executeOnKeyInternal", "invalidateNearCache" ]
    }, {
      "name" : "removeEntryListener",
      "visibility" : "public",
      "methodCalls" : [ "getService", "removeEventListener", "deregisterListener", "removeEntryListenerInternal", "getEventService", "checkNotNull", "removeListener" ]
    }, {
      "name" : "loadAll",
      "visibility" : "public",
      "methodCalls" : [ "getKey", "execute", "getRowMetadata", "toGenericRecord", "getObject", "toArray", "getColumnCount", "awaitSuccessfulInit", "encodeRequest", "clear", "validateNotNull", "validateConfiguredTypes", "ensureOpen", "createAndSubmitLoadAllTask", "toData", "callWithNamespace", "copyOf", "get", "add", "putIfAbsent", "loadAll", "isEmpty", "isMapLoader", "callWithOwnClassLoader", "iterator", "size", "hasNext", "remove", "createHashMap", "put", "next", "putAll", "getExpirationTime", "toHeapData", "isWithExpirationTime", "emptyMap", "getValue", "toObject", "getStore", "recordValue", "nanosElapsed", "nanos", "load", "isFinestEnabled", "info", "startLoading", "finest", "checkTrue", "isMapStoreEnabled", "loadAllInternal", "checkNoNullInside", "loadInternal", "checkNotNull", "entrySet", "emptySet", "createHashSet", "loadAllCacheEntry" ]
    }, {
      "name" : "put",
      "visibility" : "public",
      "methodCalls" : [ "toMillis", "putAsync", "join", "tryReserveForUpdate", "tryPublishReserved", "doEviction", "setEntryTaskScheduler", "setLockService", "getNamespace", "getAndPut", "getMap", "checkTransactionActive", "getNodeEngine", "incrementVersion", "isNotNull", "getStorage", "invokeOnPartition", "joinInternal", "getPartitionId", "getName", "getResponse", "getPartitionService", "getOperationService", "getServiceName", "invokeOnPartitionInterruptibly", "getSchemaId", "onPlanUsed", "put", "toStoreValue", "set", "calculateValueCost", "calculateEntryCost", "updateCostEstimate", "checkTransactionState", "toData", "beforeRemoteCall", "get", "putInternal", "toObjectIfNeeded", "checkNotNull", "newRemoteCallHook", "getNow", "toObject", "increaseEntryCount", "offer", "putAsyncInternal", "rethrowAllowedTypeFirst", "putSyncInternal", "getThreadId", "encodeRequest", "getTransactionId", "decodeResponse", "invoke" ]
    }, {
      "name" : "compute",
      "visibility" : "public",
      "methodCalls" : [ "checkNotNull", "executeOnKey", "isClassStaticAndSerializable" ]
    }, {
      "name" : "iterable",
      "visibility" : "public",
      "methodCalls" : [ "getPartitionService", "getContext", "ensureOpen", "getPartitionCount", "checkNotNull" ]
    }, {
      "name" : "computeIfAbsent",
      "visibility" : "public",
      "methodCalls" : [ "checkNotNull", "executeOnKey", "isClassStaticAndSerializable", "computeIfAbsent", "get", "size", "apply" ]
    }, {
      "name" : "localValues",
      "visibility" : "public",
      "methodCalls" : [ "localValues", "alwaysTrue" ]
    }, {
      "name" : "getAsync",
      "visibility" : "public",
      "methodCalls" : [ "setPartitionId", "invokeOnPartition", "encodeRequest", "getSerializationService", "whenCompleteAsync", "tryReserveForUpdate", "getTaskScheduler", "getClient", "newCompletedFuture", "decodeResponse", "rethrow", "invoke", "validateNotNull", "ensureOpen", "toData", "createGetOperation", "getAsyncInternal", "checkNotNull", "newDelegatingFuture", "getAsync" ]
    }, {
      "name" : "putAsync",
      "visibility" : "public",
      "methodCalls" : [ "replicate", "getAndPutAsync", "newDelegatingFuture", "checkNotNull", "putAsyncInternal", "toData", "putAsync" ]
    } ],
    "imports" : [ "com.hazelcast.client.map.impl.iterator.ClientMapQueryIterable", "com.hazelcast.client.impl.protocol.codec.MapAddInterceptorCodec", "com.hazelcast.client.impl.spi.ClientPartitionService", "com.hazelcast.internal.util.TimeUtil.timeInMsOrTimeIfNullUnit", "com.hazelcast.client.impl.protocol.codec.MapEventJournalSubscribeCodec", "com.hazelcast.map.impl.querycache.subscriber.SubscriberContext", "java.util.concurrent.Future", "com.hazelcast.query.impl.predicates.PagingPredicateImpl", "com.hazelcast.client.impl.protocol.codec.MapGetAllCodec", "com.hazelcast.map.EventJournalMapEvent", "com.hazelcast.core.EntryEvent", "com.hazelcast.client.impl.protocol.codec.MapKeySetWithPredicateCodec", "java.util.concurrent.TimeUnit", "com.hazelcast.client.impl.protocol.codec.MapExecuteWithPredicateCodec", "java.util.AbstractMap", "com.hazelcast.internal.util.ExceptionUtil.rethrow", "java.util.List", "com.hazelcast.client.map.impl.iterator.ClientMapIterator", "com.hazelcast.query.impl.predicates.PredicateUtils.checkDoesNotContainPagingPredicate", "java.util.Collection", "com.hazelcast.query.impl.predicates.PredicateUtils.unwrapPagingPredicate", "com.hazelcast.client.impl.spi.ClientProxy", "com.hazelcast.client.impl.protocol.codec.MapLoadGivenKeysCodec", "com.hazelcast.client.impl.protocol.codec.MapPutIfAbsentWithMaxIdleCodec", "com.hazelcast.projection.Projection", "com.hazelcast.internal.util.CollectionUtil", "com.hazelcast.query.Predicate", "com.hazelcast.client.impl.protocol.codec.MapAddPartitionLostListenerCodec", "com.hazelcast.map.impl.querycache.subscriber.QueryCacheRequest.newQueryCacheRequest", "com.hazelcast.internal.util.IterationType", "com.hazelcast.map.listener.MapPartitionLostListener", "java.util.concurrent.atomic.AtomicInteger", "java.util.ArrayList", "com.hazelcast.map.impl.DataAwareEntryEvent", "com.hazelcast.client.impl.protocol.codec.MapExecuteOnKeysCodec", "com.hazelcast.map.QueryCache", "com.hazelcast.query.impl.IndexUtils", "com.hazelcast.client.impl.protocol.codec.MapGetCodec", "com.hazelcast.client.impl.ClientDelegatingFuture", "com.hazelcast.ringbuffer.ReadResultSet", "com.hazelcast.internal.serialization.impl.SerializationUtil", "com.hazelcast.spi.impl.InternalCompletableFuture", "com.hazelcast.internal.serialization.Data", "com.hazelcast.client.impl.spi.impl.ClientInvocationFuture", "com.hazelcast.client.impl.protocol.codec.MapRemoveEntryListenerCodec", "com.hazelcast.client.impl.protocol.codec.MapValuesCodec", "java.util.function.Function", "com.hazelcast.client.impl.protocol.codec.MapSetCodec", "com.hazelcast.internal.util.Preconditions.checkNotNull", "com.hazelcast.client.impl.protocol.codec.MapValuesWithPredicateCodec", "com.hazelcast.query.PagingPredicate", "com.hazelcast.client.impl.protocol.codec.MapRemoveCodec", "com.hazelcast.client.impl.protocol.codec.MapEventJournalSubscribeCodec.ResponseParameters", "com.hazelcast.core.ManagedContext", "com.hazelcast.client.impl.protocol.codec.MapForceUnlockCodec", "com.hazelcast.client.map.impl.iterator.ClientMapQueryPartitionIterator", "com.hazelcast.query.impl.predicates.PredicateUtils.containsPagingPredicate", "com.hazelcast.map.impl.MapListenerFlagOperator.setAndGetListenerFlags", "java.util.HashMap", "com.hazelcast.client.impl.protocol.codec.MapRemoveAllCodec", "com.hazelcast.internal.util.MapUtil.createHashMap", "com.hazelcast.client.impl.protocol.codec.MapSubmitToKeyCodec", "com.hazelcast.core.EntryView", "com.hazelcast.client.impl.protocol.codec.MapReplaceAllCodec", "com.hazelcast.internal.serialization.SerializationService", "javax.annotation.Nullable", "com.hazelcast.client.impl.protocol.codec.MapExecuteOnAllKeysCodec", "com.hazelcast.map.impl.querycache.subscriber.QueryCacheRequest", "com.hazelcast.client.impl.protocol.codec.MapValuesWithPagingPredicateCodec", "com.hazelcast.client.impl.spi.ClientContext", "com.hazelcast.client.impl.protocol.codec.MapTryLockCodec", "com.hazelcast.client.impl.protocol.codec.MapAggregateCodec", "javax.annotation.Nonnull", "com.hazelcast.client.impl.protocol.codec.MapAggregateWithPredicateCodec", "com.hazelcast.client.map.impl.iterator.ClientMapPartitionIterable", "com.hazelcast.client.impl.protocol.codec.MapProjectWithPredicateCodec", "com.hazelcast.internal.util.TimeUtil.timeInMsOrOneIfResultIsZero", "com.hazelcast.client.impl.protocol.codec.MapUnlockCodec", "com.hazelcast.client.impl.protocol.codec.MapContainsValueCodec", "com.hazelcast.map.impl.ListenerAdapter", "com.hazelcast.map.LocalMapStats", "com.hazelcast.client.impl.clientside.ClientLockReferenceIdGenerator", "java.util.Map", "com.hazelcast.client.impl.protocol.codec.MapDeleteCodec", "com.hazelcast.internal.util.ConcurrencyUtil", "com.hazelcast.client.impl.protocol.codec.MapExecuteOnKeyCodec", "com.hazelcast.internal.util.ThreadUtil.getThreadId", "com.hazelcast.client.impl.protocol.codec.MapPutWithMaxIdleCodec", "com.hazelcast.client.impl.protocol.codec.MapEntriesWithPredicateCodec", "com.hazelcast.client.impl.protocol.codec.MapKeySetWithPagingPredicateCodec", "com.hazelcast.map.impl.querycache.subscriber.QueryCacheEndToEndProvider", "com.hazelcast.client.impl.protocol.codec.MapSetTtlCodec", "com.hazelcast.client.impl.protocol.codec.MapRemoveIfSameCodec", "com.hazelcast.client.impl.protocol.codec.MapAddEntryListenerToKeyWithPredicateCodec", "java.util.function.BiFunction", "java.util.stream.Collectors.groupingBy", "com.hazelcast.spi.impl.UnmodifiableLazyList", "com.hazelcast.client.impl.protocol.codec.MapKeySetCodec", "com.hazelcast.query.PartitionPredicate", "com.hazelcast.ringbuffer.impl.ReadResultSetImpl", "com.hazelcast.client.impl.protocol.codec.holder.PagingPredicateHolder", "com.hazelcast.client.impl.protocol.codec.MapAddEntryListenerCodec", "com.hazelcast.client.impl.protocol.codec.MapGetEntryViewCodec", "com.hazelcast.aggregation.Aggregator", "java.util.Collections", "com.hazelcast.client.impl.protocol.codec.MapEventJournalReadCodec", "com.hazelcast.client.impl.protocol.codec.MapEntriesWithPagingPredicateCodec", "com.hazelcast.client.impl.protocol.codec.MapAddIndexCodec", "com.hazelcast.client.impl.protocol.codec.MapReplaceIfSameCodec", "java.util.function.BiConsumer", "com.hazelcast.internal.monitor.impl.LocalMapStatsImpl", "com.hazelcast.map.impl.record.Record.UNSET", "com.hazelcast.map.impl.ListenerAdapters.createListenerAdapter", "com.hazelcast.map.EntryProcessor", "com.hazelcast.client.impl.protocol.codec.MapEvictAllCodec", "com.hazelcast.client.impl.protocol.codec.MapClearCodec", "com.hazelcast.client.impl.protocol.codec.MapEvictCodec", "java.util.Collections.emptyMap", "com.hazelcast.client.impl.protocol.codec.MapRemovePartitionLostListenerCodec", "com.hazelcast.client.impl.protocol.codec.MapEntrySetCodec", "com.hazelcast.client.impl.protocol.codec.MapPutTransientWithMaxIdleCodec", "java.util.concurrent.CompletableFuture", "com.hazelcast.client.impl.protocol.codec.MapAddEntryListenerWithPredicateCodec", "com.hazelcast.core.ReadOnly", "com.hazelcast.client.impl.protocol.ClientMessage", "com.hazelcast.client.impl.protocol.codec.MapSetWithMaxIdleCodec", "com.hazelcast.client.impl.protocol.codec.MapTryRemoveCodec", "com.hazelcast.internal.util.CollectionUtil.objectToDataCollection", "com.hazelcast.map.MapEvent", "com.hazelcast.client.impl.protocol.codec.MapPutAllWithMetadataCodec", "com.hazelcast.client.impl.protocol.codec.MapPutCodec", "com.hazelcast.map.listener.MapListener", "com.hazelcast.client.impl.protocol.codec.MapLoadAllCodec", "com.hazelcast.client.impl.protocol.codec.MapTryPutCodec", "com.hazelcast.client.impl.protocol.codec.MapPutIfAbsentCodec", "com.hazelcast.client.impl.protocol.codec.MapRemoveInterceptorCodec", "com.hazelcast.client.impl.spi.EventHandler", "com.hazelcast.client.impl.protocol.codec.MapContainsKeyCodec", "com.hazelcast.spi.impl.UnmodifiableLazySet", "com.hazelcast.client.impl.protocol.codec.MapIsEmptyCodec", "com.hazelcast.config.IndexConfig", "com.hazelcast.map.impl.SimpleEntryView", "com.hazelcast.client.impl.protocol.codec.MapPutAllCodec", "com.hazelcast.client.impl.protocol.codec.MapSizeCodec", "com.hazelcast.cluster.Member", "com.hazelcast.client.impl.protocol.codec.MapPutTransientCodec", "com.hazelcast.client.map.impl.iterator.ClientMapPartitionIterator", "com.hazelcast.map.IMap", "com.hazelcast.client.impl.protocol.codec.MapProjectCodec", "com.hazelcast.internal.journal.EventJournalReader", "java.util.UUID", "com.hazelcast.client.impl.spi.impl.ClientInvocation", "com.hazelcast.client.impl.protocol.codec.MapIsLockedCodec", "com.hazelcast.map.IMapEvent", "com.hazelcast.client.impl.protocol.codec.MapFlushCodec", "com.hazelcast.client.map.impl.querycache.ClientQueryCacheContext", "java.util.concurrent.TimeUnit.MILLISECONDS", "com.hazelcast.client.impl.protocol.codec.MapLockCodec", "com.hazelcast.client.impl.protocol.codec.MapReplaceCodec", "com.hazelcast.client.impl.protocol.codec.MapAddEntryListenerToKeyCodec", "com.hazelcast.client.impl.spi.impl.ListenerMessageCodec", "com.hazelcast.map.MapInterceptor", "com.hazelcast.client.map.impl.iterator.ClientMapQueryPartitionIterable", "com.hazelcast.map.MapPartitionLostEvent", "java.util.Iterator", "java.util.Set", "com.hazelcast.core.EntryEventType", "java.lang.Thread.currentThread", "com.hazelcast.client.map.impl.iterator.ClientMapIterable", "com.hazelcast.internal.util.Preconditions.checkPositive", "com.hazelcast.internal.journal.EventJournalInitialSubscriberState" ]
  } ]
}