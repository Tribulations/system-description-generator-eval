{
  "systemName" : "alluxio",
  "classes" : [ {
    "name" : "Metrics",
    "packageName" : "alluxio.master.file",
    "extendedClasses" : [ ],
    "implementedInterfaces" : [ ],
    "methods" : [ {
      "name" : "registerGauges",
      "visibility" : "public",
      "methodCalls" : [ "error", "get", "getString", "getTtlBuckets", "getReplicationLimitedFileIds", "getSpace", "getMessage", "getToBePersistedIds", "empty", "getRoot", "acquireUfsResource", "getNumBuckets", "getNumInodes", "getGlobalStorageTierAssoc", "getTotalBytesOnTiers", "getMetricName", "getNumberOfBlocks", "getValue", "getAlias", "registerCachedGaugeIfAbsent", "getCapacityFree", "getOrDefault", "getName", "getUsedBytes", "getStoreMetaFull", "from", "size", "registerGaugeIfAbsent", "getCapacityBytesOnTiers", "getFreeBytesOnTiers", "getUsedBytesOnTiers", "getCapacityBytes" ]
    }, {
      "name" : "getUfsOpsSavedCounter",
      "visibility" : "public",
      "methodCalls" : [ "getMetricNameWithTags", "escape", "compute", "name", "counter" ]
    } ],
    "imports" : [ "alluxio.grpc.UfsReadOptions", "alluxio.master.file.contexts.LoadMetadataContext", "alluxio.job.plan.persist.PersistConfig", "alluxio.master.file.meta.InodePathPair", "alluxio.underfs.UfsMode", "alluxio.master.audit.AsyncUserAccessAuditLogWriter", "com.google.common.collect.Iterables", "alluxio.exception.UnexpectedAlluxioException", "alluxio.master.journal.NoopJournalContext", "alluxio.proto.journal.File.UpdateInodeEntry", "java.util.Spliterators", "alluxio.master.file.contexts.CheckAccessContext", "java.util.Objects", "alluxio.proto.journal.File.RenameEntry", "alluxio.master.file.meta.InodeDirectoryView", "alluxio.master.file.meta.Inode", "alluxio.util.UnderFileSystemUtils", "alluxio.master.block.BlockId", "alluxio.exception.status.FailedPreconditionException", "alluxio.security.authorization.AclEntryType", "alluxio.security.authentication.AuthenticatedClientUser", "alluxio.master.metastore.DelegatingReadOnlyInodeStore", "alluxio.master.file.contexts.FreeContext", "alluxio.client.job.JobMasterClient", "alluxio.proto.journal.File.SetAclEntry", "alluxio.wire.UfsInfo", "alluxio.recorder.Recorder", "alluxio.master.file.contexts.GetStatusContext", "alluxio.master.file.meta.PersistenceState", "java.util.TreeMap", "alluxio.job.wire.JobInfo", "alluxio.grpc.MountPOptions", "alluxio.master.scheduler.DefaultWorkerProvider", "alluxio.master.file.contexts.SetAclContext", "alluxio.wire.MountPointInfo", "alluxio.metrics.TimeSeries", "alluxio.grpc.DeletePOptions", "alluxio.master.file.contexts.WorkerHeartbeatContext", "alluxio.master.metastore.InodeStore", "alluxio.master.file.meta.LockingScheme", "alluxio.wire.SyncPointInfo", "alluxio.security.authorization.AclEntry", "alluxio.security.authentication.AuthType", "alluxio.master.file.meta.InodeTree.LockPattern", "alluxio.underfs.UfsFileStatus", "alluxio.master.file.mdsync.TaskGroup", "alluxio.master.file.mdsync.DefaultSyncProcess", "alluxio.grpc.GetStatusPOptions", "alluxio.exception.status.PermissionDeniedException", "java.io.FileNotFoundException", "alluxio.master.journal.ufs.UfsJournalSystem", "alluxio.metrics.MetricInfo.UFS_OP_SAVED_PREFIX", "alluxio.master.file.contexts.CreateDirectoryContext", "com.google.protobuf.ByteString", "alluxio.master.file.contexts.OperationContext", "alluxio.wire.FileBlockInfo", "alluxio.master.file.contexts.ExistsContext", "alluxio.grpc.SyncMetadataAsyncPResponse", "alluxio.master.file.contexts.CreateFileContext", "alluxio.master.ProtobufUtils", "com.google.common.collect.Sets", "alluxio.grpc.SetAclAction", "alluxio.master.file.contexts.CheckConsistencyContext", "alluxio.client.job.JobMasterClientPool", "alluxio.master.metastore.ReadOnlyInodeStore", "alluxio.proto.journal.File.UpdateInodeFileEntry.Builder", "com.codahale.metrics.Gauge", "alluxio.master.file.contexts.ScheduleAsyncPersistenceContext", "alluxio.wire.PersistCommandOptions", "alluxio.util.ModeUtils", "alluxio.master.file.meta.options.MountInfo", "alluxio.wire.FileSystemCommandOptions", "alluxio.underfs.Fingerprint", "alluxio.master.file.activesync.ActiveSyncManager", "alluxio.grpc.SetAttributePOptions", "com.google.common.collect.ImmutableMap", "alluxio.master.file.contexts.SyncMetadataContext", "alluxio.exception.FileAlreadyExistsException", "alluxio.master.file.contexts.InternalOperationContext", "alluxio.wire.CommandType", "alluxio.master.file.meta.InodeDirectory", "alluxio.master.journal.JournaledGroup", "alluxio.proto.journal.File.UpdateInodeFileEntry", "java.util.Stack", "alluxio.master.file.meta.LockedInodePath", "alluxio.master.file.contexts.MountContext", "alluxio.master.journal.DelegatingJournaled", "alluxio.wire.BlockLocation", "alluxio.underfs.UfsManager", "alluxio.grpc.CancelSyncMetadataPResponse", "com.google.common.collect.Streams", "alluxio.wire.PersistFile", "alluxio.master.metrics.TimeSeriesStore", "alluxio.master.file.contexts.DeleteContext", "alluxio.master.scheduler.JournaledJobMetaStore", "alluxio.master.scheduler.Scheduler", "alluxio.underfs.UnderFileSystemConfiguration", "alluxio.grpc.LoadDescendantPType", "alluxio.util.LogUtils", "alluxio.exception.DirectoryNotEmptyException", "alluxio.file.options.DescendantType", "alluxio.exception.InvalidPathException", "alluxio.master.file.contexts.SetAttributeContext", "alluxio.master.file.meta.InodeFile", "java.nio.charset.StandardCharsets", "alluxio.retry.CountingRetry", "alluxio.wire.FileSystemCommand", "alluxio.proto.journal.File.NewBlockEntry", "alluxio.underfs.UnderFileSystem", "java.util.SortedMap", "alluxio.master.file.contexts.CallTracker", "alluxio.master.file.meta.InodeLockManager", "alluxio.util.io.PathUtils", "alluxio.grpc.TtlAction", "alluxio.master.file.meta.MountTable", "alluxio.master.file.meta.UfsBlockLocationCache", "alluxio.master.file.InodeSyncStream.SyncStatus.NOT_NEEDED", "alluxio.grpc.GetSyncProgressPResponse", "alluxio.underfs.MasterUfsManager", "org.apache.commons.lang3.StringUtils", "java.util.concurrent.LinkedBlockingQueue", "alluxio.master.file.meta.UfsAbsentPathCache", "alluxio.master.audit.AuditContext", "alluxio.exception.runtime.NotFoundRuntimeException", "alluxio.master.journal.Journaled", "alluxio.master.file.meta.UfsSyncPathCache", "alluxio.util.proto.ProtoUtils", "alluxio.util.SecurityUtils", "alluxio.worker.job.JobMasterClientContext", "alluxio.grpc.SyncMetadataPResponse", "alluxio.underfs.options.MkdirsOptions", "alluxio.exception.FileAlreadyCompletedException", "alluxio.master.file.meta.FileSystemMasterView", "java.text.MessageFormat", "alluxio.master.file.contexts.CompleteFileContext", "alluxio.exception.AccessControlException", "alluxio.master.file.meta.LockedInodePathList", "alluxio.master.file.meta.InodeDirectoryIdGenerator", "alluxio.master.file.contexts.RenameContext", "alluxio.master.journal.FileSystemMergeJournalContext", "alluxio.master.file.InodeSyncStream.SyncStatus.FAILED", "alluxio.security.authorization.Mode", "alluxio.master.file.InodeSyncStream.SyncStatus.OK", "com.codahale.metrics.MetricRegistry", "alluxio.master.block.BlockMaster", "java.util.stream.StreamSupport", "alluxio.exception.InvalidFileSizeException", "alluxio.proto.journal.File", "alluxio.master.file.meta.InodeTree", "alluxio.grpc.LoadMetadataPType", "alluxio.grpc.LoadMetadataPOptions", "java.util.stream.Stream", "alluxio.underfs.UfsStatus", "alluxio.master.file.contexts.ListStatusContext", "alluxio.client.file.cache.CacheManager.State.READ_ONLY", "alluxio.exception.PageCorruptedException", "java.util.concurrent.TimeUnit.SECONDS", "java.util.concurrent.Executors.newScheduledThreadPool", "java.util.concurrent.locks.ReadWriteLock", "alluxio.client.file.cache.CacheManager.State.NOT_IN_USE", "java.util.concurrent.ScheduledExecutorService", "alluxio.client.file.cache.CacheManager.State.READ_WRITE", "alluxio.collections.Pair", "alluxio.client.quota.CacheQuota", "java.nio.file.Files", "alluxio.AlluxioURI", "alluxio.client.AlluxioStorageType", "alluxio.client.UnderStorageType", "alluxio.client.file.options.OutStreamOptions", "alluxio.resource.CloseableResource", "alluxio.util.FileSystemOptionsUtils", "alluxio.client.block.policy.options.GetWorkerOptions", "alluxio.client.block.BlockStoreClient", "alluxio.grpc.CompleteFilePOptions", "alluxio.retry.ExponentialTimeBoundedRetry", "alluxio.wire.OperationId", "java.util.UUID", "alluxio.client.block.stream.UnderFileSystemFileOutStream", "alluxio.client.block.stream.BlockOutStream", "alluxio.exception.PreconditionMessage", "alluxio.grpc.FileSystemMasterCommonPOptions", "alluxio.client.file.cache.context.CachePerThreadContext", "alluxio.file.ByteBufferTargetBuffer", "alluxio.client.file.URIStatus", "alluxio.client.file.FileInStream", "com.google.common.base.Stopwatch", "alluxio.client.file.CacheContext.StatsUnit.NANO", "com.google.common.base.Ticker", "alluxio.client.file.CacheContext.StatsUnit.BYTE", "alluxio.client.file.cache.store.LocalPageStore", "com.google.common.hash.Funnel", "alluxio.client.file.cache.store.MemoryPageStore", "com.google.common.hash.PrimitiveSink", "javax.annotation.Nonnull", "com.google.common.util.concurrent.SimpleTimeLimiter", "alluxio.file.ByteArrayTargetBuffer", "java.util.concurrent.Callable", "java.util.concurrent.locks.ReentrantLock", "java.util.concurrent.SynchronousQueue", "alluxio.file.ReadTargetBuffer", "alluxio.client.file.CacheContext", "java.util.concurrent.ThreadPoolExecutor", "alluxio.exception.status.ResourceExhaustedException", "alluxio.conf.AlluxioConfiguration", "alluxio.network.protocol.databuffer.DataFileChannel", "alluxio.metrics.MultiDimensionalMetricsSystem", "com.google.common.base.Throwables", "com.google.common.util.concurrent.TimeLimiter", "java.util.function.Predicate", "alluxio.client.file.cache.store.PageStoreOptions", "java.util.concurrent.RejectedExecutionException", "alluxio.exception.FileDoesNotExistException", "alluxio.client.file.cache.store.PageStoreDir", "alluxio.client.file.cache.allocator.HashAllocator", "com.google.common.collect.ImmutableList", "alluxio.exception.PageNotFoundException", "java.util.Objects.requireNonNull", "java.util.concurrent.locks.ReentrantReadWriteLock", "alluxio.client.file.cache.evictor.CacheEvictor", "alluxio.client.file.cache.allocator.Allocator", "alluxio.client.quota.CacheScope", "alluxio.master.journal.sink.JournalSink", "io.grpc.Status", "alluxio.util.logging.SamplingLogger", "alluxio.concurrent.jsr.ForkJoinPool", "alluxio.concurrent.ForkJoinPoolHelper", "com.google.common.util.concurrent.SettableFuture", "java.util.function.Supplier", "alluxio.exception.JournalClosedException", "java.util.concurrent.Semaphore", "java.util.concurrent.atomic.AtomicLong", "java.util.concurrent.ConcurrentLinkedQueue", "com.codahale.metrics.Timer", "alluxio.grpc.WorkerLostStorageInfo", "java.time.Clock", "alluxio.master.metrics.MetricsMaster", "alluxio.client.block.options.GetWorkerReportOptions.WorkerRange", "alluxio.proto.meta.Block.BlockLocation", "alluxio.proto.journal.Block.DeleteBlockEntry", "java.util.concurrent.Executors", "java.util.NoSuchElementException", "java.util.Collection", "java.util.Arrays", "alluxio.master.CoreMaster", "com.google.common.cache.LoadingCache", "alluxio.wire.RegisterLease", "alluxio.master.journal.SingleEntryJournaled", "alluxio.master.metastore.BlockMetaStore.Block", "alluxio.wire.Address", "alluxio.exception.status.InvalidArgumentException", "java.util.Iterator", "alluxio.grpc.DecommissionWorkerPOptions", "java.util.concurrent.atomic.AtomicInteger", "java.util.function.Function", "alluxio.master.journal.checkpoint.Checkpointed", "alluxio.DefaultStorageTierAssoc", "javax.annotation.concurrent.GuardedBy", "alluxio.master.CoreMasterContext", "alluxio.security.authentication.ClientContextServerInjector", "java.util.concurrent.TimeoutException", "java.util.function.BiConsumer", "alluxio.master.block.meta.WorkerMetaLockSection", "alluxio.exception.status.NotFoundException", "alluxio.proto.journal.Block.BlockContainerIdGeneratorEntry", "alluxio.util.network.NetworkAddressUtils", "alluxio.exception.status.UnavailableException", "alluxio.client.block.options.GetWorkerReportOptions", "io.grpc.ServerInterceptors", "alluxio.grpc.ConfigProperty", "com.google.common.util.concurrent.Striped", "alluxio.grpc.GrpcUtils", "alluxio.wire.BlockInfo", "alluxio.master.journal.checkpoint.CheckpointName", "java.util.concurrent.ExecutionException", "alluxio.collections.ConcurrentHashSet", "java.util.stream.Collectors", "alluxio.resource.LockResource", "com.google.common.collect.ImmutableSet", "alluxio.proto.meta.Block.BlockMeta", "alluxio.util.proto.BlockLocationUtils", "alluxio.master.WorkerState", "alluxio.grpc.RegisterWorkerPOptions", "alluxio.grpc.GetRegisterLeasePRequest", "alluxio.proto.journal.Block.BlockInfoEntry", "alluxio.grpc.StorageList", "alluxio.grpc.NodeState", "java.util.concurrent.atomic.AtomicBoolean", "alluxio.util.IdUtils", "alluxio.util.executor.ExecutorServiceFactory", "alluxio.master.metastore.BlockMetaStore", "it.unimi.dsi.fastutil.longs.LongOpenHashSet", "alluxio.master.journal.JournalContext", "alluxio.metrics.Metric", "alluxio.exception.runtime.UnavailableRuntimeException", "alluxio.exception.BlockInfoException", "alluxio.resource.CloseableIterator", "java.net.UnknownHostException", "alluxio.proto.journal.Journal.JournalEntry", "com.google.common.cache.CacheLoader", "alluxio.master.block.meta.MasterWorkerInfo", "alluxio.collections.IndexedSet", "alluxio.StorageTierAssoc", "java.util.Comparator", "alluxio.grpc.RegisterWorkerPRequest", "java.util.concurrent.locks.Lock", "alluxio.util.WaitForOptions", "alluxio.grpc.RemoveDisabledWorkerPOptions", "java.util.EnumSet", "alluxio.grpc.CommandType", "com.google.common.cache.CacheBuilder", "alluxio.collections.IndexDefinition", "alluxio.clock.SystemClock", "alluxio.util.ThreadFactoryUtils", "java.util.ArrayList", "java.util.concurrent.ExecutorService", "alluxio.grpc.BlockStatus", "java.util.Collections", "alluxio.wire.FileInfo", "alluxio.worker.block.BlockMetadataManager.WORKER_STORAGE_TIER_ASSOC", "alluxio.worker.SessionCleaner", "alluxio.worker.AbstractWorker", "java.net.InetSocketAddress", "com.google.common.util.concurrent.RateLimiter", "java.util.HashSet", "alluxio.util.io.FileUtils", "alluxio.heartbeat.HeartbeatThread", "alluxio.util.executor.ExecutorServiceFactories", "alluxio.grpc.ServiceType", "alluxio.Server", "alluxio.grpc.CacheRequest", "alluxio.exception.runtime.AlluxioRuntimeException", "com.google.common.io.Closer", "java.util.concurrent.Future", "alluxio.RuntimeConstants", "alluxio.client.file.FileSystemContext", "alluxio.grpc.BlockChecksum", "alluxio.conf.Source", "java.util.concurrent.TimeUnit", "alluxio.worker.block.io.BlockWriter", "alluxio.exception.runtime.BlockDoesNotExistRuntimeException", "alluxio.heartbeat.FixedIntervalSupplier", "alluxio.security.user.ServerUserState", "alluxio.worker.grpc.GrpcExecutors", "alluxio.retry.RetryUtils", "java.util.Map", "alluxio.grpc.GrpcService", "java.util.Optional", "alluxio.Sessions", "alluxio.exception.ExceptionMessage", "alluxio.ClientContext", "java.nio.ByteBuffer", "alluxio.Constants", "io.netty.buffer.ByteBuf", "java.util.HashMap", "com.google.common.annotations.VisibleForTesting", "alluxio.proto.dataserver.Protocol", "alluxio.exception.runtime.ResourceExhaustedRuntimeException", "alluxio.worker.block.io.BlockReader", "alluxio.grpc.AsyncCacheRequest", "com.codahale.metrics.CachedGauge", "javax.annotation.concurrent.ThreadSafe", "com.google.common.base.Preconditions", "alluxio.metrics.MetricKey", "alluxio.metrics.MetricsSystem", "alluxio.util.CommonUtils", "alluxio.job.wire.Status", "javax.annotation.Nullable", "alluxio.job.JobConfig", "com.codahale.metrics.Counter", "java.util.Set", "com.google.common.base.Objects", "alluxio.job.wire.TaskInfo", "java.util.function.Consumer", "java.util.List", "alluxio.wire.WorkerInfo", "org.slf4j.Logger", "com.google.common.collect.Lists", "org.slf4j.LoggerFactory", "java.util.concurrent.ConcurrentHashMap", "alluxio.retry.ExponentialBackoffRetry", "alluxio.exception.ConnectionFailedException", "alluxio.conf.PropertyKey", "alluxio.grpc.Command", "alluxio.conf.Configuration", "javax.annotation.concurrent.NotThreadSafe", "java.io.IOException", "java.net.SocketAddress", "alluxio.ProcessUtils", "java.io.Closeable", "java.util.concurrent.atomic.AtomicReference", "alluxio.exception.FailedToAcquireRegisterLeaseException", "alluxio.wire.WorkerNetAddress", "alluxio.retry.RetryPolicy", "alluxio.heartbeat.HeartbeatExecutor", "alluxio.network.protocol.databuffer.NioHeapBufferPool", "io.netty.buffer.Unpooled", "alluxio.exception.AlluxioException", "java.io.File", "alluxio.metrics.MetricInfo", "java.util.concurrent.CompletableFuture", "alluxio.util.CRC64", "alluxio.worker.page.PagedBlockStore", "alluxio.worker.file.FileSystemMasterClient", "alluxio.grpc.GetConfigurationPOptions", "alluxio.collections.PrefixList", "alluxio.annotation.SuppressFBWarnings", "alluxio.heartbeat.HeartbeatContext", "alluxio.grpc.Block", "alluxio.exception.status.AlluxioStatusException", "alluxio.conf.ConfigurationValueOptions" ]
  }, {
    "name" : "Factory",
    "packageName" : "alluxio.fuse.file",
    "extendedClasses" : [ "Supplier", "Closeable", "Function" ],
    "implementedInterfaces" : [ "JournalFactory", "SaslServerFactory", "UserStateFactory", "Factory" ],
    "methods" : [ {
      "name" : "create",
      "visibility" : "public",
      "methodCalls" : [ "checkState", "creatInstance", "valueOf", "from", "isEnsureAtomic", "createDirect", "createInstance", "filter", "toSet", "noneMatch", "remove", "getLibfuseVersion", "invoke", "getMethod", "intValue", "init", "containsCreate", "isAssignableFrom", "getDescription", "call", "propagate", "openFile", "unmodifiableList", "getFuseMethodNames", "toMap", "addIfTrue", "isCompleted", "getPathStatus", "tryLock", "deletePath", "getGid", "orElse", "waitForFileCompleted", "containsTruncate", "setFileLength", "getGidFromGroupName", "getUid", "deletePathRecursively", "createDirectory", "set", "isDirectory", "createWithRecorder", "noopRecorder", "getMessage", "getCreateParent", "createObject", "stripPrefixIfPresent", "mkdirs", "getParentPath", "hasWindowsDrive", "resolve", "getQuery", "getFirst", "startsWith", "indexOf", "charAt", "endsWith", "fromString", "getSecond", "getSchemeComponents", "createNewPath", "setCreateParent", "emptyMap", "getMasterRpcAddresses", "getClient", "size", "getHostName", "length", "optimalBuckets", "murmur3_128", "optimalBitsPerTag", "submit", "getStoreDirs", "stream", "toList", "join", "collect", "accept", "applyFileUMask", "incrementWriteOps", "setRecursive", "setOverwrite", "createFile", "getAlluxioPath", "toProto", "defaults", "createForAddresses", "checkSortConf", "getUfsFileSystemOptions", "getUserState", "isPresent", "isMetadataCacheEnabled", "isDataCacheEnabled", "setFileBuckets", "getList", "setTimeoutDuration", "forEach", "setTimeoutThreads", "setOverheadRatio", "isSet", "setAlluxioVersion", "put", "setOffset", "getBlockId", "ref", "getLock", "writeLock", "getTimeoutDuration", "setTtlCheckIntervalSeconds", "setMaxEvictionRetries", "setQuotaEnabled", "setTtlThresholdSeconds", "warn", "setCacheEvictorOptions", "setTtlEnabled", "setLFULogBase", "setPageStoreOptions", "getLong", "setAsyncRestoreEnabled", "setEvictorClass", "getDouble", "setIsNondeterministic", "setAsyncWriteThreads", "setPageSize", "setCacheStorageSupplier", "setIsAsyncWriteEnabled", "inc", "isQuotaEnabled", "getCacheEvictorOptions", "getClientHostName", "debug", "hasProcessLocalWorker", "isDomainSocketSupported", "isLocalHost", "getString", "isNondeterministic", "getEvictorClass", "isDebugEnabled", "createBlockReader", "setSpaceToReserve", "closeAndRethrow", "getWriteType", "register", "getMs", "setCleanupOnFailure", "increaseUsageCount", "send", "setPinOnCreate", "receive", "hasPath", "setTier", "toStringHelper", "getUsageCount", "acquireBlockWorkerClient", "setMediumType", "setBlockId", "getMediumType", "getClusterConf", "createBlockWriter", "min", "asSubclass", "getBytes", "getProcessLocalWorker", "getWriteTier", "orElseThrow", "createBlock", "createSessionId", "encodeCheckpointFileLocation", "createCheckpointFile", "encodeTemporaryCheckpointFileLocation", "appendPath", "getDefaultAcl", "setMountPoint", "isMountPoint", "close", "isEnabled", "setCompleted", "currentTimeMillis", "getCommonOptions", "setGroup", "getReplicationMax", "getMode", "setMode", "getLength", "setShouldPersistTime", "setUfsFingerprint", "getOperationTimeMs", "setReplicationMin", "toShort", "setLength", "getReplicationMin", "getXAttr", "setXAttr", "getBlockIds", "setBlockIds", "setLastModificationTimeMs", "getGroup", "getTtl", "setPersistenceState", "setAcl", "getPersistenceWaitTime", "intern", "setLastAccessTimeMs", "setName", "setCreationTimeMs", "setReplicationMax", "setOwner", "getCompleteFileInfo", "getTtlAction", "setParentId", "setBlockSizeBytes", "getReplicationDurable", "getOwner", "getAcl", "setTtlAction", "getBlockSizeBytes", "setTtl", "isPersisted", "setReplicationDurable", "getFingerprint", "getInt", "getHeader", "createZkPrimarySelector", "getHTTPVerb", "getQueryParameter", "getBucket", "getWorker", "getClock", "ofNullable", "getOrNull", "getOptions", "map", "seek", "randomUUID", "hasVerify", "hasPartialListing", "setEndTime", "getUser", "hasBandwidth", "getPartialListing", "getLoadPath", "getLoadJob", "hasLoadJob", "hasUser", "setJobState", "of", "getType", "getEndTime", "empty", "fromProto", "getVerify", "getState", "hasEndTime", "getBandwidth", "getJobId", "matches", "createForWorker", "getPageSize", "createPageStoreDirs", "fromPageStoreDirs", "group", "substring", "matcher", "find", "localIdentity", "validateDateRange", "compile", "error", "getEnum", "createNewClassInstance", "getUdbRegistry", "getUdbConfiguration", "checkArgument", "getProperty", "parseLong", "parseInt", "shouldSync", "getConnectionUri", "getUdbDbName", "equals", "hasLayoutData", "format", "setContextClassLoader", "getLayoutType", "currentThread", "parseFrom", "getContextClassLoader", "getClassLoader", "getStatsMap", "getClass", "getLayoutData", "values", "isEmpty", "info", "global", "newBuilder", "add", "setLocation", "getRegistry", "getWebBindAddress", "getJournalLocation", "registerService", "createZkJobPrimarySelector", "checkUri", "create", "getFormat", "getName", "build", "withConf", "get", "withCompressionCodec", "getSchema", "fromConf", "withWriterVersion", "getScheme", "withDataModel", "disableCompatibility", "toString", "toParquet", "fromPath", "withDictionaryPageSize", "getFooter", "builder", "getSerdeProperties", "writeThroughConf", "convert", "readNoCacheConf", "getPath", "getOrDefault", "getFileMetaData", "withSchema", "withDictionaryEncoding", "getAuthority", "withPageSize", "withRowGroupSize", "checkNotNull", "getPrimarySelector", "getRpcBindAddress", "getBoolean", "appendPathOrDie" ]
    }, {
      "name" : "createWithRecorder",
      "visibility" : "public",
      "methodCalls" : [ "add", "warn", "getContextClassLoader", "create", "getVersion", "isEmpty", "setContextClassLoader", "findAllWithRecorder", "addSuppressed", "currentThread", "format", "getClass", "record", "getClassLoader", "getSimpleName" ]
    }, {
      "name" : "createForRoot",
      "visibility" : "public",
      "methodCalls" : [ "createMountSpecificConf", "create", "getString", "getBoolean", "getNestedProperties" ]
    }, {
      "name" : "getSchemeComponents",
      "visibility" : "public",
      "methodCalls" : [ "lastIndexOf", "substring" ]
    }, {
      "name" : "createForJobMaster",
      "visibility" : "public",
      "methodCalls" : [ "getJobMasterRpcAddresses", "get", "getString", "getClient", "getInt", "getBoolean", "size" ]
    }, {
      "name" : "createForAddresses",
      "visibility" : "public",
      "methodCalls" : [ "get", "size" ]
    }, {
      "name" : "getConnectDetails",
      "visibility" : "public",
      "methodCalls" : [ "getString", "size", "getBoolean", "getMasterRpcAddresses", "getConnectAddress" ]
    }, {
      "name" : "specifiedMaster",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "anyMaster",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "primaryMaster",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "anyStandbyMaster",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "getMechanismNames",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "createSaslServer",
      "visibility" : "public",
      "methodCalls" : [ "equals", "checkArgument" ]
    }, {
      "name" : "get",
      "visibility" : "public",
      "methodCalls" : [ "readLock", "fromProto", "wrap", "parseFrom", "toByteArray", "safeManagedBlock", "currentTimeMillis", "getRawResult", "toNanos", "toMillis", "notifyAll", "interrupted", "awaitJoin", "tryExternalUnpush", "doExec", "compareAndSwapInt", "externalHelpComplete", "wait", "getDefaultValue", "orElse", "fromString", "getLock", "nanoTime", "writeLock", "meter", "getPageInfo", "getMetricName", "removePage", "incrementCounter", "getPageSize", "mark", "mightContain", "getMessage", "isAuthenticationEnabled", "debug", "getMs", "createNewClassInstance", "getClass", "getSubject", "checkNotNull", "error", "propagateIfPossible", "mightContainAndResetClock", "callWithTimeout", "inc", "create", "set", "getAndAdd", "getAndIncrement", "getPagePath", "skipBytes", "readFromFile", "length", "array", "offset", "byteArray", "arraycopy", "checkArgument", "min", "getPageLength", "writeBytes", "getFileId", "remaining", "getPageIndex", "getStatus", "containsKey", "getPath", "getPage", "getKeyFromPageId", "setTimeoutMs", "getName", "currentThread", "waitFor", "interrupt", "isInstance", "cast", "connectFromWorker", "hasProperties", "global", "getProperties", "removeMount", "getUri", "get", "createMountSpecificConf", "format", "getPropertiesMap", "getReadOnly", "getUfsInfo", "getConnectHost", "hasUri", "checkState", "addMount", "acquireUfsResource", "getMutable", "map", "defaults", "empty", "elapsed", "createStarted", "compute", "of", "load", "shouldSkipCache", "isPresent", "recordHit", "recordMiss", "onCacheUpdate", "recordLoad", "setOffset", "toString", "getFileLocations", "resolve", "warn", "put", "getIfPresent" ]
    }, {
      "name" : "close",
      "visibility" : "public",
      "methodCalls" : [ "close", "setBucketName", "getMd5HashAsBase64", "getMd5", "setDataInputFile", "setMd5Hash", "getResponseCode", "uploadFile", "getErrorStream", "getInputStream", "setContentType", "withMetadata", "uploadObject", "waitForUploadResult", "upload", "getTransferManager", "encode", "getObject", "setSSEAlgorithm", "getContainer", "getUploadPath", "setContentMd5", "setBucket", "unmount", "setKey", "newInputStream", "getEtag", "toPath", "setContent", "setOptions", "reloadProperties", "setContentLength", "getETag", "length", "setContentMD5", "getAndSet", "encodeBase64", "getOwner", "getMessage", "setOwner", "getGroup", "retry", "digest", "putObject", "getAndIncrement", "createEmptyObject", "delete", "uploadPart", "getPath", "waitForAllPartsUpload", "encodeBase64String", "from", "decrement", "releaseConnection", "getValue", "getSaslServerDriver", "getKey", "entrySet", "checkState", "getBlockId", "disconnect", "dispose", "lock", "closeResource", "checkNotNull", "toFsProto", "setAsyncPersistOptions", "acquireMasterClientResource", "isStore", "setCommonOptions", "setUfsLength", "isAsyncPersist", "isSyncPersist", "scheduleAsyncPersistDefaults", "getPathConf", "buildPartial", "getCommonOptions", "randomUUID", "completeFile", "setOperationId", "getDataWriter", "setPersistenceWaitTime", "decrementAndGet", "build", "newBuilder", "toBuilder", "getPersistenceWaitTime", "getUfsContentHash", "deRef", "rethrow", "run", "getRefCount", "unlock", "dec", "completeLog", "isOpen", "getStart", "shutdownAndAwaitTermination", "getRootPath", "getPageStore", "isPresent", "empty", "getContentHash", "ifPresent", "hasContentHash", "waitForComplete", "decreaseUsageCount", "cleanupSession", "uniformTimer", "time", "commitBlock", "getWriteType", "removeMetrics", "getNextSequenceNumber", "currentLogName", "getCheckpointDir", "getEnd", "format", "renameFile", "mkdirs", "exists", "getSnapshot", "accept", "deleteFile", "getLatestCheckpoint", "onCompleted", "writeLock", "getLocation", "appendMergedJournals", "flush", "update", "completeCurrentLog", "completedFuture", "runAsync", "remove", "stop", "getChannelKey", "whenComplete", "complete", "getServers", "toString", "debug", "unmodifiableCollection", "process", "addSuppressed", "propagateIfPossible", "getSecond", "getFirst", "isAlive", "set", "get", "cancel", "size", "isDone", "reset", "toArray", "clear", "isEmpty", "allOf", "reverse", "add", "lockForClosing", "call", "invalidate", "global", "shutdownGracefully", "info", "awaitTermination", "warn", "awaitUninterruptibly", "currentThread", "getMs", "getBindAddress", "forEach", "values", "getBlockSize", "join", "interrupt", "append", "nanoTime", "shutdown", "poll", "shutdownNow", "isShutdown", "error", "isClosed", "counter", "umount", "getName", "inc", "readerClosed", "getBlockLocation", "writerClosed", "register", "create", "getSessionId", "shutDown", "release" ]
    }, {
      "name" : "createZkPrimarySelector",
      "visibility" : "public",
      "methodCalls" : [ "getString" ]
    }, {
      "name" : "createZkJobPrimarySelector",
      "visibility" : "public",
      "methodCalls" : [ "getString" ]
    }, {
      "name" : "createAllMasterSync",
      "visibility" : "public",
      "methodCalls" : [ "global", "getMasterRpcAddresses" ]
    } ],
    "imports" : [ "alluxio.job.wire.Status", "alluxio.fuse.lock.FuseReadWriteLockManager", "alluxio.fuse.auth.AuthPolicy", "jnr.constants.platform.OpenFlags.O_ACCMODE", "jnr.constants.platform.OpenFlags", "alluxio.recorder.Recorder", "alluxio.underfs.options.GetFileStatusOptions", "alluxio.underfs.options.OpenOptions", "alluxio.underfs.options.DeleteOptions", "alluxio.security.authorization.DefaultAccessControlList", "alluxio.underfs.options.ListOptions", "alluxio.underfs.options.CreateOptions", "alluxio.underfs.options.MkdirsOptions", "alluxio.security.authorization.AccessControlList", "java.util.Iterator", "java.io.FileNotFoundException", "alluxio.underfs.options.FileLocationOptions", "alluxio.SyncInfo", "java.io.Serializable", "alluxio.uri.Authority", "alluxio.master.SingleMasterInquireClient.SingleMasterConnectDetails", "alluxio.master.ZkMasterInquireClient.ZkMasterConnectDetails", "alluxio.master.MasterInquireClient", "javax.security.auth.login.LoginException", "alluxio.security.login.AppLoginModule", "alluxio.util.SecurityUtils", "alluxio.security.login.LoginModuleConfiguration", "javax.security.auth.login.LoginContext", "javax.security.sasl.SaslServerFactory", "javax.security.auth.callback.PasswordCallback", "alluxio.security.authentication.AuthenticatedClientUser", "javax.security.sasl.SaslException", "javax.security.sasl.AuthorizeCallback", "javax.security.auth.callback.NameCallback", "javax.security.sasl.Sasl", "javax.security.sasl.SaslServer", "javax.security.auth.callback.Callback", "javax.security.auth.callback.CallbackHandler", "alluxio.grpc.DataMessage", "alluxio.grpc.ReadResponseMarshaller", "alluxio.util.logging.SamplingLogger", "alluxio.exception.status.AlreadyExistsException", "alluxio.grpc.UpdateUfsModePOptions", "alluxio.grpc.CheckConsistencyPOptions", "alluxio.grpc.CompleteFilePOptions", "alluxio.annotation.SuppressFBWarnings", "java.util.Arrays", "alluxio.security.authentication.AuthType", "alluxio.exception.status.UnauthenticatedException", "alluxio.security.User", "alluxio.security.authentication.plain.CustomAuthenticationProvider", "alluxio.security.authentication.plain.PlainSaslServer", "alluxio.security.authentication.plain.SimpleAuthenticationProvider", "javax.security.sasl.AuthenticationException", "alluxio.security.authentication.plain.PlainSaslServerCallbackHandler", "alluxio.wire.BlockLocationInfo", "alluxio.grpc.LoadMetadataPType", "alluxio.grpc.SyncMetadataPResponse", "alluxio.exception.FileIncompleteException", "alluxio.grpc.LoadMetadataPOptions", "alluxio.grpc.ListStatusPartialPOptions", "alluxio.grpc.JobProgressReportFormat", "alluxio.grpc.CheckAccessPOptions", "alluxio.job.JobRequest", "alluxio.wire.SyncPointInfo", "alluxio.grpc.GetSyncProgressPResponse", "alluxio.grpc.UnmountPOptions", "alluxio.grpc.SyncMetadataPOptions", "alluxio.client.file.ufs.UfsBaseFileSystem", "alluxio.grpc.CancelSyncMetadataPResponse", "alluxio.client.file.options.FileSystemOptions", "alluxio.client.file.cache.LocalCacheFileSystem", "alluxio.job.JobDescription", "alluxio.grpc.SetAclAction", "alluxio.grpc.FreePOptions", "alluxio.exception.OpenDirectoryException", "alluxio.security.authorization.AclEntry", "alluxio.grpc.ScheduleAsyncPersistencePOptions", "alluxio.grpc.ExistsPOptions", "javax.security.auth.Subject", "alluxio.grpc.GetStatusPOptions", "alluxio.grpc.SyncMetadataAsyncPResponse", "alluxio.grpc.SetAclPOptions", "alluxio.grpc.MountPOptions", "alluxio.client.file.cache.CacheManager", "alluxio.wire.MountPointInfo", "alluxio.conf.Source", "java.util.concurrent.locks.ReentrantReadWriteLock", "com.google.common.hash.HashFunction", "java.util.concurrent.ConcurrentHashMap", "com.google.common.hash.Hashing", "alluxio.grpc.MoveBlockResponse", "alluxio.security.user.UserState", "alluxio.grpc.ClearMetricsRequest", "alluxio.grpc.ReadRequest", "alluxio.grpc.CacheRequest", "alluxio.grpc.CreateLocalBlockResponse", "alluxio.grpc.MoveBlockRequest", "alluxio.grpc.LoadRequest", "alluxio.grpc.RemoveBlockResponse", "alluxio.grpc.ClearMetricsResponse", "alluxio.grpc.LoadResponse", "io.grpc.StatusRuntimeException", "alluxio.grpc.RemoveBlockRequest", "alluxio.grpc.WriteResponse", "com.google.common.util.concurrent.ListenableFuture", "alluxio.grpc.GetBlockChecksumRequest", "alluxio.grpc.ReadResponse", "alluxio.grpc.CreateLocalBlockRequest", "io.grpc.stub.StreamObserver", "alluxio.grpc.GetBlockChecksumResponse", "alluxio.grpc.WriteRequest", "alluxio.client.file.CacheContext", "alluxio.exception.PageNotFoundException", "alluxio.network.protocol.databuffer.DataFileChannel", "java.util.concurrent.locks.ReentrantLock", "java.util.concurrent.locks.Lock", "alluxio.file.ReadTargetBuffer", "alluxio.file.ByteArrayTargetBuffer", "com.codahale.metrics.Counter", "alluxio.resource.LockResource", "alluxio.metrics.MultiDimensionalMetricsSystem", "java.util.function.Predicate", "java.util.concurrent.atomic.AtomicReference", "alluxio.master.journal.ufs.UfsJournalFileParser", "alluxio.util.network.NettyUtils", "alluxio.client.file.options.OutStreamOptions", "io.netty.buffer.ByteBuf", "alluxio.client.Cancelable", "alluxio.grpc.RequestType", "alluxio.worker.block.BlockWorker", "alluxio.worker.block.io.BlockReader", "alluxio.proto.dataserver.Protocol", "java.util.Objects", "alluxio.util.IdUtils", "alluxio.grpc.DecommissionWorkerPOptions", "alluxio.worker.block.io.LocalFileBlockReader", "java.util.Set", "alluxio.grpc.WorkerLostStorageInfo", "alluxio.client.ReadType", "alluxio.wire.WorkerInfo", "alluxio.wire.BlockMasterInfo.BlockMasterInfoField", "alluxio.exception.status.NotFoundException", "alluxio.client.file.options.InStreamOptions", "alluxio.wire.BlockMasterInfo", "java.nio.file.Paths", "alluxio.grpc.OpenLocalBlockResponse", "alluxio.grpc.RemoveDisabledWorkerPOptions", "alluxio.client.block.options.GetWorkerReportOptions", "alluxio.network.protocol.databuffer.NioDataBuffer", "alluxio.grpc.OpenLocalBlockRequest", "java.nio.file.Files", "com.google.common.base.MoreObjects", "alluxio.wire.BlockInfo", "alluxio.client.block.policy.options.GetWorkerOptions", "alluxio.network.protocol.databuffer.DataBuffer", "java.util.function.Consumer", "alluxio.master.journalv0.ufs.UfsMutableJournal", "alluxio.master.journal.ufs.UfsJournalMultiMasterPrimarySelector", "java.io.OutputStream", "alluxio.proto.journal.Journal.JournalEntry", "alluxio.master.journalv0.ufs.UfsJournal", "java.net.URISyntaxException", "java.time.Clock", "alluxio.master.file.meta.FileSystemMasterView", "alluxio.wire.PersistFile", "javax.ws.rs.core.MediaType", "java.security.DigestOutputStream", "alluxio.util.ThreadUtils", "com.google.common.io.ByteStreams", "java.security.MessageDigest", "alluxio.exception.status.InvalidArgumentException", "com.fasterxml.jackson.core.JsonParseException", "java.util.Date", "java.nio.charset.StandardCharsets", "javax.servlet.http.HttpServletResponse", "alluxio.grpc.RenamePOptions", "com.google.common.io.BaseEncoding", "alluxio.grpc.S3SyntaxOptions", "alluxio.grpc.XAttrPropagationStrategy", "java.net.URLDecoder", "alluxio.client.file.FileOutStream", "org.apache.commons.io.IOUtils", "org.apache.commons.codec.binary.Hex", "alluxio.exception.FileAlreadyExistsException", "java.io.UnsupportedEncodingException", "java.util.concurrent.CompletableFuture", "java.util.UUID", "com.google.common.util.concurrent.RateLimiter", "alluxio.grpc.OpenFilePOptions", "java.io.ByteArrayInputStream", "alluxio.client.WriteType", "alluxio.web.ProxyWebServer", "alluxio.grpc.CreateFilePOptions", "com.google.common.primitives.Longs", "alluxio.util.ThreadFactoryUtils", "alluxio.exception.runtime.AlluxioRuntimeException", "alluxio.wire.BackupStatus", "alluxio.master.AlluxioExecutorService", "alluxio.grpc.GrpcService", "alluxio.grpc.NodeState", "alluxio.master.SafeModeManager", "java.util.concurrent.ExecutionException", "alluxio.underfs.MasterUfsManager", "java.util.concurrent.atomic.AtomicBoolean", "alluxio.master.meta.MetaMaster", "alluxio.master.service.metrics.MetricsService", "alluxio.master.meta.DefaultMetaMaster", "alluxio.util.interfaces.Scoped", "java.net.Socket", "alluxio.executor.ExecutorServiceBuilder", "java.util.concurrent.Future", "alluxio.network.RejectingServer", "alluxio.grpc.ErrorType", "alluxio.grpc.ServiceType", "alluxio.underfs.UnderFileSystemConfiguration", "alluxio.grpc.BackupStatusPRequest", "com.codahale.metrics.Timer", "io.grpc.Status", "alluxio.web.MasterWebServer", "java.util.concurrent.Executors", "alluxio.master.MasterRegistry", "alluxio.master.service.jvmmonitor.JvmMonitorService", "alluxio.exception.status.UnavailableException", "alluxio.resource.CloseableResource", "alluxio.util.network.NetworkAddressUtils", "alluxio.underfs.UnderFileSystem", "alluxio.master.Master", "alluxio.master.file.FileSystemMaster", "alluxio.grpc.GrpcServer", "alluxio.master.AlluxioMasterProcess", "alluxio.master.MasterProcess", "java.util.Comparator", "alluxio.exception.FileDoesNotExistException", "javax.annotation.concurrent.GuardedBy", "alluxio.master.service.NoopService", "alluxio.grpc.DeletePOptions", "javax.ws.rs.core.Response", "alluxio.AlluxioURI", "alluxio.exception.DirectoryNotEmptyException", "alluxio.util.JvmPauseMonitor", "java.util.ArrayList", "com.fasterxml.jackson.dataformat.xml.XmlMapper", "alluxio.metrics.MetricKey", "java.util.stream.Collectors", "alluxio.grpc.ListStatusPOptions", "alluxio.metrics.MetricsSystem", "alluxio.grpc.SetAttributePOptions", "alluxio.grpc.Bits", "com.google.common.net.InetAddresses", "alluxio.master.service.SimpleService", "alluxio.grpc.PMode", "alluxio.proto.journal.File", "alluxio.exception.AccessControlException", "alluxio.client.file.URIStatus", "com.google.protobuf.ByteString", "alluxio.exception.InvalidPathException", "alluxio.grpc.CreateDirectoryPOptions", "alluxio.master.journal.checkpoint.Checkpointed", "alluxio.master.file.meta.Inode", "java.util.function.Function", "alluxio.master.file.meta.InodeView", "alluxio.master.file.meta.MutableInode", "alluxio.master.file.meta.InodeLockManager", "alluxio.master.file.meta.InodeTree", "java.util.Optional", "alluxio.proto.meta.Block.BlockLocation", "alluxio.resource.CloseableIterator", "java.util.function.Supplier", "alluxio.proto.meta.Block.BlockMeta", "alluxio.client.file.FileInStream", "java.nio.ByteBuffer", "java.io.InputStream", "java.util.regex.Pattern", "java.util.regex.Matcher", "alluxio.conf.AlluxioConfiguration", "alluxio.proxy.s3.S3Exception", "org.apache.commons.lang3.StringUtils", "java.util.concurrent.ExecutorService", "alluxio.heartbeat.HeartbeatContext", "alluxio.util.WaitForOptions", "alluxio.heartbeat.FixedIntervalSupplier", "alluxio.ProcessUtils", "alluxio.heartbeat.HeartbeatThread", "alluxio.util.ConfigurationUtils", "java.io.Closeable", "java.util.HashMap", "java.util.concurrent.TimeoutException", "alluxio.security.user.ServerUserState", "alluxio.wire.TieredIdentity", "alluxio.network.TieredIdentityFactory", "alluxio.collections.Pair", "com.google.common.io.Closer", "javax.annotation.Nullable", "alluxio.resource.ResourcePool", "alluxio.ClientContext", "java.util.Queue", "com.google.common.annotations.VisibleForTesting", "java.util.concurrent.ConcurrentLinkedQueue", "alluxio.worker.block.LocalBlockStore", "alluxio.worker.block.BlockMetadataEvictorView", "alluxio.worker.block.allocator.Allocator", "alluxio.worker.block.reviewer.Reviewer", "alluxio.annotation.PublicApi", "alluxio.worker.block.BlockMetadataView", "alluxio.worker.block.BlockStoreLocation", "alluxio.worker.block.meta.StorageDirView", "alluxio.util.CommonUtils", "alluxio.grpc.table.Constraint", "alluxio.grpc.table.Database", "alluxio.grpc.table.Partition", "alluxio.grpc.table.ColumnStatisticsInfo", "alluxio.grpc.table.TransformJobInfo", "java.util.Map", "alluxio.grpc.table.TableInfo", "alluxio.exception.status.AlluxioStatusException", "alluxio.grpc.table.SyncStatus", "alluxio.master.MasterClientContext", "alluxio.grpc.ListAllPOptions", "alluxio.exception.ConnectionFailedException", "alluxio.exception.AlluxioException", "javax.annotation.concurrent.ThreadSafe", "alluxio.wire.WorkerNetAddress", "alluxio.job.wire.JobWorkerHealth", "alluxio.Process", "java.util.List", "alluxio.grpc.JobCommand", "alluxio.Client", "java.net.InetSocketAddress", "alluxio.grpc.JobInfo", "java.io.IOException", "alluxio.util.network.NetworkAddressUtils.ServiceType", "alluxio.grpc.GrpcServerAddress", "alluxio.master.journal.JournalUtils", "org.slf4j.LoggerFactory", "alluxio.underfs.UfsManager", "alluxio.web.WebServer", "alluxio.grpc.GrpcServerBuilder", "javax.annotation.concurrent.NotThreadSafe", "alluxio.master.journal.ufs.UfsJournalSingleMasterPrimarySelector", "java.util.concurrent.TimeUnit", "alluxio.web.JobMasterWebServer", "alluxio.master.journal.JournalMaster", "alluxio.grpc.JournalDomain", "alluxio.master.journal.raft.RaftJournalSystem", "alluxio.master.job.JobMaster", "org.slf4j.Logger", "alluxio.master.journal.DefaultJournalMaster", "alluxio.client.file.FileSystemContext", "alluxio.master.service.web.WebServerService", "alluxio.conf.PropertyKey", "alluxio.conf.Configuration", "alluxio.Constants", "com.google.common.base.Preconditions", "alluxio.master.service.rpc.RpcServerService", "alluxio.underfs.JobUfsManager", "alluxio.client.file.FileSystem", "java.net.URI", "alluxio.master.journal.JournalSystem", "alluxio.util.URIUtils", "alluxio.util.CommonUtils.ProcessType", "alluxio.job.JobConfig", "alluxio.job.CmdConfig", "alluxio.grpc.JobMasterStatus", "alluxio.job.wire.JobServiceSummary", "alluxio.job.wire.CmdStatusBlock", "alluxio.job.wire.JobInfo", "alluxio.worker.job.JobMasterClientContext" ]
  }, {
    "name" : "DefaultFileSystemMaster",
    "packageName" : "alluxio.master.file",
    "extendedClasses" : [ "CoreMaster" ],
    "implementedInterfaces" : [ "FileSystemMaster", "DelegatingJournaled" ],
    "methods" : [ {
      "name" : "setAttribute",
      "visibility" : "public",
      "methodCalls" : [ "setSucceeded", "setSrcInode", "getMessage", "fullPathExists", "toString", "setAllowed", "syncMetadata", "createAuditContext", "getDescendants", "checkUnderWritableMountPoint", "getInodeOrNull", "lockInodePath", "createRpcContext", "getCommonOptions", "getJournalContext", "setAttribute", "global", "call", "getPath", "withTracker", "toBuilder", "newBuilder", "build", "getOptions", "create", "setAttributeClientDefaults", "getDefaultInstance", "debug", "checkUri", "rpc", "mergeFrom", "getXattrCount", "hasPinned", "getMode", "setMode", "get", "setOwner", "format", "error", "hasReplicationMin", "getOwner", "getGroup", "protoToShort", "hasPersisted", "hasRecursive", "hasOwner", "hasGroup", "hasMode", "hasReplicationMax", "setPath", "setOptions", "retryRPC", "getRecursive", "inc", "checkSetAttributePermission" ]
    }, {
      "name" : "updateMount",
      "visibility" : "public",
      "methodCalls" : [ "checkParentPermission", "createAuditContext", "getUfsUri", "setAllowed", "lockInodePath", "getParentInodeOrNull", "getUri", "getJournalContext", "get", "getPattern", "createRpcContext", "getCommonOptions", "getMountTable", "setSucceeded", "retryRPC", "setAlluxioPath", "toString", "setOptions", "getPath", "checkUri", "getPathConf", "mountDefaults", "debug", "rpc", "mergeFrom", "newBuilder", "create", "updateMount", "call", "getOptions", "build", "withTracker", "getAlluxioPath", "toBuilder" ]
    }, {
      "name" : "getSyncPathCache",
      "visibility" : "public",
      "methodCalls" : [ "getUfsSyncPathCache" ]
    }, {
      "name" : "reverseResolve",
      "visibility" : "public",
      "methodCalls" : [ "getUri", "toString", "retryRPC", "setUfsUri", "getAlluxioPath", "rpc", "getStackTraceAsString", "getMountTable", "getAlluxioUri", "getValue", "debug", "entrySet", "isAncestorOf", "getPath", "setAlluxioPath", "getUfsUri", "call", "newBuilder", "build", "reverseResolve" ]
    }, {
      "name" : "getWhiteList",
      "visibility" : "public",
      "methodCalls" : [ "getList" ]
    }, {
      "name" : "stopSync",
      "visibility" : "public",
      "methodCalls" : [ "remove", "format", "toString", "setAllowed", "getPattern", "stopSyncAndJournal", "createAuditContext", "getJournalContext", "createRpcContext", "setSucceeded", "lockInodePath", "getParentInodeOrNull", "checkSuperUser", "checkParentPermission", "retryRPC", "setPath", "debug", "rpc", "stopSync", "build", "newBuilder", "getPath", "call" ]
    }, {
      "name" : "listStatus",
      "visibility" : "public",
      "methodCalls" : [ "setRecursive", "readAttributes", "lastModified", "translatePosixPermissionToMode", "getBytes", "listFiles", "permissions", "group", "owner", "error", "children", "getList", "equalsIgnoreCase", "attr", "supportsPath", "text", "select", "first", "connect", "getLen", "getPermission", "toShort", "getBlockSize", "getGroup", "getModificationTime", "getOwner", "approximateContentHash", "isDir", "format", "listInternal", "isRecursive", "length", "add", "remove", "isEmpty", "validatePath", "setName", "endsWith", "getFirst", "getSecond", "toArray", "substring", "concatPath", "getName", "syncMetadata", "areDescendantsLoaded", "getChildCount", "computePartialListingPaths", "setLoadType", "lockInodePath", "createNonMergingJournalRpcContext", "getLoadMetadataType", "getCommonOptions", "setLoadDescendantType", "ensureFullPathAndUpdateCache", "equals", "setTtlAction", "setLoadMetadataType", "checkPrefixListingPaths", "createAuditContext", "shouldLoadMetadataIfNotExists", "getDisableAreDescendantsLoadedCheck", "fullPathExists", "inc", "toProto", "asDirectory", "getMessage", "getLoadMetadataOnly", "resolve", "hasLoadMetadataOnly", "setSrcInode", "isDirectChildrenLoaded", "setTtl", "getJournalContext", "checkPartialListingOffset", "setCommonOptions", "getTtl", "isDisableMetadataSync", "getInode", "getUfsOpsSavedCounter", "getInodeOrNull", "loadMetadataIfNotExist", "getTtlAction", "setSucceeded", "isDirectory", "getExcludeMountInfo", "checkPermission", "setAllowed", "getUri", "setTotalListings", "getUfsMountPointUri", "setCreateAncestors", "newBuilder", "forEachRemaining", "retryRPC", "setOptions", "addAll", "fromProto", "setPath", "getFileInfosList", "global", "listStatus", "call", "getInt", "create", "complete", "fail", "toBuilder", "getPath", "getOptions", "callAndReturn", "withTracker", "getDirStatuses", "getIfPresent", "getRecursive", "put", "listStatusDefaults", "build", "mergeFrom", "checkUri", "rpc", "getDefaultInstance", "incrementReadOps", "get", "debug", "getFsPath", "setExcludeMountInfo", "toString", "size", "getAlluxioPath", "collect", "map", "emptyList", "hasRecursive", "stream", "defaults", "toList" ]
    }, {
      "name" : "getPersistenceState",
      "visibility" : "public",
      "methodCalls" : [ "getInode", "lockFullInodePath", "getPersistenceState" ]
    }, {
      "name" : "getSyncProgress",
      "visibility" : "public",
      "methodCalls" : [ "toProtoTasks", "getTaskGroup", "toList", "collect", "addAllTask", "isPresent", "newBuilder", "setTaskGroupId", "build", "retryRPC", "get", "acquireMasterClientResource", "getTaskGroupId", "getSyncProgress", "call" ]
    }, {
      "name" : "recordActiveSyncTxid",
      "visibility" : "public",
      "methodCalls" : [ "lockFullInodePath", "getJournalContext", "build", "getAlluxioUri", "newBuilder", "setActiveSyncTxId", "createRpcContext", "warn", "setTxId", "journal", "setMountId", "getMountInfo" ]
    }, {
      "name" : "createNonMergingJournalRpcContext",
      "visibility" : "public",
      "methodCalls" : [ "withTracker", "createJournalContext", "createBlockDeletionContext" ]
    }, {
      "name" : "getInAlluxioFiles",
      "visibility" : "public",
      "methodCalls" : [ "lockFullInodePath", "getInt" ]
    }, {
      "name" : "syncMetadataAsync",
      "visibility" : "public",
      "methodCalls" : [ "addAllTaskIds", "getDirectoryLoadType", "syncPath", "collect", "map", "getTasks", "setSubmitted", "getGroupId", "toSet", "getTaskInfo", "getId", "setTaskGroupId", "getLoadDescendantType", "fromProto", "build", "setOptions", "newBuilder", "retryRPC", "setPath", "acquireMasterClientResource", "get", "getPath", "call", "toBuilder", "create", "getOptions", "syncMetadataAsync" ]
    }, {
      "name" : "start",
      "visibility" : "public",
      "methodCalls" : [ "getString", "startNewMasters", "createTemporaryDirectory", "getAbsolutePath", "getPrimaryMasterIndex", "setProperty", "startWorkers", "setupTest", "resetClientPools", "startMasters", "startProxy", "redirectError", "getProperty", "getCanonicalName", "redirectOutput", "asList", "concatPath", "getProcessClass", "identityHashCode", "waitForReady", "getEnum", "retry", "initializeRoot", "allowCoreThreadTimeOut", "getPersistJobId", "getTempUfsPath", "validateInodeBlocks", "isDirectory", "addMount", "asFile", "createFullAccess", "getReadOnly", "getOwner", "getUfsUri", "getPath", "getOptions", "isSecurityEnabled", "put", "getMountId", "getShouldPersistTime", "getMountTable", "getPropertiesMap", "getId", "keySet", "getGroup", "getToBePersistedIds", "getRoot", "getMessage", "isCompleted", "createMountSpecificConf", "getPersistenceState", "applyDirectoryUMask", "startInternal", "setId", "getHostName", "resetState", "reset", "randomUUID", "equals", "applyAndJournal", "getClusterID", "createJournalContext", "getConfiguration", "registerNewConf", "startSync", "supportsActiveSync", "getOrDefault", "getKey", "parallelStream", "getUnderFSType", "toString", "isEmpty", "launchPollingThread", "getUri", "getValue", "entrySet", "resolve", "acquireUfsResource", "setState", "setName", "getServers", "parseTimeSize", "convertMsToClockTime", "isShutdown", "startGrpcServer", "takeEmergencyBackup", "newFixedThreadPool", "addAll", "waitForCatchup", "warn", "shutdownNow", "getCurrentMs", "dumpInformationOnFailover", "startRejectingServer", "startWebServer", "startMetricsSystem", "checkState", "getClass", "getSimpleName", "close", "newSingleThreadScheduledExecutor", "scheduleAtFixedRate", "scheduleWithFixedDelay", "stop", "getRpcAddress", "clear", "initMetricKeys", "gainPrimacy", "stopMasterComponents", "losePrimacy", "startMasterComponents", "interrupted", "waitForState", "getBindHost", "awaitTermination", "get", "getMetricName", "fromProto", "setupBlockMasterSync", "setRpcPort", "set", "getServiceName", "setHost", "getConnectHost", "askForWorkerId", "await", "getLocalPort", "checkNotNull", "getBoolean", "values", "forEach", "getInt", "global", "startSinks", "submit", "getMs", "getExecutorService", "propagate", "error", "registerWorker", "start", "info", "getWorkerId", "getPort", "getBindAddress", "getConnectAddress", "getUserState", "isHaMode", "getAuditLogEntriesSize", "setJobAsFailed", "registerGaugeIfAbsent", "build", "isJobFinished", "getName", "newBuilder", "coordinators", "create", "getClusterConf", "register", "launchFuse", "add", "isClosed", "getInetAddress", "getHostAddress", "remove", "whenComplete", "accept", "runAsync", "format", "getRemoteSockAddress", "waitForPrimaryMasterRegistrationComplete" ]
    }, {
      "name" : "getServices",
      "visibility" : "public",
      "methodCalls" : [ "putAll", "getRoleServices", "disableAuthentication", "getJournalServices", "getMasterServiceHandler", "newHashMap", "put", "intercept", "emptyMap" ]
    }, {
      "name" : "getFileId",
      "visibility" : "public",
      "methodCalls" : [ "getMaxSequenceNumber", "createBlockId", "getContainerId", "getFileId" ]
    }, {
      "name" : "updateUfsMode",
      "visibility" : "public",
      "methodCalls" : [ "createAuditContext", "createRpcContext", "setUfsMode", "setSucceeded", "getRootPath", "setUfsPath", "retryRPC", "setOptions", "getUfsMode", "updateUfsMode", "newBuilder", "getUfsPath", "build", "call", "getOptions" ]
    }, {
      "name" : "free",
      "visibility" : "public",
      "methodCalls" : [ "getJournalContext", "setAllowed", "createRpcContext", "checkPermission", "inc", "getInodeOrNull", "createAuditContext", "setSucceeded", "lockFullInodePath", "retryRPC", "setOptions", "setPath", "freeDefaults", "getDefaultInstance", "checkUri", "rpc", "mergeFrom", "debug", "getOptions", "toBuilder", "build", "newBuilder", "getPath", "create", "global", "call", "free" ]
    }, {
      "name" : "setAttributeSingleFile",
      "visibility" : "public",
      "methodCalls" : [ "setReplication", "setPersistenceState", "hasReplicationMax", "getInode", "getXattrCount", "getPinnedMediaList", "serialize", "warn", "setOwner", "setXAttrUpdateStrategy", "setPinned", "updateInode", "getDirectChildrenLoaded", "getName", "putAllXAttr", "name", "getTtl", "setTtlAction", "toProtobuf", "setId", "setLastModificationTimeMs", "getMode", "getPersisted", "hasReplicationMin", "getOwner", "getGroup", "hasPinned", "equals", "getReplicationMin", "hasGroup", "asFile", "getId", "getXattrUpdateStrategy", "getPinned", "setTtl", "hasPersisted", "build", "toString", "setGroup", "getTtlAction", "parse", "hasDirectChildrenLoaded", "getXattrMap", "isObjectStorage", "getUfsFingerprint", "info", "valueOf", "setDirectChildrenLoaded", "checkArgument", "hasOwner", "getParsedFingerprint", "isCompleted", "acquireUfsResource", "putTag", "getReplicationMax", "isPersisted", "setMode", "getOptions", "protoToShort", "asDirectory", "getUri", "hasTtlAction", "isDirectory", "get", "hasXattrUpdateStrategy", "setUfsFingerprint", "getCommonOptions", "resolve", "newBuilder", "hasMode", "hasCommonOptions", "hasTtl", "getOperationTimeMs", "inc", "isFile", "debug" ]
    }, {
      "name" : "completeFile",
      "visibility" : "public",
      "methodCalls" : [ "inc", "createAuditContext", "getInodeOrNull", "setSucceeded", "lockFullInodePath", "checkPermission", "hasAsyncPersistOptions", "createRpcContext", "warn", "setAllowed", "getAsyncPersistOptionsBuilder", "getJournalContext", "setOptions", "retryRPC", "setPath", "create", "newBuilder", "completeFile", "toBuilder", "getPath", "call", "getOptions", "build" ]
    }, {
      "name" : "getPinIdList",
      "visibility" : "public",
      "methodCalls" : [ "getPinIdSet", "union", "getToBePersistedIds" ]
    }, {
      "name" : "getSyncPathList",
      "visibility" : "public",
      "methodCalls" : [ "getDefaultInstance", "getSyncPathsList", "fromProto", "retryRPC", "rpc", "get", "isDone", "add", "build", "addAllSyncPaths", "getSyncPathList", "collect", "map", "toList", "newBuilder", "call", "stream" ]
    }, {
      "name" : "exists",
      "visibility" : "public",
      "methodCalls" : [ "exists", "head", "format", "call", "global", "toBuilder", "newBuilder", "create", "build", "getOptions", "getPath", "setExists", "existsDefaults", "mergeFrom", "checkUri", "rpc", "getDefaultInstance", "equals", "get", "getExists", "setOptions", "retryRPC", "setPath", "getLoadMetadataType", "checkParentPermission", "shouldLoadMetadataIfNotExists", "fullPathExists", "lockInodePath", "loadMetadataIfNotExist", "syncMetadata", "getCommonOptions", "createRpcContext", "setSucceeded", "setCommonOptions", "createAuditContext", "setLoadType", "setAllowed", "getJournalContext", "isDirectory", "isFile" ]
    }, {
      "name" : "getDependencies",
      "visibility" : "public",
      "methodCalls" : [ "emptySet" ]
    }, {
      "name" : "getMountIdFromUfsPath",
      "visibility" : "public",
      "methodCalls" : [ "getMountId", "getMountInfo", "getMountTable", "reverseResolve" ]
    }, {
      "name" : "checkAccess",
      "visibility" : "public",
      "methodCalls" : [ "setSucceeded", "getMessage", "checkPermission", "fullPathExists", "syncMetadata", "getJournalContext", "createRpcContext", "fromProto", "getCommonOptions", "getBits", "lockInodePath", "createAuditContext", "setPath", "newBuilder", "setOptions", "retryRPC", "checkAccessDefaults", "checkUri", "debug", "build", "mergeFrom", "rpc", "call", "getDefaultInstance", "getOptions", "checkAccess", "create", "getPath", "toBuilder" ]
    }, {
      "name" : "createFile",
      "visibility" : "public",
      "methodCalls" : [ "retryRPC", "getIncreasingByteArray", "getAbsolutePath", "writeBufferToFile", "add", "createTempFile", "setLoadMetadataType", "syncMetadata", "createRpcContext", "setSucceeded", "checkUnderWritableMountPoint", "lockInodePath", "warn", "createAuditContext", "createFileInternal", "setUpdateTimestamps", "getParentInodeOrNull", "isPersisted", "setSyncIntervalMs", "checkParentPermission", "setSrcInode", "getLastExistingInode", "inc", "getJournalContext", "setAllowed", "setCommonOptions", "getCommonOptions", "getInode", "setOptions", "getFileInfo", "setPath", "call", "global", "put", "createFile", "getPath", "toProto", "setFileInfo", "create", "getOptions", "getCheckS3BucketPath", "toBuilder", "build", "newBuilder", "withTracker", "getParent", "invalidate", "setUfsPath", "rpc", "getAcl", "mergeFrom", "checkUri", "getMountId", "debug", "delete", "setAcl", "createFileDefaults", "getUfsPath", "setMountId", "getDefaultInstance", "getRecursive", "setMode", "defaults", "getMode", "hasRecursive", "get", "getPathConf", "fromProto", "hasMode", "setCreateParent" ]
    }, {
      "name" : "mount",
      "visibility" : "public",
      "methodCalls" : [ "getParentInodeOrNull", "stream", "compareAndSet", "getFileSystemName", "supplyAsync", "length", "set", "forEach", "canHandleShutdownHooks", "add", "umount", "substring", "get", "getRuntime", "toArray", "size", "map", "endsWith", "addShutdownHook", "getJournalContext", "createRpcContext", "checkUnderWritableMountPoint", "syncMetadata", "normalizePath", "setSrcInode", "call", "global", "checkNotNull", "mount", "takeRecords", "getOptions", "create", "getMessage", "getAlluxioPath", "join", "getUfsPath", "withTracker", "build", "record", "toBuilder", "getRecorder", "newBuilder", "rpc", "mountDefaults", "debug", "getDefaultInstance", "mergeFrom", "getPath", "getPathConf", "checkUri", "setOptions", "setUfsPath", "retryRPC", "toString", "setAlluxioPath", "createAuditContext", "checkParentPermission", "setAllowed", "getRemount", "getCommonOptions", "lockInodePath", "getUri", "setSucceeded", "info", "inc" ]
    }, {
      "name" : "getStateLockSharedWaitersAndHolders",
      "visibility" : "public",
      "methodCalls" : [ "getStateLockManager", "getSharedWaitersAndHolders" ]
    }, {
      "name" : "getRootInodeOwner",
      "visibility" : "public",
      "methodCalls" : [ "getRootUserName" ]
    }, {
      "name" : "cleanupUfs",
      "visibility" : "public",
      "methodCalls" : [ "get", "acquireUfsResource", "getReadOnly", "getValue", "getMountTable", "getMountId", "getOptions", "entrySet", "error" ]
    }, {
      "name" : "getInodeCount",
      "visibility" : "public",
      "methodCalls" : [ "getInodeCount", "longValue" ]
    }, {
      "name" : "syncMetadata",
      "visibility" : "public",
      "methodCalls" : [ "fromProto", "syncPath", "getLoadDescendantType", "toProtoTasks", "getDirectoryLoadType", "collect", "addAllTask", "toList", "error", "getGroupId", "waitAllComplete", "setOptions", "retryRPC", "build", "newBuilder", "setPath", "acquireMasterClientResource", "get", "call", "syncMetadata", "create", "getPath", "toBuilder", "getOptions" ]
    }, {
      "name" : "getPath",
      "visibility" : "public",
      "methodCalls" : [ "getInode", "lockFullInodePath", "format", "get", "orElseThrow", "getPath", "commitPath", "tempPath", "toString", "getRootPath" ]
    }, {
      "name" : "setAcl",
      "visibility" : "public",
      "methodCalls" : [ "getRecursive", "getDescendants", "syncMetadata", "inc", "setAllowed", "getJournalContext", "setSucceeded", "getCommonOptions", "checkSetAttributePermission", "lockInodePath", "createRpcContext", "createAuditContext", "getMessage", "fullPathExists", "getThis", "copyOf", "create", "getAction", "setAcl", "getEntriesList", "getPath", "toBuilder", "collect", "map", "toList", "build", "call", "withTracker", "newBuilder", "getOptions", "stream", "updateMask", "isEmpty", "getDefaultACL", "isDefault", "setEntry", "applyAndJournal", "getDefaultInstance", "checkUri", "setAclDefaults", "debug", "mergeFrom", "rpc", "get", "setAclEntries", "retryRPC", "setAction", "setPath", "addAllEntries", "setOptions" ]
    }, {
      "name" : "getLostFiles",
      "visibility" : "public",
      "methodCalls" : [ "next", "getLostBlocksIterator", "getContainerId", "hasNext", "createFileId", "add" ]
    }, {
      "name" : "getNewBlockIdForFile",
      "visibility" : "public",
      "methodCalls" : [ "setSucceeded", "checkPermission", "inc", "lockFullInodePath", "getInodeOrNull", "getJournalContext", "createAuditContext", "setAllowed", "getInode", "newBlock", "createRpcContext", "setPath", "getId", "retryRPC", "setOptions", "getNewBlockIdForFile", "call", "newBuilder", "setId", "build", "getPath" ]
    }, {
      "name" : "deleteInternal",
      "visibility" : "public",
      "methodCalls" : [ "isSkipNotPersisted", "isSyncPoint", "getPath", "add", "isPersisted", "asFile", "inc", "addAll", "getParentId", "isFile", "getLockPattern", "isEmpty", "warn", "get", "contains", "remove", "getId", "isDirectory", "asDirectory", "getChildCount", "toString", "size", "fullPathExists", "getUfsMountPointUri", "millis", "resolve", "isRootId", "isCompleted", "getAlluxioOnly", "stopSyncAndJournal", "setCancelState", "checkPermission", "getOptions", "deleteInode", "getUri", "checkState", "flush", "getUfsOpsSavedCounter", "getRecursive", "delete", "getName", "build", "hasChildren", "getSecond", "getFirst", "getDescendants", "throwIfCancelled", "isMountPoint", "getJournalContext", "getInode", "getAncestorInode", "getMessage", "set" ]
    }, {
      "name" : "validateInodeBlocks",
      "visibility" : "public",
      "methodCalls" : [ "inodeIdExists", "fileIdFromBlockId", "validateBlocks" ]
    }, {
      "name" : "getScheduler",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "delete",
      "visibility" : "public",
      "methodCalls" : [ "getPagePath", "getDeleteMountPoint", "size", "getMessage", "format", "createRpcContext", "join", "getAlluxioOnly", "getReadOnly", "findChildrenMountPoints", "getJournalContext", "getAlluxioUri", "getCommonOptions", "fullPathExists", "hasDeleteMountPoint", "add", "setSucceeded", "checkParentPermission", "setAllowed", "getSyncParentNextTime", "deleteInternal", "createAuditContext", "getOptions", "syncMetadata", "hasSyncParentNextTime", "getParentInodeDirectory", "lockInodePath", "setDirectChildrenLoaded", "checkUnderWritableMountPoint", "isEmpty", "writeTag", "decrementAndGet", "deleteTag", "getSlotIndex", "getBucketIndex", "readTag", "dec", "unlockWrite", "getStatus", "getLock", "removePage", "writeLock", "setPath", "retryRPC", "setOptions", "hasRecursive", "deleteDirectory", "deleteFile", "getRecursive", "getAlluxioPath", "incrementWriteOps", "deleteDefaults", "checkUri", "getDefaultInstance", "toBuilder", "mergeFrom", "rpc", "error", "propagateIfPossible", "currentThread", "inc", "interrupt", "callWithTimeout", "isDebugEnabled", "invalidate", "hasNext", "delete", "call", "global", "deleteExistingFile", "deleteExistingDirectory", "setRecursive", "warn", "acquireUfsResource", "get", "resolve", "isFile", "toString", "defaults", "getUri", "isDirectory", "getParent", "info", "getMountTable", "hasPrefix", "keySet", "getMountId", "getPath", "build", "newBuilder", "removeMount", "setAlluxioPath", "containsKey", "applyAndJournal", "equals", "getPageIndex", "getFileId", "remove", "getKeyFromPageId", "release", "array", "debug", "exists", "checkNotNull", "newDirectoryStream", "iterator" ]
    }, {
      "name" : "checkConsistency",
      "visibility" : "public",
      "methodCalls" : [ "checkPermission", "createRpcContext", "setSrcInode", "setAllowed", "getCommonOptions", "getJournalContext", "getInodeOrNull", "getPattern", "setSucceeded", "syncMetadata", "createAuditContext", "lockInodePath", "getInconsistentPathsList", "retryRPC", "setPath", "setOptions", "getPath", "create", "toBuilder", "call", "newBuilder", "size", "checkConsistency", "getOptions", "addAllInconsistentPaths", "build", "add" ]
    }, {
      "name" : "createDirectoryInternal",
      "visibility" : "public",
      "methodCalls" : [ "checkState", "getId", "newBuilder", "getUfsStatus", "getUri", "updateInode", "processExisting", "inc", "build", "getInode", "setUfsFingerprint", "createPath", "serialize", "toString", "getParsedFingerprint", "getLockPattern", "isPersisted", "asDirectory", "create", "getUnderFSType", "get", "acquireUfsResource", "setId" ]
    }, {
      "name" : "getName",
      "visibility" : "public",
      "methodCalls" : [ "format", "capitalize", "getPath", "lastIndexOf", "substring", "getName" ]
    }, {
      "name" : "getInMemoryFiles",
      "visibility" : "public",
      "methodCalls" : [ "lockFullInodePath" ]
    }, {
      "name" : "createJournalContext",
      "visibility" : "public",
      "methodCalls" : [ "close", "createJournalContext", "getStateLockManager", "lockShared", "getName", "get" ]
    }, {
      "name" : "getFileInfo",
      "visibility" : "public",
      "methodCalls" : [ "setAllowed", "stat", "getLoadMetadataType", "getAccessMode", "setSucceeded", "setCreateAncestors", "millis", "setCommonOptions", "setTtl", "syncMetadata", "checkParentPermission", "dec", "isCompleted", "createAuditContext", "build", "getFileInfo", "retryRPC", "setFileId", "newBuilder", "fromProto", "getFileId", "setFileInfo", "getOptions", "call", "toProto", "loadMetadataIfNotExist", "shouldLoadMetadataIfNotExists", "inc", "hasAccessMode", "lockFullInodePath", "getUpdateTimestamps", "ensureFullPathAndUpdateCache", "getCommonOptions", "setLoadMetadataType", "getUfsOpsSavedCounter", "resolve", "createRpcContext", "hasDirectUfsAccess", "setSrcInode", "getTtlAction", "getDirectUfsAccess", "getInodeOrNull", "getPath", "lockInodePath", "getUri", "updateAccessTime", "imply", "mergeFrom", "setLoadType", "equals", "getJournalContext", "getInode", "setTtlAction", "debug", "isFolder", "getUfsMountPointUri", "getTtl" ]
    }, {
      "name" : "stop",
      "visibility" : "public",
      "methodCalls" : [ "checkArgument", "stopFS", "reset", "reloadProperties", "waitFor", "destroyForcibly", "assertAllLocksReleased", "clearProperty", "clearClients", "isAlive", "peekDirectoryId", "getName", "stopInternal", "checkState", "getConnectors", "join", "reverse", "currentThread", "peekNewContainerId", "interrupt", "getServers", "equals", "cancel", "close", "stop", "info", "awaitTermination", "warn", "shutdownNow", "toString", "countDown", "stopMasterComponents", "forEach", "of", "shutdownAndAwaitTermination", "values", "getClass", "getSimpleName", "stopMetricsSystem", "stopWebServer", "stopGrpcServer", "stopRejectingServer", "set", "get", "stopRpcExecutor" ]
    }, {
      "name" : "getDisplayMountPointInfo",
      "visibility" : "public",
      "methodCalls" : [ "get", "toString", "isMountPoint", "format", "getMountTable" ]
    }, {
      "name" : "getDelegate",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "createRpcContext",
      "visibility" : "public",
      "methodCalls" : [ "withTracker", "createJournalContext", "createRpcContext", "createBlockDeletionContext" ]
    }, {
      "name" : "getUfsInfo",
      "visibility" : "public",
      "methodCalls" : [ "setReadOnly", "putAllProperties", "setShared", "getUfsUri", "setUri", "mergeFrom", "getPropertiesMap", "getShared", "getReadOnly", "getMountInfo", "setMountOptions", "getMountId", "getOptions", "call", "toProto", "setUfsInfo", "build", "newBuilder", "setMountId", "getUfsInfo", "retryRPC" ]
    }, {
      "name" : "scheduleAsyncPersistence",
      "visibility" : "public",
      "methodCalls" : [ "isCompleted", "createRpcContext", "getJournalContext", "getInodeFile", "getUri", "lockFullInodePath", "scheduleAsyncPersistence", "build", "getOptions", "toBuilder", "call", "getPath", "newBuilder", "create", "getFileId", "put", "containsKey", "error", "add", "get" ]
    }, {
      "name" : "getWorkerInfoList",
      "visibility" : "public",
      "methodCalls" : [ "getWorkerInfosList", "getDefaultInstance", "fromProto", "retryRPC", "get", "getMessage", "isInSafeMode", "toList", "addAllWorkerInfos", "map", "getWorkerInfoList", "build", "call", "newBuilder", "stream", "collect", "readLock", "generateClientWorkerInfo", "size", "add" ]
    }, {
      "name" : "createDirectory",
      "visibility" : "public",
      "methodCalls" : [ "retryRPC", "getParentInodeOrNull", "getInode", "getLastExistingInode", "setLoadMetadataType", "createDirectoryInternal", "checkParentPermission", "setSyncIntervalMs", "getCommonOptions", "checkUnderWritableMountPoint", "isPersisted", "getFileId", "setCommonOptions", "getId", "inc", "lockInodePath", "createRpcContext", "setAllowed", "createAuditContext", "getJournalContext", "setSucceeded", "syncMetadata", "setUpdateTimestamps", "getFileInfo", "setSrcInode", "setOptions", "setPath", "global", "call", "createDirectory", "setAllowExists", "warn", "setGroupBits", "newBuilder", "setRecursive", "build", "setCheckS3BucketPath", "ok", "setOwnerBits", "setOtherBits", "setMode", "toObjectS3Exception", "withTracker", "getCheckS3BucketPath", "getOptions", "toBuilder", "create", "getPath", "getParent", "invalidate", "mergeFrom", "getDefaultInstance", "debug", "checkUri", "rpc", "createDirectoryDefaults", "getPathConf", "mkdirs", "hasMode", "defaults", "get", "fromProto", "setCreateParent", "hasRecursive", "getRecursive", "getMode" ]
    }, {
      "name" : "startSync",
      "visibility" : "public",
      "methodCalls" : [ "add", "toString", "format", "createRpcContext", "createAuditContext", "getPattern", "startSyncAndJournal", "checkParentPermission", "getParentInodeOrNull", "lockInodePath", "setAllowed", "setSucceeded", "getJournalContext", "retryRPC", "setPath", "rpc", "debug", "startSync", "newBuilder", "build", "getPath", "call" ]
    }, {
      "name" : "close",
      "visibility" : "public",
      "methodCalls" : [ "close", "setBucketName", "getMd5HashAsBase64", "getMd5", "setDataInputFile", "setMd5Hash", "getResponseCode", "uploadFile", "getErrorStream", "getInputStream", "setContentType", "withMetadata", "uploadObject", "waitForUploadResult", "upload", "getTransferManager", "encode", "getObject", "setSSEAlgorithm", "getContainer", "getUploadPath", "setContentMd5", "setBucket", "unmount", "setKey", "newInputStream", "getEtag", "toPath", "setContent", "setOptions", "reloadProperties", "setContentLength", "getETag", "length", "setContentMD5", "getAndSet", "encodeBase64", "getOwner", "getMessage", "setOwner", "getGroup", "retry", "digest", "putObject", "getAndIncrement", "createEmptyObject", "delete", "uploadPart", "getPath", "waitForAllPartsUpload", "encodeBase64String", "from", "decrement", "releaseConnection", "getValue", "getSaslServerDriver", "getKey", "entrySet", "checkState", "getBlockId", "disconnect", "dispose", "lock", "closeResource", "checkNotNull", "toFsProto", "setAsyncPersistOptions", "acquireMasterClientResource", "isStore", "setCommonOptions", "setUfsLength", "isAsyncPersist", "isSyncPersist", "scheduleAsyncPersistDefaults", "getPathConf", "buildPartial", "getCommonOptions", "randomUUID", "completeFile", "setOperationId", "getDataWriter", "setPersistenceWaitTime", "decrementAndGet", "build", "newBuilder", "toBuilder", "getPersistenceWaitTime", "getUfsContentHash", "deRef", "rethrow", "run", "getRefCount", "unlock", "dec", "completeLog", "isOpen", "getStart", "shutdownAndAwaitTermination", "getRootPath", "getPageStore", "isPresent", "empty", "getContentHash", "ifPresent", "hasContentHash", "waitForComplete", "decreaseUsageCount", "cleanupSession", "uniformTimer", "time", "commitBlock", "getWriteType", "removeMetrics", "getNextSequenceNumber", "currentLogName", "getCheckpointDir", "getEnd", "format", "renameFile", "mkdirs", "exists", "getSnapshot", "accept", "deleteFile", "getLatestCheckpoint", "onCompleted", "writeLock", "getLocation", "appendMergedJournals", "flush", "update", "completeCurrentLog", "completedFuture", "runAsync", "remove", "stop", "getChannelKey", "whenComplete", "complete", "getServers", "toString", "debug", "unmodifiableCollection", "process", "addSuppressed", "propagateIfPossible", "getSecond", "getFirst", "isAlive", "set", "get", "cancel", "size", "isDone", "reset", "toArray", "clear", "isEmpty", "allOf", "reverse", "add", "lockForClosing", "call", "invalidate", "global", "shutdownGracefully", "info", "awaitTermination", "warn", "awaitUninterruptibly", "currentThread", "getMs", "getBindAddress", "forEach", "values", "getBlockSize", "join", "interrupt", "append", "nanoTime", "shutdown", "poll", "shutdownNow", "isShutdown", "error", "isClosed", "counter", "umount", "getName", "inc", "readerClosed", "getBlockLocation", "writerClosed", "register", "create", "getSessionId", "shutDown", "release" ]
    }, {
      "name" : "rename",
      "visibility" : "public",
      "methodCalls" : [ "setDstPath", "syncMetadata", "lockInodePathPair", "createRpcContext", "inc", "getSecond", "setAllowed", "checkUnderWritableMountPoint", "createAuditContext", "setSucceeded", "getJournalContext", "getParentInodeOrNull", "setSrcInode", "getFirst", "getPattern", "checkParentPermission", "getCommonOptions", "getInode", "getClusterConf", "setOptions", "retryRPC", "call", "global", "checkNotNull", "rename", "withTracker", "getDstPath", "create", "getOptions", "getPath", "build", "newBuilder", "toBuilder", "applyAndJournal", "getParent", "invalidate", "rpc", "mergeFrom", "getDefaultInstance", "getPathConf", "renameDefaults", "debug", "checkUri", "isFolder", "joinUnsafe", "error", "toString", "warn", "getStatus", "incrementWriteOps", "getAlluxioPath", "getName", "get", "renameDirectory", "isFile", "format", "renameFile", "setPath" ]
    }, {
      "name" : "workerHeartbeat",
      "visibility" : "public",
      "methodCalls" : [ "warn", "setAttribute", "setUfsFingerprint", "getPath", "size", "setPersisted", "getPersistedFileFingerprintsList", "setPersistOptions", "getOptions", "error", "mergeFrom", "checkNotNull", "getWorkerAddress", "get", "readLock", "getValue", "add", "updateLastUpdatedTimeMs", "getDefaultInstance", "setRegisterCommand", "getHost", "getKey", "getCoordinator", "newBuilder", "setWorkerHost", "getWorkerId", "put", "updateTasks", "containsKey", "pollAllPendingCommands", "getJobId", "build", "entrySet", "singletonList", "getFirstByField", "putWorkerMetrics", "getExecutorService", "submit", "collect", "format", "addAllData", "of", "getStateUnsafe", "lockWorkerMeta", "getRpcPort", "stream", "flatMap", "info", "isEmpty", "values", "setCommandType", "toList", "getToRemoveBlocks", "updateCapacityBytes", "isRejected", "updateUsedBytes", "addLostStorage" ]
    }, {
      "name" : "getUfsAddress",
      "visibility" : "public",
      "methodCalls" : [ "getString" ]
    }, {
      "name" : "needsSync",
      "visibility" : "public",
      "methodCalls" : [ "getSyncPathCache", "notifyInvalidation", "retryRPC", "build", "setPath", "newBuilder", "checkUri", "rpc", "getPath", "getDefaultInstance", "call", "needsSync" ]
    }, {
      "name" : "createCompleteFileInternalForMetadataSync",
      "visibility" : "public",
      "methodCalls" : [ "processExisting", "getUri", "getNewContainerId", "createBlockId", "getJournalContext", "min", "createFileInternal", "getOptions", "getContentLength", "add", "setMetadataLoad", "getUfsFingerprint", "setCompleteFileInfo", "setFingerprint", "getBlockSizeBytes" ]
    }, {
      "name" : "getMountPointInfoSummary",
      "visibility" : "public",
      "methodCalls" : [ "entrySet", "getValue", "setSucceeded", "put", "createAuditContext", "getMountTable", "getKey", "getMountPointInfoSummary" ]
    }, {
      "name" : "activeSyncMetadata",
      "visibility" : "public",
      "methodCalls" : [ "createRpcContext", "size", "equals", "setSyncIntervalMs", "getSyncPathCache", "newBuilder", "invokeAll", "toString", "info", "add", "currentThread", "isEmpty", "debug", "millis", "warn", "createSyncLockingScheme", "sync", "warnWithException", "build", "interrupt" ]
    }, {
      "name" : "getMountTable",
      "visibility" : "public",
      "methodCalls" : [ "setCheckUfs", "fromProto", "getMountPointsMap", "retryRPC", "rpc", "getMountTable", "unmodifiableMap", "hasCheckUfs", "put", "getCheckUfs", "newBuilder", "getKey", "call", "build", "entrySet", "getMountPointInfoSummary", "toProto", "getValue", "putAllMountPoints" ]
    }, {
      "name" : "cancelSyncMetadata",
      "visibility" : "public",
      "methodCalls" : [ "isPresent", "getTasks", "map", "reduce", "filter", "getId", "getTaskTracker", "addSuppressed", "getTaskGroup", "getTaskInfo", "cancelTaskById", "setTaskGroupId", "newBuilder", "retryRPC", "build", "acquireMasterClientResource", "get", "call", "getTaskGroupId", "cancelSyncMetadata" ]
    }, {
      "name" : "getTimeSeries",
      "visibility" : "public",
      "methodCalls" : [ "getTimeSeries", "values", "copyOf" ]
    }, {
      "name" : "unmount",
      "visibility" : "public",
      "methodCalls" : [ "inc", "lockInodePath", "setSucceeded", "getInodeOrNull", "createRpcContext", "getJournalContext", "setAllowed", "checkParentPermission", "createAuditContext", "retryRPC", "setAlluxioPath", "setOptions", "debug", "getDefaultInstance", "toBuilder", "checkUri", "mergeFrom", "rpc", "getPath", "unmountDefaults", "getAlluxioPath", "build", "newBuilder", "global", "unmount", "call" ]
    }, {
      "name" : "getFileSystemMasterView",
      "visibility" : "public",
      "methodCalls" : [ ]
    }, {
      "name" : "getFileBlockInfoList",
      "visibility" : "public",
      "methodCalls" : [ "getInodeOrNull", "inc", "setAllowed", "lockFullInodePath", "setSucceeded", "checkPermission", "createAuditContext", "getFileBlockInfoList" ]
    } ],
    "imports" : [ "java.util.function.Function", "alluxio.proto.journal.Journal.JournalEntry", "alluxio.exception.AccessControlException", "java.util.Spliterators", "java.util.SortedMap", "alluxio.Constants", "alluxio.master.metrics.TimeSeriesStore", "alluxio.underfs.UfsFileStatus", "alluxio.grpc.GetSyncProgressPResponse", "alluxio.recorder.Recorder", "alluxio.proto.journal.File.RenameEntry", "alluxio.underfs.options.MkdirsOptions", "alluxio.master.file.meta.FileSystemMasterView", "alluxio.master.journal.JournaledGroup", "alluxio.clock.SystemClock", "alluxio.exception.status.UnavailableException", "alluxio.wire.MountPointInfo", "alluxio.master.file.InodeSyncStream.SyncStatus.NOT_NEEDED", "java.util.List", "alluxio.collections.Pair", "alluxio.master.journal.JournalContext", "alluxio.exception.InvalidPathException", "alluxio.wire.FileInfo", "alluxio.retry.RetryPolicy", "alluxio.client.job.JobMasterClientPool", "alluxio.util.IdUtils", "alluxio.job.wire.JobInfo", "alluxio.master.file.contexts.SetAclContext", "java.time.Clock", "alluxio.master.file.meta.MountTable", "alluxio.grpc.LoadMetadataPType", "alluxio.wire.WorkerInfo", "alluxio.master.file.contexts.SetAttributeContext", "alluxio.wire.FileSystemCommandOptions", "alluxio.grpc.SyncMetadataPResponse", "java.util.stream.StreamSupport", "alluxio.exception.status.ResourceExhaustedException", "alluxio.exception.InvalidFileSizeException", "alluxio.grpc.SetAttributePOptions", "alluxio.grpc.SyncMetadataAsyncPResponse", "alluxio.proto.journal.File", "alluxio.job.plan.persist.PersistConfig", "java.util.stream.Collectors", "java.util.function.Supplier", "io.grpc.ServerInterceptors", "java.util.concurrent.LinkedBlockingQueue", "alluxio.master.CoreMasterContext", "alluxio.master.journal.Journaled", "alluxio.wire.PersistCommandOptions", "alluxio.master.file.meta.LockingScheme", "alluxio.util.executor.ExecutorServiceFactories", "alluxio.proto.journal.File.NewBlockEntry", "alluxio.ClientContext", "alluxio.master.file.meta.InodeDirectoryIdGenerator", "alluxio.client.file.FileSystemContext", "alluxio.master.metastore.DelegatingReadOnlyInodeStore", "alluxio.master.file.InodeSyncStream.SyncStatus.OK", "com.codahale.metrics.Gauge", "alluxio.master.file.contexts.LoadMetadataContext", "alluxio.exception.AlluxioException", "alluxio.grpc.LoadMetadataPOptions", "alluxio.exception.ExceptionMessage", "alluxio.util.executor.ExecutorServiceFactory", "alluxio.underfs.UnderFileSystem", "alluxio.wire.FileBlockInfo", "alluxio.exception.FileAlreadyCompletedException", "alluxio.metrics.MetricInfo", "alluxio.master.file.meta.options.MountInfo", "java.util.HashSet", "java.util.concurrent.atomic.AtomicInteger", "com.google.common.collect.Sets", "alluxio.exception.status.InvalidArgumentException", "alluxio.master.file.meta.UfsBlockLocationCache", "alluxio.collections.PrefixList", "alluxio.grpc.GrpcUtils", "com.google.common.collect.ImmutableMap", "alluxio.proto.journal.File.SetAclEntry", "alluxio.exception.DirectoryNotEmptyException", "com.google.common.annotations.VisibleForTesting", "alluxio.worker.job.JobMasterClientContext", "alluxio.conf.Configuration", "alluxio.master.CoreMaster", "alluxio.heartbeat.HeartbeatContext", "alluxio.master.file.meta.InodeTree.LockPattern", "alluxio.metrics.MetricsSystem", "alluxio.grpc.GetStatusPOptions", "alluxio.master.file.InodeSyncStream.SyncStatus.FAILED", "alluxio.wire.SyncPointInfo", "java.util.Arrays", "alluxio.exception.status.FailedPreconditionException", "alluxio.master.scheduler.DefaultWorkerProvider", "alluxio.master.file.meta.LockedInodePathList", "alluxio.security.authorization.AclEntryType", "alluxio.master.file.contexts.ExistsContext", "alluxio.master.file.contexts.CreateDirectoryContext", "java.util.concurrent.TimeUnit", "alluxio.grpc.ServiceType", "alluxio.wire.PersistFile", "alluxio.master.file.contexts.CheckConsistencyContext", "alluxio.master.file.contexts.SyncMetadataContext", "java.util.Objects", "alluxio.master.file.contexts.CallTracker", "alluxio.underfs.MasterUfsManager", "alluxio.underfs.Fingerprint", "alluxio.grpc.MountPOptions", "alluxio.master.file.meta.InodeFile", "alluxio.master.file.contexts.MountContext", "alluxio.wire.BlockLocation", "org.apache.commons.lang3.StringUtils", "alluxio.master.file.contexts.ScheduleAsyncPersistenceContext", "alluxio.exception.runtime.NotFoundRuntimeException", "java.util.stream.Stream", "alluxio.metrics.Metric", "alluxio.master.metastore.ReadOnlyInodeStore", "alluxio.heartbeat.FixedIntervalSupplier", "alluxio.master.file.contexts.ListStatusContext", "alluxio.master.file.meta.InodeDirectoryView", "java.util.Collections", "java.util.concurrent.ThreadPoolExecutor", "alluxio.master.file.contexts.DeleteContext", "alluxio.exception.status.NotFoundException", "alluxio.master.ProtobufUtils", "alluxio.master.file.meta.InodePathPair", "org.slf4j.LoggerFactory", "alluxio.metrics.TimeSeries", "alluxio.exception.UnexpectedAlluxioException", "alluxio.master.journal.ufs.UfsJournalSystem", "alluxio.master.block.BlockMaster", "alluxio.master.file.contexts.CheckAccessContext", "alluxio.resource.CloseableResource", "alluxio.security.authentication.AuthenticatedClientUser", "java.text.MessageFormat", "java.util.TreeMap", "alluxio.master.journal.DelegatingJournaled", "java.util.Map", "java.io.IOException", "alluxio.proto.journal.File.UpdateInodeFileEntry.Builder", "alluxio.util.ModeUtils", "com.google.common.collect.ImmutableSet", "alluxio.grpc.GrpcService", "alluxio.proto.journal.File.UpdateInodeEntry", "org.slf4j.Logger", "alluxio.underfs.UfsMode", "alluxio.grpc.CancelSyncMetadataPResponse", "alluxio.heartbeat.HeartbeatThread", "javax.annotation.concurrent.NotThreadSafe", "alluxio.master.file.meta.Inode", "alluxio.proto.journal.File.UpdateInodeFileEntry", "alluxio.metrics.MetricInfo.UFS_OP_SAVED_PREFIX", "java.util.concurrent.ExecutorService", "alluxio.master.file.contexts.FreeContext", "alluxio.resource.CloseableIterator", "alluxio.grpc.TtlAction", "alluxio.master.file.meta.LockedInodePath", "alluxio.master.file.contexts.GetStatusContext", "alluxio.master.file.contexts.WorkerHeartbeatContext", "java.util.concurrent.ConcurrentHashMap", "alluxio.grpc.LoadDescendantPType", "alluxio.grpc.DeletePOptions", "java.util.concurrent.Callable", "alluxio.grpc.SetAclAction", "alluxio.exception.FileDoesNotExistException", "alluxio.util.UnderFileSystemUtils", "java.util.Collection", "alluxio.master.audit.AsyncUserAccessAuditLogWriter", "com.google.common.base.Preconditions", "alluxio.AlluxioURI", "com.codahale.metrics.Counter", "alluxio.master.metastore.InodeStore", "alluxio.util.ThreadFactoryUtils", "alluxio.master.audit.AuditContext", "alluxio.master.file.contexts.CreateFileContext", "alluxio.util.SecurityUtils", "alluxio.master.file.contexts.CompleteFileContext", "java.util.HashMap", "alluxio.master.file.meta.PersistenceState", "alluxio.util.io.PathUtils", "alluxio.underfs.UnderFileSystemConfiguration", "alluxio.file.options.DescendantType", "alluxio.master.file.meta.InodeTree", "alluxio.master.file.meta.InodeLockManager", "alluxio.master.file.contexts.RenameContext", "alluxio.master.journal.FileSystemMergeJournalContext", "java.nio.charset.StandardCharsets", "alluxio.master.journal.NoopJournalContext", "alluxio.util.CommonUtils", "alluxio.master.file.mdsync.TaskGroup", "alluxio.underfs.UfsManager", "alluxio.util.proto.ProtoUtils", "alluxio.resource.LockResource", "alluxio.security.authentication.AuthType", "alluxio.master.scheduler.JournaledJobMetaStore", "com.google.common.collect.Streams", "java.util.Iterator", "com.google.protobuf.ByteString", "java.util.ArrayList", "alluxio.wire.FileSystemCommand", "alluxio.wire.CommandType", "alluxio.security.authorization.AclEntry", "alluxio.wire.BlockInfo", "alluxio.grpc.FileSystemMasterCommonPOptions", "alluxio.exception.BlockInfoException", "alluxio.master.block.BlockId", "alluxio.master.scheduler.Scheduler", "alluxio.exception.ConnectionFailedException", "alluxio.security.authentication.ClientContextServerInjector", "alluxio.exception.FileAlreadyExistsException", "alluxio.metrics.MetricKey", "alluxio.master.journal.checkpoint.CheckpointName", "alluxio.master.file.meta.UfsSyncPathCache", "alluxio.master.file.contexts.InternalOperationContext", "java.util.Optional", "com.codahale.metrics.MetricRegistry", "alluxio.master.file.meta.UfsAbsentPathCache", "alluxio.master.file.contexts.OperationContext", "alluxio.wire.UfsInfo", "alluxio.util.LogUtils", "alluxio.exception.status.PermissionDeniedException", "alluxio.master.file.activesync.ActiveSyncManager", "java.util.Stack", "alluxio.security.authorization.Mode", "java.util.Set", "alluxio.master.file.mdsync.DefaultSyncProcess", "alluxio.conf.PropertyKey", "alluxio.Server", "alluxio.master.file.meta.InodeDirectory", "java.io.FileNotFoundException", "alluxio.underfs.UfsStatus", "alluxio.client.job.JobMasterClient", "alluxio.retry.CountingRetry", "com.google.common.collect.Iterables", "javax.annotation.Nullable" ]
  } ]
}